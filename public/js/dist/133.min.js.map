{"version":3,"file":"133.min.js","sources":["webpack:///./src/app/components/wizard/components/stepContent/sections/sectionTypes/wizardSummery/components/feesInfo_addedparcels.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { host, filesHost } from \"config\";\r\nimport {withTranslation} from \"react-i18next\";\r\nimport {\r\n  convertToArabic,\r\n  localizeNumber,\r\n  getInfo,\r\n  remove_duplicate,\r\n  checkImage,\r\n  map_object,\r\n} from \"../../../../../../../inputs/fields/identify/Component/common/common_func\";\r\nimport { esriRequest } from \"../../../../../../../inputs/fields/identify/Component/common/esri_request\";\r\nimport { mapUrl } from \"../../../../../../../inputs/fields/identify/Component/mapviewer/config/map\";\r\nimport { map, get, assign, isEmpty } from \"lodash\";\r\nimport { mapStateToProps, mapDispatchToProps } from \"../mapping\";\r\nimport { connect } from \"react-redux\";\r\nimport { workFlowUrl } from \"../../../../../../../../../imports/config\";\r\nimport { CalculateTotalFees } from \"../../../../../../../../../main_helpers/functions/fees\";\r\nclass feesInfo_addedparcels extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  print() {\r\n    const {\r\n      currentModule: { record },\r\n    } = this.props;\r\n\r\n    let id = record.id;\r\n    window.open(printHost + `/#/parcels_invoice/${id}`, \"_blank\");\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      mainObject: {\r\n        fees: {\r\n          feesInfo: { feesValue, notes, feesList, is_paid },\r\n        },\r\n      },\r\n      currentModule: {\r\n        record: { invoice_number, invoice_date },\r\n      },\r\n    } = this.props;\r\n    let suggestionsParcels =\r\n      this.props.mainObject?.data_msa7y?.msa7yData?.cadDetails\r\n        ?.suggestionsParcels ||\r\n      this.props.mainObject?.suggestParcel?.suggestParcel?.suggestParcels\r\n        ?.polygons;\r\n    return (\r\n      <div>\r\n        <table className=\"table table-bordered\">\r\n          <tbody>\r\n            <tr>\r\n              <td>المساحة الإجمالية للأرض بعد إضافة الزائدة التنظيمية</td>\r\n              <td>\r\n                {convertToArabic(\r\n                  suggestionsParcels\r\n                    ?.reduce((a, b) => {\r\n                      return a + +b.area;\r\n                    }, 0)\r\n                    ?.toFixed(2) + \" م2\"\r\n                )}\r\n              </td>\r\n            </tr>\r\n            {feesValue && (\r\n              <tr>\r\n                <td>رسوم الفاتورة</td>\r\n                <td>\r\n                  {convertToArabic(\r\n                    feesValue && typeof feesValue == \"string\"\r\n                      ? feesValue?.indexOf(\":\") != -1 &&\r\n                          feesValue?.split(\":\")[1]\r\n                      : feesValue || 0\r\n                  )}\r\n                </td>\r\n              </tr>\r\n            )}\r\n            <tr>\r\n              <td>حالة الدفع لجميع الفواتير</td>\r\n              <td>\r\n                <span>{is_paid ? \"تم الدفع\" : \"لم يتم الدفع\"}</span>\r\n              </td>\r\n            </tr>\r\n            {invoice_number && !feesList?.length && (\r\n              <>\r\n                <tr>\r\n                  <td>رقم الفاتورة</td>\r\n                  <td>{convertToArabic(invoice_number)} </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>تاريخ الفاتورة</td>\r\n                  <td>{convertToArabic(invoice_date)} هـ</td>\r\n                </tr>\r\n              </>\r\n            )}\r\n            {!invoice_number && feesList?.length && (\r\n              <tr>\r\n                <td>الفواتير</td>\r\n                <td>\r\n                  <table className=\"table table-bordered table-striped\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th>رقم الفاتورة</th>\r\n                        <th>تاريخ الفاتورة</th>\r\n                        <th>قيمة الفاتورة</th>\r\n                        <th>حالة الدفع</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {feesList.map((invoice) => {\r\n                        return (\r\n                          <tr>\r\n                            <td>\r\n                              <span>\r\n                                {convertToArabic(invoice.invoice_number)}\r\n                              </span>\r\n                            </td>\r\n                            <td>\r\n                              <span>\r\n                                {convertToArabic(invoice.invoice_date)}\r\n                              </span>\r\n                            </td>\r\n                            <td>\r\n                              <span>{convertToArabic(invoice.fees)} ريال</span>\r\n                            </td>\r\n                            <td>\r\n                              <span>\r\n                                {invoice.is_paid ? \"تم الدفع\" : \"لم يتم الدفع\"}\r\n                              </span>\r\n                            </td>\r\n                          </tr>\r\n                        );\r\n                      })}\r\n                    </tbody>\r\n                  </table>\r\n                </td>\r\n              </tr>\r\n            )}\r\n            {is_paid && (\r\n              <tr>\r\n                <td>طباعة الفاتورة</td>\r\n                <td>\r\n                  <button\r\n                    className=\"btn add-btnT\"\r\n                    onClick={this.print.bind(this)}\r\n                  >\r\n                    طباعة\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            )}\r\n            {/* {feesList?.length && feesValue && (\r\n              <tr>\r\n                <td>اجمالي الفواتير</td>\r\n                <td>\r\n                  {feesList?.length &&\r\n                    convertToArabic(\r\n                      ` ${CalculateTotalFees(\r\n                        { feesValue, notes, feesList, is_paid },\r\n                        false\r\n                      )} ريال`\r\n                    )}\r\n                </td>\r\n              </tr>\r\n            )}\r\n            {notes && (\r\n              <tr>\r\n                <td>ملاحظات الرسوم</td>\r\n                <td>{convertToArabic(notes)}</td>\r\n              </tr>\r\n            )} */}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withTranslation(\"labels\")(feesInfo_addedparcels));\r\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAQA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAKA;AAEA;AAAA;AAQA;AACA;AAwCA;AAAA;AAWA;AAsBA;AAWA;AACA;AAAA;AA+BA;AACA;AAEA;;;;A","sourceRoot":""}