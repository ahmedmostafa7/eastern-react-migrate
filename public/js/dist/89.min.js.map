{"version":3,"file":"89.min.js","sources":["webpack:///./src/app/components/inputs/fields/user_details_modal.js","webpack:///./src/app/components/inputs/mapping.js"],"sourcesContent":["import React from \"react\";\r\nimport { Input, Modal } from \"antd\";\r\nimport mainInput from \"app/helpers/main/input\";\r\nimport {withTranslation} from \"react-i18next\";\r\nimport { mapStateToProps, mapDispatchToProps } from \"../mapping\";\r\nimport { connect } from \"react-redux\";\r\nimport { get } from \"lodash\";\r\nclass UserDetailsModal extends mainInput {\r\n  componentDidMount() {\r\n    const { init_data } = this.props;\r\n    if (init_data) {\r\n      init_data(this.props);\r\n    }\r\n  }\r\n  state = { OpenModal: false };\r\n\r\n  render() {\r\n    const {\r\n      disabled,\r\n      textAfter,\r\n      className,\r\n      input,\r\n      label,\r\n      type,\r\n      placeholder,\r\n      style,\r\n      value,\r\n      defaultValue,\r\n      t,\r\n    } = this.props;\r\n    console.log(this.props);\r\n    return (\r\n      <>\r\n        <Modal\r\n          title={\"بيانات المستخدم\"}\r\n          visible={this.state.OpenModal}\r\n          onCancel={() => {\r\n            this.setState({ OpenModal: false });\r\n          }}\r\n          footer={null}\r\n          cancelText=\"اغلاق\"\r\n        >\r\n          {/* <table className=\"table table-bordered\">\r\n            <tbody>\r\n              <tr>\r\n                <td>اسم المستخدم</td>\r\n                <td>\r\n                  {get(\r\n                    this.props.mainObject.approvalSubmissionNotes.user,\r\n                    \"name\",\r\n                    \"\"\r\n                  )}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>رقم الهاتف</td>\r\n                <td>\r\n                  {get(\r\n                    this.props.mainObject.approvalSubmissionNotes.user,\r\n                    \"phone\",\r\n                    \"\"\r\n                  )}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>رقم الجوال</td>\r\n                <td>\r\n                  {get(\r\n                    this.props.mainObject.approvalSubmissionNotes.user,\r\n                    \"mobile\",\r\n                    \"\"\r\n                  )}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>البريد الالكترونى</td>\r\n                <td>\r\n                  {get(\r\n                    this.props.mainObject.approvalSubmissionNotes.user,\r\n                    \"email\",\r\n                    \"\"\r\n                  )}\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table> */}\r\n        </Modal>\r\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <h4>hh</h4>\r\n          <button type=\"button\" onClick={this.setState({ OpenModal: true })}>\r\n            بيانات المستخدم\r\n          </button>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n//export default withTranslation(\"labels\")(textComp);\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withTranslation(\"labels\")(UserDetailsModal));\r\n","import { get } from \"lodash\";\r\nimport { formValueSelector } from \"redux-form\";\r\nimport { copyUser } from \"./fields/identify/Component/common/common_func\";\r\nexport const mapStateToProps = (\r\n  {\r\n    wizard: {\r\n      currentStep,\r\n      wizardSettings,\r\n      steps,\r\n      mainObject,\r\n      comments,\r\n      currentModule,\r\n    },\r\n    selectors = {},\r\n    mainApp,\r\n    user,\r\n    mapViewer,\r\n    ...state\r\n  },\r\n  { moduleName, path, value_key, ...props }\r\n) => {\r\n  return {\r\n    data: props.data || get(state, path),\r\n    lang: mainApp.language,\r\n    selectors,\r\n    apps: mainApp.apps,\r\n    info: get(mapViewer, \"info.info\", {}),\r\n    ...(selectors[moduleName] || {}),\r\n    value_key: get(selectors[moduleName], \"value_key\", value_key),\r\n    currentStep,\r\n    steps,\r\n    mainObject,\r\n    currentModule,\r\n    user: get(user, \"user\", {}),\r\n    comments,\r\n    wizardSettings,\r\n    //allNotes,\r\n    mainApp,\r\n    record: get(currentModule, \"record\") || [],\r\n  };\r\n};\r\n\r\nexport const mapDispatchToProps = (dispatch, { moduleName }) => {\r\n  return {\r\n    getValues(name = \"stepForm\") {\r\n      return formValueSelector(\"name\");\r\n    },\r\n    setSelector: (moduleName, data) => {\r\n      dispatch({\r\n        type: \"setSelectors\",\r\n        path: `${moduleName}`,\r\n        data,\r\n      });\r\n    },\r\n    setValueLabelKeys: (label_key, value_key) => {\r\n      dispatch({\r\n        type: \"setSelectors\",\r\n        path: `${moduleName}.label_key`,\r\n        data: label_key,\r\n      });\r\n      dispatch({\r\n        type: \"setSelectors\",\r\n        path: `${moduleName}.value_key`,\r\n        data: value_key,\r\n      });\r\n    },\r\n    setData: (data) => {\r\n      dispatch({\r\n        type: \"setSelectors\",\r\n        path: `${moduleName}.data`,\r\n        data,\r\n      });\r\n    },\r\n    addToData: (data, index, operation) => {\r\n      dispatch({\r\n        type: \"insertInArraySelectors\",\r\n        path: `${moduleName}.data`,\r\n        operation,\r\n        index,\r\n        data,\r\n      });\r\n    },\r\n    setNextUrl: (nextUrl) => {\r\n      dispatch({\r\n        type: \"setSelectors\",\r\n        path: `${moduleName}.links.nextLink`,\r\n        data: nextUrl,\r\n      });\r\n    },\r\n    addNewSelector: (moduleName, data) => {\r\n      dispatch({\r\n        type: \"setSelectors\",\r\n        path: moduleName,\r\n        data,\r\n      });\r\n    },\r\n    removeSelector: (moduleName) => {\r\n      dispatch({\r\n        type: \"removeSelectors\",\r\n        path: moduleName,\r\n      });\r\n    },\r\n    setCurrentModule: (data) => {\r\n      dispatch({\r\n        type: \"setWizard\",\r\n        path: \"currentModule\",\r\n        data,\r\n      });\r\n    },\r\n    removeMainObject: () => {\r\n      dispatch({\r\n        type: \"removeWizard\",\r\n        path: \"mainObject\",\r\n      });\r\n      dispatch({\r\n        type: \"removeWizard\",\r\n        path: \"currentStep\",\r\n      });\r\n      dispatch({\r\n        type: \"removeWizard\",\r\n        path: \"comments\",\r\n      });\r\n      dispatch({\r\n        type: \"removeWizard\",\r\n        path: \"allNotes\",\r\n      });\r\n    },\r\n    setMainObject: (data, step, user) => {\r\n      dispatch({\r\n        type: \"setWizard\",\r\n        path: `mainObject.${step}`,\r\n        data,\r\n      });\r\n\r\n      if (user) {\r\n        // user = { ...user, currentDate: moment().format(\"iYYYY/iM/iD\") };\r\n\r\n        dispatch({\r\n          type: \"setWizard\",\r\n          path: `mainObject.${step}.user`,\r\n          data: copyUser({ user }),\r\n        });\r\n      }\r\n    },\r\n  };\r\n};\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AANA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AA+CA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AClsourceRoot":""}