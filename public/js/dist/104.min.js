(window["webpackJsonp"] = window["webpackJsonp"] || []).push([
  [104],
  {
    /***/ "./src/app/components/inputs/fields/identify/Component/farzIdentifyComponnent/index.js":
      /*!*********************************************************************************************!*\
  !*** ./src/app/components/inputs/fields/identify/Component/farzIdentifyComponnent/index.js ***!
  \*********************************************************************************************/
      /*! exports provided: appMapDispatchToProps, default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "appMapDispatchToProps",
          function () {
            return appMapDispatchToProps;
          }
        );
        /* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/extends.js"
          );
        /* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default =
          /*#__PURE__*/ __webpack_require__.n(
            _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__
          );
        /* harmony import */ var antd_lib_button_style__WEBPACK_IMPORTED_MODULE_1__ =
          __webpack_require__(
            /*! antd/lib/button/style */ "./node_modules/antd/lib/button/style/index.js"
          );
        /* harmony import */ var antd_lib_button_style__WEBPACK_IMPORTED_MODULE_1___default =
          /*#__PURE__*/ __webpack_require__.n(
            antd_lib_button_style__WEBPACK_IMPORTED_MODULE_1__
          );
        /* harmony import */ var antd_lib_button__WEBPACK_IMPORTED_MODULE_2__ =
          __webpack_require__(
            /*! antd/lib/button */ "./node_modules/antd/lib/button/index.js"
          );
        /* harmony import */ var antd_lib_button__WEBPACK_IMPORTED_MODULE_2___default =
          /*#__PURE__*/ __webpack_require__.n(
            antd_lib_button__WEBPACK_IMPORTED_MODULE_2__
          );
        /* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3__ =
          __webpack_require__(
            /*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"
          );
        /* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default =
          /*#__PURE__*/ __webpack_require__.n(
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3__
          );
        /* harmony import */ var antd_lib_select_style__WEBPACK_IMPORTED_MODULE_4__ =
          __webpack_require__(
            /*! antd/lib/select/style */ "./node_modules/antd/lib/select/style/index.js"
          );
        /* harmony import */ var antd_lib_select_style__WEBPACK_IMPORTED_MODULE_4___default =
          /*#__PURE__*/ __webpack_require__.n(
            antd_lib_select_style__WEBPACK_IMPORTED_MODULE_4__
          );
        /* harmony import */ var antd_lib_select__WEBPACK_IMPORTED_MODULE_5__ =
          __webpack_require__(
            /*! antd/lib/select */ "./node_modules/antd/lib/select/index.js"
          );
        /* harmony import */ var antd_lib_select__WEBPACK_IMPORTED_MODULE_5___default =
          /*#__PURE__*/ __webpack_require__.n(
            antd_lib_select__WEBPACK_IMPORTED_MODULE_5__
          );
        /* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6__ =
          __webpack_require__(/*! react */ "./node_modules/react/index.js");
        /* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6___default =
          /*#__PURE__*/ __webpack_require__.n(
            react__WEBPACK_IMPORTED_MODULE_6__
          );
        /* harmony import */ var _common_esri_request__WEBPACK_IMPORTED_MODULE_7__ =
          __webpack_require__(
            /*! ../common/esri_request */ "./src/app/components/inputs/fields/identify/Component/common/esri_request.js"
          );
        /* harmony import */ var _common_common_func__WEBPACK_IMPORTED_MODULE_8__ =
          __webpack_require__(
            /*! ../common/common_func */ "./src/app/components/inputs/fields/identify/Component/common/common_func.js"
          );
        /* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_9__ =
          __webpack_require__(
            /*! ../common */ "./src/app/components/inputs/fields/identify/Component/common/index.js"
          );
        /* harmony import */ var _reducers__WEBPACK_IMPORTED_MODULE_10__ =
          __webpack_require__(
            /*! ../../../../../../reducers */ "./src/app/reducers/index.js"
          );
        /* harmony import */ var react_i18next__WEBPACK_IMPORTED_MODULE_11__ =
          __webpack_require__(
            /*! react-i18next */ "./node_modules/react-i18next/dist/es/index.js"
          );
        /* harmony import */ var _mapviewer_config_map__WEBPACK_IMPORTED_MODULE_12__ =
          __webpack_require__(
            /*! ../mapviewer/config/map */ "./src/app/components/inputs/fields/identify/Component/mapviewer/config/map.js"
          );
        /* harmony import */ var _MapComponent_MapComponent__WEBPACK_IMPORTED_MODULE_13__ =
          __webpack_require__(
            /*! ../MapComponent/MapComponent */ "./src/app/components/inputs/fields/identify/Component/MapComponent/MapComponent.js"
          );
        /* harmony import */ var _MapBtnsComponent__WEBPACK_IMPORTED_MODULE_14__ =
          __webpack_require__(
            /*! ../MapBtnsComponent */ "./src/app/components/inputs/fields/identify/Component/MapBtnsComponent/index.js"
          );
        /* harmony import */ var _mapping__WEBPACK_IMPORTED_MODULE_15__ =
          __webpack_require__(
            /*! ../mapping */ "./src/app/components/inputs/fields/identify/Component/mapping.js"
          );
        /* harmony import */ var _main_helpers_actions_main__WEBPACK_IMPORTED_MODULE_16__ =
          __webpack_require__(
            /*! ../../../../../../../main_helpers/actions/main */ "./src/main_helpers/actions/main/index.js"
          );
        /* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_17__ =
          __webpack_require__(
            /*! react-redux */ "./node_modules/react-redux/es/index.js"
          );
        /* harmony import */ var _Helpers__WEBPACK_IMPORTED_MODULE_18__ =
          __webpack_require__(
            /*! ./Helpers */ "./src/app/components/inputs/fields/identify/Component/farzIdentifyComponnent/Helpers.js"
          );
        /* harmony import */ var react_sticky__WEBPACK_IMPORTED_MODULE_19__ =
          __webpack_require__(
            /*! react-sticky */ "./node_modules/react-sticky/lib/index.js"
          );
        /* harmony import */ var react_sticky__WEBPACK_IMPORTED_MODULE_19___default =
          /*#__PURE__*/ __webpack_require__.n(
            react_sticky__WEBPACK_IMPORTED_MODULE_19__
          );
        /* harmony import */ var _common_esri_loader__WEBPACK_IMPORTED_MODULE_20__ =
          __webpack_require__(
            /*! ../common/esri_loader */ "./src/app/components/inputs/fields/identify/Component/common/esri_loader.js"
          );
        /* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_21__ =
          __webpack_require__(/*! axios */ "./node_modules/axios/index.js");
        /* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_21___default =
          /*#__PURE__*/ __webpack_require__.n(
            axios__WEBPACK_IMPORTED_MODULE_21__
          );
        /* harmony import */ var _imports_config__WEBPACK_IMPORTED_MODULE_22__ =
          __webpack_require__(
            /*! ../../../../../../../imports/config */ "./src/imports/config.js"
          );

        // import "antd/dist/reset.css";

        var uniqid = __webpack_require__(
          /*! uniqid */ "./node_modules/uniqid/index.js"
        );

        const { Option } =
          antd_lib_select__WEBPACK_IMPORTED_MODULE_5___default.a;
        const appMapDispatchToProps = (dispatch) => {
          return {
            ...Object(
              _mapping__WEBPACK_IMPORTED_MODULE_15__["mapDispatchToProps"]
            )(dispatch, "lands"),
            ...Object(
              _main_helpers_actions_main__WEBPACK_IMPORTED_MODULE_16__[
                "default"
              ]
            )(dispatch),
          };
        };
        class farzIdentifyComponnent extends react__WEBPACK_IMPORTED_MODULE_6__[
          "Component"
        ] {
          constructor(props) {
            var _props$input,
              _props$input$value,
              _props$input$value$te,
              _props$input2,
              _props$input2$value,
              _props$input2$value$t,
              _props$input3,
              _props$input3$value,
              _props$input3$value$t,
              _this$props$mainObjec4,
              _this$props$mainObjec5,
              _this$props$mainObjec6,
              _this$props24,
              _this$props24$input,
              _this$props24$input$v,
              _this$props24$input$v2,
              _props$input4,
              _props$input4$value,
              _this$props25,
              _this$props25$current,
              _this$props25$current2,
              _props$mainObject,
              _props$mainObject$lan,
              _props$input5,
              _props$input5$value,
              _props$input5$value$t;
            super(props);
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(
              this,
              "LayerID",
              []
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(
              this,
              "UpdateSubmissionDataObject",
              () => {
                var _this$props,
                  _this$props$currentMo,
                  _this$props$currentMo2,
                  _this$props2,
                  _this$props2$currentM,
                  _this$props2$currentM2,
                  _this$props3,
                  _this$props3$currentM,
                  _this$props3$currentM2,
                  _this$props4,
                  _this$props4$currentM,
                  _this$props4$currentM2,
                  _this$props5,
                  _this$props5$currentM,
                  _this$props5$currentM2,
                  _this$props6,
                  _this$props6$currentM,
                  _this$props6$currentM2,
                  _this$props7,
                  _this$props7$currentM,
                  _this$props7$currentM2,
                  _this$props8,
                  _this$props8$currentM,
                  _this$props8$currentM2;
                const { parcelData } = this.state;
                var fields = {
                  ...parcelData.fields,
                };
                Object.keys(fields).map((key, index) => {
                  parcelData[key] = fields[key].value;
                });
                this.state.landsData = {
                  ...this.props.input.value,
                  parcels: [...this.state.selectedLands],
                  parcelData: {
                    ...parcelData,
                  },
                  domainLists: {
                    ...this.state.domainLists,
                  },
                  // lists: {
                  //   firstParcels: [...this.state.parcelNum],
                  //   subDivNames: [...this.state.subDivNames],
                  //   MunicipalityNames: [...this.state.MunicipalityNames],
                  //   subDivType: [...this.state.subDivType],
                  //   PlanNum: [...this.state.PlanNum],
                  //   blockNum: [...this.state.blockNum],
                  // },
                  selectedRequestType:
                    (([22, 23].indexOf(this.props.currentModule.id) != -1 ||
                      [1928].indexOf(
                        (_this$props = this.props) === null ||
                          _this$props === void 0
                          ? void 0
                          : (_this$props$currentMo =
                              _this$props.currentModule) === null ||
                            _this$props$currentMo === void 0
                          ? void 0
                          : (_this$props$currentMo2 =
                              _this$props$currentMo.record) === null ||
                            _this$props$currentMo2 === void 0
                          ? void 0
                          : _this$props$currentMo2.workflow_id
                      ) != -1) &&
                      [2190, 2191].indexOf(
                        (_this$props2 = this.props) === null ||
                          _this$props2 === void 0
                          ? void 0
                          : (_this$props2$currentM =
                              _this$props2.currentModule) === null ||
                            _this$props2$currentM === void 0
                          ? void 0
                          : (_this$props2$currentM2 =
                              _this$props2$currentM.record) === null ||
                            _this$props2$currentM2 === void 0
                          ? void 0
                          : _this$props2$currentM2.workflow_id
                      ) == -1 &&
                      this.state.selectedRequestType) ||
                    ([2190].indexOf(
                      (_this$props3 = this.props) === null ||
                        _this$props3 === void 0
                        ? void 0
                        : (_this$props3$currentM =
                            _this$props3.currentModule) === null ||
                          _this$props3$currentM === void 0
                        ? void 0
                        : (_this$props3$currentM2 =
                            _this$props3$currentM.record) === null ||
                          _this$props3$currentM2 === void 0
                        ? void 0
                        : _this$props3$currentM2.workflow_id
                    ) != -1 &&
                      "فرد") ||
                    ([2191].indexOf(
                      (_this$props4 = this.props) === null ||
                        _this$props4 === void 0
                        ? void 0
                        : (_this$props4$currentM =
                            _this$props4.currentModule) === null ||
                          _this$props4$currentM === void 0
                        ? void 0
                        : (_this$props4$currentM2 =
                            _this$props4$currentM.record) === null ||
                          _this$props4$currentM2 === void 0
                        ? void 0
                        : _this$props4$currentM2.workflow_id
                    ) != -1 &&
                      "اصدار الكروكي (المواطن)") ||
                    3,
                };
                this.state.landsData["selectedRequestType"] =
                  (([22, 23].indexOf(this.props.currentModule.id) != -1 ||
                    [1928].indexOf(
                      (_this$props5 = this.props) === null ||
                        _this$props5 === void 0
                        ? void 0
                        : (_this$props5$currentM =
                            _this$props5.currentModule) === null ||
                          _this$props5$currentM === void 0
                        ? void 0
                        : (_this$props5$currentM2 =
                            _this$props5$currentM.record) === null ||
                          _this$props5$currentM2 === void 0
                        ? void 0
                        : _this$props5$currentM2.workflow_id
                    ) != -1) &&
                    [2190, 2191].indexOf(
                      (_this$props6 = this.props) === null ||
                        _this$props6 === void 0
                        ? void 0
                        : (_this$props6$currentM =
                            _this$props6.currentModule) === null ||
                          _this$props6$currentM === void 0
                        ? void 0
                        : (_this$props6$currentM2 =
                            _this$props6$currentM.record) === null ||
                          _this$props6$currentM2 === void 0
                        ? void 0
                        : _this$props6$currentM2.workflow_id
                    ) == -1 &&
                    this.state.selectedRequestType) ||
                  ([2190].indexOf(
                    (_this$props7 = this.props) === null ||
                      _this$props7 === void 0
                      ? void 0
                      : (_this$props7$currentM = _this$props7.currentModule) ===
                          null || _this$props7$currentM === void 0
                      ? void 0
                      : (_this$props7$currentM2 =
                          _this$props7$currentM.record) === null ||
                        _this$props7$currentM2 === void 0
                      ? void 0
                      : _this$props7$currentM2.workflow_id
                  ) != -1 &&
                    "فرد") ||
                  ([2191].indexOf(
                    (_this$props8 = this.props) === null ||
                      _this$props8 === void 0
                      ? void 0
                      : (_this$props8$currentM = _this$props8.currentModule) ===
                          null || _this$props8$currentM === void 0
                      ? void 0
                      : (_this$props8$currentM2 =
                          _this$props8$currentM.record) === null ||
                        _this$props8$currentM2 === void 0
                      ? void 0
                      : _this$props8$currentM2.workflow_id
                  ) != -1 &&
                    "اصدار الكروكي (المواطن)") ||
                  3;
                this.setState(
                  {
                    parcelData: parcelData,
                  },
                  () => {
                    this.setToStore();
                  }
                );
              }
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(
              this,
              "parcelQueryTask",
              (value) => {
                this.setState({
                  selectedLands: [],
                  selectedLandsT: [],
                  parcelId: null,
                  parcelNum: [],
                  parcelData: {},
                  selectedRequestType: value,
                });
                Object(
                  _common_esri_request__WEBPACK_IMPORTED_MODULE_7__[
                    "esriRequest"
                  ]
                )(
                  _mapviewer_config_map__WEBPACK_IMPORTED_MODULE_12__[
                    "mapUrl"
                  ] +
                    "/" +
                    this.LayerID["Landbase_Parcel"]
                ).then((response) => {
                  let { domainLists } = this.state;
                  domainLists.usingSymbols = [];
                  domainLists.districtNames = [];
                  domainLists.SUB_MUNICIPALITY_NAME_Domains = [];
                  domainLists.cityNames = [];
                  response.fields.forEach(function (val) {
                    //;
                    if (val.name === "USING_SYMBOL") {
                      // list.push(val.domain);
                      val.domain.codedValues.forEach(function (domain) {
                        // ////
                        domainLists.usingSymbols.push(domain);
                      });
                    } else if (val.name === "DISTRICT_NAME") {
                      val.domain.codedValues.forEach(function (domain) {
                        // ////
                        domainLists.districtNames.push(domain);
                      });
                    } else if (val.name === "SUB_MUNICIPALITY_NAME") {
                      val.domain.codedValues.forEach(function (domain) {
                        // ////
                        domainLists.SUB_MUNICIPALITY_NAME_Domains.push(domain);
                      });
                    } else if (val.name === "CITY_NAME") {
                      val.domain.codedValues.forEach(function (domain) {
                        domainLists.cityNames.push(domain);
                      });
                    }
                  });
                  this.DrawGraph();
                  this.UpdateSubmissionDataObject();
                });
              }
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(
              this,
              "resetFields",
              () => {
                this.props.onChange([]);
                this.setState({
                  selectedLands: [],
                  selectedLandsT: [],
                });
              }
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(
              this,
              "resetGraphics",
              () => {
                this.state["selectedLands"] = [];
                this.state["selectedLandsT"] = [];
                this.parcelData = {};
                this.DrawGraph();
              }
            );
            // onMunChange = (e, callback) => {
            //   //
            //   clearGraphicFromLayer(this.map, "SelectLandsGraphicLayer");
            //   if (!callback) {
            //     this.setState({
            //       munval: e,
            //       planeval: undefined,
            //       subTypeval: undefined,
            //       subNameval: undefined,
            //       blockval: undefined,
            //       parcelval: undefined,
            //       // selectedLands: [],
            //       // selectedLandsT: [],
            //       PlanNum: [],
            //       blockNum: [],
            //       subDivNames: [],
            //       //subDivType: [],
            //       parcelId: null,
            //       parcelNum: [],
            //       parcelData: {},
            //     });
            //   }
            //   this.planId = null;
            //   if (e) {
            //     queryTask({
            //       ...querySetting(
            //         this.LayerID.Municipality_Boundary,
            //         `MUNICIPALITY_NAME='${e}'`,
            //         true,
            //         ["*"]
            //       ),
            //       callbackResult: (res) => {
            //         this.pol = res.features[0];
            //         highlightFeature(this.pol, this.map, {
            //           layerName: "SelectGraphicLayer",
            //           isZoom: true,
            //           isHiglightSymbol: true,
            //           highlighColor: [0, 0, 0, 0.25],
            //         });
            //         this.setState({ city_name: this.pol?.attributes?.CITY_NAME_A || "" });
            //       },
            //     });
            //     queryTask({
            //       ...querySetting(
            //         this.LayerID.Plan_Data,
            //         `MUNICIPALITY_NAME='${e}'`,
            //         false,
            //         ["PLAN_SPATIAL_ID", "PLAN_NO"]
            //       ),
            //       returnGeometry: true,
            //       callbackResult: (res) => {
            //         this.setState({
            //           PlanNum: res.features.map((e, i) => {
            //             return {
            //               ...e,
            //               i: uniqid(),
            //             };
            //           }),
            //         });
            //       },
            //     });
            //   }
            //   this.resetGraphics();
            //   if (callback) {
            //     callback();
            //   }
            // };
            // onPlaneChange = (f, callback) => {
            //   clearGraphicFromLayer(this.map, "SelectLandsGraphicLayer");
            //   clearGraphicFromLayer(this.map, "SelectGraphicLayer");
            //   var planSpatialId = this.state.PlanNum.filter((m) => m.i == f)?.[0]?.attributes
            //     ?.PLAN_SPATIAL_ID;
            //   if (!callback) {
            //     this.setState({
            //       plan_no: this.state.PlanNum.filter((m) => m.i == f)?.[0]?.attributes
            //         ?.PLAN_NO,
            //       planeval: f,
            //       subTypeval: undefined,
            //       subNameval: undefined,
            //       blockval: undefined,
            //       parcelval: undefined,
            //       blockNum: [],
            //       subDivNames: [],
            //       // subDivType: [],
            //       parcelId: null,
            //       parcelNum: [],
            //       parcelData: {},
            //       // selectedLands: [],
            //       // selectedLandsT: [],
            //     });
            //   }
            //   if (f) {
            //     queryTask({
            //       ...querySetting(
            //         this.LayerID.Plan_Data,
            //         `PLAN_SPATIAL_ID='${planSpatialId}'`,
            //         true,
            //         ["MUNICIPALITY_NAME"]
            //       ),
            //       returnGeometry: true,
            //       callbackResult: (res) => {
            //         this.pol = res.features[0];
            //         highlightFeature(res.features[0], this.map, {
            //           layerName: "SelectGraphicLayer",
            //           isZoom: true,
            //           isHiglightSymbol: true,
            //           highlighColor: [0, 0, 0, 0.25],
            //         });
            //         this.planId = planSpatialId;
            //       },
            //     });
            //     queryTask({
            //       ...querySetting(
            //         this.LayerID.Survey_Block,
            //         `PLAN_SPATIAL_ID='${planSpatialId}'`,
            //         false,
            //         ["BLOCK_NO", "BLOCK_SPATIAL_ID"]
            //       ),
            //       returnGeometry: true,
            //       callbackResult: (res) => {
            //         // var blocks = [];
            //         // if (res.features) {
            //         //   res.features.forEach((feature, index) => {
            //         //     if (feature.attributes.Block_NO) {
            //         //       blocks.splice(0, 0, feature);
            //         //     }
            //         //   });
            //         // }
            //         // this.setState({ blockNum: blocks });
            //         this.setState({ blockNum: res.features });
            //       },
            //     });
            //     this.getParcelsWithinBufferedArea(
            //       this.state.PlanNum.filter((m) => m.i == f)[0],
            //       `PLAN_SPATIAL_ID='${planSpatialId}'`
            //     ).then((res) => {
            //       this.setState({
            //         parcelSearch: null,
            //         parcelNum: res.features.map((e, i) => {
            //           return {
            //             ...e,
            //             i,
            //           };
            //         }),
            //       });
            //     });
            //   }
            //   this.resetGraphics();
            //   if (callback) {
            //     callback();
            //   }
            // };
            // onSubTypeChange = (e, callback) => {
            //   this.onPlaneChange(this.state.planeval);
            //   if (!callback) {
            //     this.setState({
            //       subType_name: this.state.subDivType.filter((m) => m.code == e)[0].name,
            //       subTypeval: e,
            //     });
            //   }
            //   if (e) {
            //     queryTask({
            //       ...querySetting(
            //         this.LayerID.Subdivision,
            //         `SUBDIVISION_TYPE=${e} AND PLAN_SPATIAL_ID=${this.planId}`,
            //         false,
            //         ["SUBDIVISION_DESCRIPTION", "SUBDIVISION_SPATIAL_ID"]
            //       ),
            //       returnGeometry: true,
            //       callbackResult: (res) => {
            //         this.setState({ subDivNames: res.features });
            //       },
            //     });
            //   }
            //   if (callback) {
            //     callback();
            //   }
            //   // this.onSubNameChange(this.state.subNameval);
            //   // this.DrawGraph();
            // };
            // onSubNameChange = (value, callback) => {
            //   clearGraphicFromLayer(this.map, "SelectLandsGraphicLayer");
            //   var selectedSubDivName = this.state.subDivNames.filter(
            //     (m) =>
            //       m.attributes.SUBDIVISION_SPATIAL_ID == value ||
            //       m.attributes.SUBDIVISION_DESCRIPTION == value
            //   )[0];
            //   //if (selectedSubDivName) {
            //   var e = selectedSubDivName?.attributes?.SUBDIVISION_SPATIAL_ID;
            //   if (!callback) {
            //     this.setState({
            //       subName_name: selectedSubDivName?.attributes?.SUBDIVISION_DESCRIPTION,
            //       subNameval: e,
            //       blockval: undefined,
            //       parcelval: undefined,
            //       parcelNum: [],
            //       parcelId: null,
            //     });
            //   }
            //   if (value) {
            //     queryTask({
            //       ...querySetting(
            //         this.LayerID.Subdivision,
            //         `SUBDIVISION_SPATIAL_ID=${e}`,
            //         true,
            //         ["SUBDIVISION_SPATIAL_ID"]
            //       ),
            //       returnGeometry: true,
            //       callbackResult: (res) => {
            //         if (res) {
            //           this.pol = res.features[0];
            //           highlightFeature(res.features[0], this.map, {
            //             layerName: "SelectGraphicLayer",
            //             isZoom: true,
            //             isHiglightSymbol: true,
            //             highlighColor: [0, 0, 0, 0.25],
            //           });
            //         }
            //       },
            //     });
            //     this.getParcelsWithinBufferedArea(
            //       selectedSubDivName,
            //       `SUBDIVISION_SPATIAL_ID=${e}`
            //     ).then((res) => {
            //       this.setState({
            //         parcelSearch: null,
            //         parcelNum: res.features.map((e, i) => {
            //           return {
            //             ...e,
            //             i,
            //           };
            //         }),
            //       });
            //     });
            //   }
            //   this.resetGraphics();
            //   if (callback) {
            //     callback();
            //   }
            //   //}
            // };
            // onBlockChange = (e, callback) => {
            //   clearGraphicFromLayer(this.map, "SelectLandsGraphicLayer");
            //   if (!callback) {
            //     this.setState({
            //       block_no: this.state.blockNum.filter(
            //         (m) => m.attributes.BLOCK_SPATIAL_ID == e
            //       )?.[0]?.attributes?.BLOCK_NO,
            //       blockval: e,
            //       parcelval: undefined,
            //       parcelId: null,
            //       parcelNum: [],
            //       // selectedLands: [],
            //       // selectedLandsT: [],
            //     });
            //   }
            //   if (e) {
            //     queryTask({
            //       ...querySetting(
            //         this.LayerID.Survey_Block,
            //         `BLOCK_SPATIAL_ID=${e}`,
            //         true,
            //         ["BLOCK_SPATIAL_ID"]
            //       ),
            //       returnGeometry: true,
            //       callbackResult: (res) => {
            //         this.pol = res.features[0];
            //         highlightFeature(res.features[0], this.map, {
            //           layerName: "SelectGraphicLayer",
            //           isZoom: true,
            //           isHiglightSymbol: true,
            //           highlighColor: [0, 0, 0, 0.25],
            //         });
            //       },
            //     });
            //     this.getParcelsWithinBufferedArea(
            //       this.state.blockNum.filter(
            //         (m) => m.attributes.BLOCK_SPATIAL_ID == e
            //       )[0],
            //       `BLOCK_SPATIAL_ID=${e}`
            //     ).then((res) => {
            //       this.setState({
            //         parcelSearch: null,
            //         parcelNum: res.features.map((e, i) => {
            //           return {
            //             ...e,
            //             i,
            //           };
            //         }),
            //       });
            //     });
            //   }
            //   this.resetGraphics();
            //   if (callback) {
            //     callback();
            //   }
            // };
            // onLandParcelChange = (f, callback) => {
            //   if (!this.state.selectedLands.length) {
            //     var e = this.state.parcelNum.filter((m) => m.i === f)?.[0]?.attributes
            //       ?.PARCEL_SPATIAL_ID;
            //     if (!callback) {
            //       this.setState({ parcelId: e, parcelval: f });
            //     }
            //     this.RolBackPol = this.pol;
            //     this.RolBackParcelNum = this.state.parcelNum;
            //     if (f) {
            //       this.getParcelsWithinBufferedArea(
            //         this.RolBackPol,
            //         `PARCEL_SPATIAL_ID='${e}'`
            //       ).then((res) => {
            //         this.selectedLandsT = [];
            //         highlightFeature(res.features[0], this.map, {
            //           layerName: "SelectGraphicLayer",
            //           strokeColor: [0, 0, 0],
            //           highlightWidth: 3,
            //           isHighlighPolygonBorder: true,
            //           isZoom: true,
            //           zoomFactor: 10,
            //         });
            //       });
            //       // queryTask({
            //       //   ...querySetting(
            //       //     this.LayerID.Landbase_Parcel,
            //       //     `PARCEL_SPATIAL_ID='${e}'`,
            //       //     true,
            //       //     ["PARCEL_SPATIAL_ID"]
            //       //   ),
            //       //   callbackResult: (res) => {
            //       //     this.selectedLandsT = [];
            //       //     highlightFeature(res.features[0], this.map, {
            //       //       layerName: "SelectGraphicLayer",
            //       //       strokeColor: [0, 0, 0],
            //       //       highlightWidth: 3,
            //       //       isHighlighPolygonBorder: true,
            //       //       isZoom: true,
            //       //       zoomFactor: 10,
            //       //     });
            //       //   },
            //       // });
            //     }
            //   } else {
            //     // clearGraphicFromLayer(this.map, "SelectGraphicLayer");
            //     var prevParcelId = this.state.parcelId;
            //     var g = this.state.parcelNum.filter((m) => m.i == f)[0];
            //     this.state["parcelId"] = g.attributes.PARCEL_SPATIAL_ID;
            //     //this.setState({ parcelId: g.attributes.PARCEL_SPATIAL_ID });
            //     this.LandHoverOff(
            //       this.map
            //         .getLayer("SelectGraphicLayer")
            //         .graphics.find(
            //           (prevGraphic) =>
            //             prevGraphic.attributes.PARCEL_SPATIAL_ID == prevParcelId
            //         )
            //     );
            //     // if (
            //     //   this.state.selectedLands.map(
            //     //     ((land) =>
            //     //       land.attributes.OBJECTID ==
            //     //       this.state.parcelval.attributes.OBJECTID).length == 0
            //     //   )
            //     // ) {
            //     //   highlightFeature([this.state.parcelval], this.map, {
            //     //     layerName: "SelectGraphicLayer",
            //     //     noclear: true,
            //     //     isZoom: false,
            //     //     isHiglightSymbol: true,
            //     //     highlighColor: [0, 255, 0, 0.5],
            //     //     attr: true,
            //     //   });
            //     // }
            //     // // highlightFeature(g, this.map, {
            //     // //   layerName: "SelectGraphicLayer",
            //     // //   strokeColor: [0, 0, 0],
            //     // //   isHighlighPolygonBorder: true,
            //     // //   highlightWidth: 3,
            //     // // });
            //     this.setState({ parcelval: f });
            //   }
            //   if (callback) {
            //     callback();
            //   }
            // };
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(
              this,
              "addParcelToSelect",
              (feature) => {
                return new Promise((resolve, reject) => {
                  //if (this.state.selectedLands && this.state.selectedLands.length > 0) {
                  this.getParcelsWithinBufferedArea(
                    feature,
                    "PARCEL_PLAN_NO is not null",
                    true
                  ).then((res) => {
                    Object(
                      _common_common_func__WEBPACK_IMPORTED_MODULE_8__[
                        "getFeatureDomainName"
                      ]
                    )(res.features, this.LayerID.Landbase_Parcel).then((r) => {
                      var _this$props9,
                        _this$props9$currentM,
                        _this$props10,
                        _this$props10$current,
                        _this$props10$current2;
                      res.features = r.map((e, i) => {
                        return {
                          ...e,
                          i: uniqid(),
                        };
                      });
                      if (
                        [20, 21].indexOf(
                          (_this$props9 = this.props) === null ||
                            _this$props9 === void 0
                            ? void 0
                            : (_this$props9$currentM =
                                _this$props9.currentModule) === null ||
                              _this$props9$currentM === void 0
                            ? void 0
                            : _this$props9$currentM.record.app_id
                        ) == -1 &&
                        [2191].indexOf(
                          (_this$props10 = this.props) === null ||
                            _this$props10 === void 0
                            ? void 0
                            : (_this$props10$current =
                                _this$props10.currentModule) === null ||
                              _this$props10$current === void 0
                            ? void 0
                            : (_this$props10$current2 =
                                _this$props10$current.record) === null ||
                              _this$props10$current2 === void 0
                            ? void 0
                            : _this$props10$current2.workflow_id
                        ) == -1
                      ) {
                        Object(
                          _common_common_func__WEBPACK_IMPORTED_MODULE_8__[
                            "validation"
                          ]
                        )(feature, this.props).then(
                          () => {
                            return resolve(res);
                          },
                          () => {
                            return reject();
                          }
                        );
                      } else {
                        return resolve(res);
                      }
                    });
                  });
                });
              }
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(
              this,
              "getParcelsWithinBufferedArea",
              (
                feature,
                where,
                isToIntersect = false,
                outFields,
                moreSettings
              ) => {
                return new Promise((resolve, reject) => {
                  if (isToIntersect) {
                    var _this$props11, _this$props11$current;
                    Object(
                      _common_common_func__WEBPACK_IMPORTED_MODULE_8__[
                        "intersectQueryTask"
                      ]
                    )({
                      outFields: ["*"],
                      distance:
                        ([20, 21].indexOf(
                          (_this$props11 = this.props) === null ||
                            _this$props11 === void 0
                            ? void 0
                            : (_this$props11$current =
                                _this$props11.currentModule) === null ||
                              _this$props11$current === void 0
                            ? void 0
                            : _this$props11$current.record.app_id
                        ) == -1 &&
                          20) ||
                        50,
                      geometry: new esri.geometry.Polygon(feature.geometry),
                      url:
                        _mapviewer_config_map__WEBPACK_IMPORTED_MODULE_12__[
                          "mapUrl"
                        ] +
                        "/" +
                        this.LayerID.Landbase_Parcel,
                      where: where,
                      callbackResult: (res) => {
                        Object(
                          _common_common_func__WEBPACK_IMPORTED_MODULE_8__[
                            "getFeatureDomainName"
                          ]
                        )(res.features, this.LayerID.Landbase_Parcel).then(
                          (r) => {
                            res.features = r;
                            return resolve(res);
                          }
                        );
                      },
                    });
                  } else {
                    Object(
                      _common_common_func__WEBPACK_IMPORTED_MODULE_8__[
                        "queryTask"
                      ]
                    )({
                      ...Object(
                        _Helpers__WEBPACK_IMPORTED_MODULE_18__["querySetting"]
                      )(
                        this.LayerID.Landbase_Parcel,
                        where,
                        false,
                        (!outFields && [
                          "PARCEL_SPATIAL_ID",
                          "PARCEL_PLAN_NO",
                        ]) || [...outFields]
                      ),
                      returnGeometry: true,
                      callbackResult: (res) => {
                        return resolve(res);
                      },
                      ...moreSettings,
                    });
                  }
                });
              }
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(
              this,
              "DrawGraph",
              () => {
                if (!this.state.selectedLands.length) {
                  this.map.graphics.clear();
                  Object(
                    _common_common_func__WEBPACK_IMPORTED_MODULE_8__[
                      "clearGraphicFromLayer"
                    ]
                  )(this.map, "SelectLandsGraphicLayer");
                  Object(
                    _common_common_func__WEBPACK_IMPORTED_MODULE_8__[
                      "clearGraphicFromLayer"
                    ]
                  )(this.map, "editlengthGraphicLayer");
                  Object(
                    _common_common_func__WEBPACK_IMPORTED_MODULE_8__[
                      "clearGraphicFromLayer"
                    ]
                  )(this.map, "PacrelNoGraphicLayer");
                  Object(
                    _common_common_func__WEBPACK_IMPORTED_MODULE_8__[
                      "clearGraphicFromLayer"
                    ]
                  )(this.map, "SelectGraphicLayer");
                  //this.onSubNameChange(this.state.subNameval);
                  this.setToStore(null);
                } else {
                  this.parcelDis = Object(
                    _Helpers__WEBPACK_IMPORTED_MODULE_18__["selectDis"]
                  )(this.selectedLandsT);
                  console.log(this.parcelDis);
                  this.setAdjacentToStore(this.parcelDis);
                  this.setState({
                    parcelNum: this.parcelDis,
                  });
                  Object(
                    _common_common_func__WEBPACK_IMPORTED_MODULE_8__[
                      "clearGraphicFromLayer"
                    ]
                  )(this.map, "SelectLandsGraphicLayer");
                  Object(
                    _common_common_func__WEBPACK_IMPORTED_MODULE_8__[
                      "clearGraphicFromLayer"
                    ]
                  )(this.map, "editlengthGraphicLayer");
                  Object(
                    _common_common_func__WEBPACK_IMPORTED_MODULE_8__[
                      "clearGraphicFromLayer"
                    ]
                  )(this.map, "PacrelNoGraphicLayer");
                  Object(
                    _common_common_func__WEBPACK_IMPORTED_MODULE_8__[
                      "clearGraphicFromLayer"
                    ]
                  )(this.map, "SelectGraphicLayer");
                  Object(
                    _common_common_func__WEBPACK_IMPORTED_MODULE_8__[
                      "drawLength"
                    ]
                  )(this.map, this.state.selectedLands);
                  this.parcelDis
                    .filter(
                      (element) =>
                        !this.state.selectedLands.find(
                          (i) => i.id === element.attributes.PARCEL_SPATIAL_ID
                        )
                    )
                    .forEach((f) => {
                      Object(
                        _common_common_func__WEBPACK_IMPORTED_MODULE_8__[
                          "addParcelNo"
                        ]
                      )(
                        f.geometry.getExtent().getCenter(),
                        this.map,
                        f.attributes.PARCEL_PLAN_NO + "",
                        "PacrelNoGraphicLayer",
                        20,
                        [0, 0, 0]
                      );
                    });
                  Object(
                    _common_common_func__WEBPACK_IMPORTED_MODULE_8__[
                      "highlightFeature"
                    ]
                  )(
                    this.parcelDis.filter((element) =>
                      this.state.selectedLands.find(
                        (i) => i.id === element.attributes.PARCEL_SPATIAL_ID
                      )
                    ),
                    this.map,
                    {
                      layerName: "SelectGraphicLayer",
                      noclear: true,
                      attr: {
                        isParcel: true,
                      },
                      isZoom: true,
                      isHighlighPolygonBorder: true,
                      zoomFactor: 10,
                    }
                  );
                  this.parcelDis
                    .filter((element) =>
                      this.state.selectedLands.find(
                        (i) => i.id === element.attributes.PARCEL_SPATIAL_ID
                      )
                    )
                    .forEach((f) => {
                      Object(
                        _common_common_func__WEBPACK_IMPORTED_MODULE_8__[
                          "addParcelNo"
                        ]
                      )(
                        f.geometry.getExtent().getCenter(),
                        this.map,
                        f.attributes.PARCEL_PLAN_NO + "",
                        "PacrelNoGraphicLayer",
                        20,
                        [0, 0, 0]
                      );
                    });
                }
              }
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(
              this,
              "mapLoaded",
              (map) => {
                this.map = map;
                this.props.setMap(map);
                if (
                  this.props.input &&
                  this.props.input.value &&
                  this.props.input.value.parcels &&
                  this.props.input.value.temp
                ) {
                  var _this$props12,
                    _this$props12$input,
                    _this$props12$input$v,
                    _this$props12$input$v2,
                    _this$props$mainObjec,
                    _this$props$mainObjec2,
                    _this$props$mainObjec3,
                    _this$props13,
                    _this$props13$current,
                    _this$props13$current2,
                    _this$props14,
                    _this$props14$current,
                    _this$props14$current2,
                    _this$props15,
                    _this$props15$current,
                    _this$props15$current2,
                    _this$props16,
                    _this$props16$current,
                    _this$props16$current2;
                  Object(
                    _common_common_func__WEBPACK_IMPORTED_MODULE_8__[
                      "highlightFeature"
                    ]
                  )(this.props.input.value.parcels, this.map, {
                    layerName: "SelectGraphicLayer",
                    noclear: true,
                    isZoom: true,
                    attr: {
                      isParcel: true,
                    },
                    isHighlighPolygonBorder: true,
                    zoomFactor: 10,
                  });
                  if (
                    !(
                      (_this$props12 = this.props) !== null &&
                      _this$props12 !== void 0 &&
                      (_this$props12$input = _this$props12.input) !== null &&
                      _this$props12$input !== void 0 &&
                      (_this$props12$input$v = _this$props12$input.value) !==
                        null &&
                      _this$props12$input$v !== void 0 &&
                      (_this$props12$input$v2 =
                        _this$props12$input$v.mapGraphics) !== null &&
                      _this$props12$input$v2 !== void 0 &&
                      _this$props12$input$v2.length
                    )
                  ) {
                    setTimeout(() => {
                      var _this$props$input$val,
                        _this$props$input$val2,
                        _this$props$input$val3,
                        _this$props$input,
                        _this$props$input$val4,
                        _this$props$input$val5;
                      this.props.input.value.parcels.forEach((f) => {
                        f.geometry = new esri.geometry.Polygon(f.geometry);
                        Object(
                          _common_common_func__WEBPACK_IMPORTED_MODULE_8__[
                            "addParcelNo"
                          ]
                        )(
                          f.geometry.getExtent().getCenter(),
                          this.map,
                          f.attributes.PARCEL_PLAN_NO + "",
                          "PacrelNoGraphicLayer",
                          20,
                          [0, 0, 0]
                        );
                      });
                      Object(
                        _common_common_func__WEBPACK_IMPORTED_MODULE_8__[
                          "drawLength"
                        ]
                      )(this.map, this.props.input.value.parcels);
                      if (
                        (_this$props$input$val = this.props.input.value) !==
                          null &&
                        _this$props$input$val !== void 0 &&
                        (_this$props$input$val2 =
                          _this$props$input$val.temp) !== null &&
                        _this$props$input$val2 !== void 0 &&
                        (_this$props$input$val3 =
                          _this$props$input$val2.parcelDis) !== null &&
                        _this$props$input$val3 !== void 0 &&
                        _this$props$input$val3.length
                      ) {
                        this.props.input.value.temp.parcelDis
                          .filter(
                            (element) =>
                              !this.props.input.value.parcels.find(
                                (i) =>
                                  i.attributes.PARCEL_SPATIAL_ID ===
                                  element.attributes.PARCEL_SPATIAL_ID
                              )
                          )
                          .forEach((f) => {
                            if (!f.geometry.getExtent) {
                              f.geometry = new esri.geometry.Polygon(
                                f.geometry
                              );
                            }
                            Object(
                              _common_common_func__WEBPACK_IMPORTED_MODULE_8__[
                                "addParcelNo"
                              ]
                            )(
                              f.geometry.getExtent().getCenter(),
                              this.map,
                              f.attributes.PARCEL_PLAN_NO + "",
                              "PacrelNoGraphicLayer",
                              20,
                              [0, 0, 0]
                            );
                          });
                        console.log(this.props.input.value.temp.parcelDis);
                        this.setState({
                          parcelSearch: null,
                          parcelNum: this.props.input.value.temp.parcelDis,
                        });
                      } else if (
                        (_this$props$input = this.props.input) !== null &&
                        _this$props$input !== void 0 &&
                        (_this$props$input$val4 = _this$props$input.value) !==
                          null &&
                        _this$props$input$val4 !== void 0 &&
                        (_this$props$input$val5 =
                          _this$props$input$val4.parcels) !== null &&
                        _this$props$input$val5 !== void 0 &&
                        _this$props$input$val5.length
                      ) {
                        var _this$props$input2, _this$props$input2$va;
                        Object(
                          _common_common_func__WEBPACK_IMPORTED_MODULE_8__[
                            "checkParcelAdjacents"
                          ]
                        )(
                          (_this$props$input2 = this.props.input) === null ||
                            _this$props$input2 === void 0
                            ? void 0
                            : (_this$props$input2$va =
                                _this$props$input2.value) === null ||
                              _this$props$input2$va === void 0
                            ? void 0
                            : _this$props$input2$va.parcels
                        );
                      }
                    }, 500);
                  }
                  const {
                    input: { value },
                  } = this.props;
                  this.state.landsData = {
                    ...value,
                    conditions: this.state.conditions,
                    temp: {
                      //map: this.map,
                      mun: this.props.input.value.temp.mun,
                      plan:
                        ((_this$props$mainObjec = this.props.mainObject) ===
                          null || _this$props$mainObjec === void 0
                          ? void 0
                          : (_this$props$mainObjec2 =
                              _this$props$mainObjec.landData) === null ||
                            _this$props$mainObjec2 === void 0
                          ? void 0
                          : (_this$props$mainObjec3 =
                              _this$props$mainObjec2.landData) === null ||
                            _this$props$mainObjec3 === void 0
                          ? void 0
                          : _this$props$mainObjec3.PLAN_NO) ||
                        this.props.input.value.temp.plan,
                      subTypeval: this.props.input.value.temp.subTypeval,
                      subNameval: this.props.input.value.temp.subNameval,
                      parcelDis: this.props.input.value.temp.parcelDis,
                      blockval: this.props.input.value.temp.blockval,
                      parcelval: this.props.input.value.temp.parcelval,
                      subname: this.props.input.value.temp.subname,
                      block_no: this.props.input.value.temp.block_no,
                      city_name: this.props.input.value.temp.city_name,
                    },
                    parcels: [...this.props.input.value.parcels],
                    parcelData: {
                      ...this.props.input.value.parcelData,
                    },
                    domainLists: {
                      ...this.state.domainLists,
                    },
                    // lists: {
                    //   firstParcels: [...this.state.parcelNum],
                    //   subDivNames: [...this.state.subDivNames],
                    //   MunicipalityNames: [...this.state.MunicipalityNames],
                    //   subDivType: [...this.state.subDivType],
                    //   PlanNum: [...this.state.PlanNum],
                    //   blockNum: [...this.state.blockNum],
                    // },
                  };
                  this.state.landsData["selectedRequestType"] =
                    (([22, 23].indexOf(this.props.currentModule.id) != -1 ||
                      [1928].indexOf(
                        (_this$props13 = this.props) === null ||
                          _this$props13 === void 0
                          ? void 0
                          : (_this$props13$current =
                              _this$props13.currentModule) === null ||
                            _this$props13$current === void 0
                          ? void 0
                          : (_this$props13$current2 =
                              _this$props13$current.record) === null ||
                            _this$props13$current2 === void 0
                          ? void 0
                          : _this$props13$current2.workflow_id
                      ) != -1) &&
                      [2190, 2191].indexOf(
                        (_this$props14 = this.props) === null ||
                          _this$props14 === void 0
                          ? void 0
                          : (_this$props14$current =
                              _this$props14.currentModule) === null ||
                            _this$props14$current === void 0
                          ? void 0
                          : (_this$props14$current2 =
                              _this$props14$current.record) === null ||
                            _this$props14$current2 === void 0
                          ? void 0
                          : _this$props14$current2.workflow_id
                      ) == -1 &&
                      this.state.selectedRequestType) ||
                    ([2190].indexOf(
                      (_this$props15 = this.props) === null ||
                        _this$props15 === void 0
                        ? void 0
                        : (_this$props15$current =
                            _this$props15.currentModule) === null ||
                          _this$props15$current === void 0
                        ? void 0
                        : (_this$props15$current2 =
                            _this$props15$current.record) === null ||
                          _this$props15$current2 === void 0
                        ? void 0
                        : _this$props15$current2.workflow_id
                    ) != -1 &&
                      "فرد") ||
                    ([2191].indexOf(
                      (_this$props16 = this.props) === null ||
                        _this$props16 === void 0
                        ? void 0
                        : (_this$props16$current =
                            _this$props16.currentModule) === null ||
                          _this$props16$current === void 0
                        ? void 0
                        : (_this$props16$current2 =
                            _this$props16$current.record) === null ||
                          _this$props16$current2 === void 0
                        ? void 0
                        : _this$props16$current2.workflow_id
                    ) != -1 &&
                      "اصدار الكروكي (المواطن)") ||
                    3;
                  this.props.input.onChange({
                    ...this.state.landsData,
                  });
                }
                this.setState({
                  mapLoaded: true,
                });
                this.props.setCurrentMap(map);
                //this.props.setMapLayers(mapLayers);
                _reducers__WEBPACK_IMPORTED_MODULE_10__["default"].dispatch({
                  type: "Show_Loading_new",
                  loading: false,
                });
              }
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(
              this,
              "setValue",
              (item, event) => {
                item.value = event.target.value;
                this.UpdateSubmissionDataObject();
              }
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(
              this,
              "OnParcelSelect",
              () => {
                this.setState({
                  parcelval: undefined,
                });
                Object(
                  _common_common_func__WEBPACK_IMPORTED_MODULE_8__[
                    "clearGraphicFromLayer"
                  ]
                )(this.map, "SelectGraphicLayer");
                Object(
                  _common_common_func__WEBPACK_IMPORTED_MODULE_8__[
                    "clearGraphicFromLayer"
                  ]
                )(this.map, "SelectLandsGraphicLayer");
                if (
                  !this.state.selectedLands.filter(
                    (e) => e.id === this.state.parcelId
                  ).length
                ) {
                  // ["PARCEL_AREA", "PARCEL_MAIN_LUSE", "PARCEL_LAT_COORD", "PARCEL_LONG_COORD", "PLAN_NO", "PARCEL_PLAN_NO", "USING_SYMBOL", "PARCEL_BLOCK_NO", "DISTRICT_NAME", "SUBDIVISION_DESCRIPTION", "SUBDIVISION_TYPE", "PARCEL_SPATIAL_ID", "MUNICIPALITY_NAME"]

                  Object(
                    _common_common_func__WEBPACK_IMPORTED_MODULE_8__[
                      "queryTask"
                    ]
                  )({
                    ...Object(
                      _Helpers__WEBPACK_IMPORTED_MODULE_18__["querySetting"]
                    )(
                      this.LayerID.Landbase_Parcel,
                      `PARCEL_SPATIAL_ID =${this.state.parcelId}`,
                      true,
                      ["*"]
                    ),
                    callbackResult: (res) => {
                      if (
                        this.state.selectedLands &&
                        this.state.selectedLands.length == 0
                      ) {
                        Object(
                          _common_common_func__WEBPACK_IMPORTED_MODULE_8__[
                            "queryTask"
                          ]
                        )({
                          ...Object(
                            _Helpers__WEBPACK_IMPORTED_MODULE_18__[
                              "querySetting"
                            ]
                          )(
                            this.LayerID.Tbl_Parcel_Conditions,
                            `USING_SYMBOL_CODE ='${res.features[0].attributes.USING_SYMBOL}'`,
                            false,
                            [
                              "SLIDE_AREA",
                              "MIN_FROT_OFFSET",
                              "BUILDING_RATIO",
                              "FRONT_OFFSET",
                              "SIDE_OFFSET",
                              "BACK_OFFSET",
                              "FLOORS",
                              "FLOOR_HEIGHT",
                              "FAR",
                              "ADD_FLOOR",
                            ]
                          ),
                          callbackResult: (condition) => {
                            this.setState({
                              conditions: condition.features,
                            });
                            Object(
                              _common_common_func__WEBPACK_IMPORTED_MODULE_8__[
                                "getFeatureDomainName"
                              ]
                            )(res.features, this.LayerID.Landbase_Parcel).then(
                              (r) => {
                                this.addParcelToSelect(r[0]).then(
                                  (res) => {
                                    this.setToStore(r);
                                    this.setState({
                                      parcelId: null,
                                      parcelNum: res.features,
                                    });
                                    this.selectedLandsT.push(res);
                                    this.DrawGraph();
                                  },
                                  () => {
                                    this.state.selectedLands.pop();
                                    this.setToStore();
                                  }
                                );
                              }
                            );
                          },
                        });
                      } else {
                        Object(
                          _common_common_func__WEBPACK_IMPORTED_MODULE_8__[
                            "getFeatureDomainName"
                          ]
                        )(res.features, this.LayerID.Landbase_Parcel).then(
                          (r) => {
                            this.addParcelToSelect(r[0]).then(
                              (res) => {
                                this.setToStore(r);
                                this.setState({
                                  parcelId: null,
                                  parcelNum: res.features,
                                });
                                this.selectedLandsT.push(res);
                                this.DrawGraph();
                              },
                              () => {
                                this.state.selectedLands.pop();
                                this.setToStore();
                              }
                            );
                          }
                        );
                      }
                    },
                  });
                }
              }
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(
              this,
              "setToStore",
              (r) => {
                var _this$props17,
                  _this$props17$current,
                  _this$props17$current2,
                  _this$props18,
                  _this$props18$current,
                  _this$props18$current2,
                  _this$props19,
                  _this$props19$current,
                  _this$props19$current2,
                  _this$props20,
                  _this$props20$current,
                  _this$props20$current2;
                const {
                  input: { value },
                } = this.props;
                this.state.landsData = {
                  ...value,
                  mapGraphics: [],
                  conditions: this.state.conditions,
                  parcelData: {
                    ...this.state.parcelData,
                  },
                  temp: {
                    //map: this.map,
                    // ...value,
                    mun: this.state.munval,
                    plan: this.state.planeval,
                    subTypeval: this.state.subTypeval,
                    subNameval: this.state.subNameval,
                    subname: this.state.subName_name,
                    parcelDis: this.parcelDis || this.RolBackParcelNum,
                    block_no: this.state.block_no,
                    blockval: this.state.blockval,
                    parcelval: this.state.parcelval,
                    city_name: this.state.city_name,
                  },
                  domainLists: {
                    ...this.state.domainLists,
                  },
                  // lists: {
                  //   firstParcels: [...this.state.parcelNum],
                  //   subDivNames: [...this.state.subDivNames],
                  //   MunicipalityNames: [...this.state.MunicipalityNames],
                  //   subDivType: [...this.state.subDivType],
                  //   PlanNum: [...this.state.PlanNum],
                  //   blockNum: [...this.state.blockNum],
                  // },
                };
                if (r) {
                  r[0].attributes.PARCEL_AREA = "";
                  this.state.selectedLands.push({
                    geometry: r[0].geometry,
                    attributes: r[0].attributes,
                    id: this.state.parcelId,
                  });
                  Object(
                    _common_common_func__WEBPACK_IMPORTED_MODULE_8__[
                      "map_object"
                    ]
                  )(this.state.selectedLands);
                  this[
                    "edit_PARCEL_AREA" + (this.state.selectedLands.length - 1)
                  ] = r[0].attributes.PARCEL_AREA;
                  this[
                    "edit_PARCEL_BLOCK_NO" +
                      (this.state.selectedLands.length - 1)
                  ] = r[0].attributes.PARCEL_BLOCK_NO;
                  this[
                    "edit_DISTRICT_NAME" + (this.state.selectedLands.length - 1)
                  ] = r[0].attributes.DISTRICT_NAME;
                  this[
                    "edit_SUBDIVISION_TYPE" +
                      (this.state.selectedLands.length - 1)
                  ] = r[0].attributes.SUBDIVISION_TYPE;
                  this[
                    "edit_SUBDIVISION_DESCRIPTION" +
                      (this.state.selectedLands.length - 1)
                  ] = r[0].attributes.SUBDIVISION_DESCRIPTION;
                }
                this.checkUnitNumberAvailability(
                  [...this.state.selectedLands],
                  this.state.munval
                );
                this.state.landsData["parcels"] = [...this.state.selectedLands];
                this.state.landsData["selectedRequestType"] =
                  (([22, 23].indexOf(this.props.currentModule.id) != -1 ||
                    [1928].indexOf(
                      (_this$props17 = this.props) === null ||
                        _this$props17 === void 0
                        ? void 0
                        : (_this$props17$current =
                            _this$props17.currentModule) === null ||
                          _this$props17$current === void 0
                        ? void 0
                        : (_this$props17$current2 =
                            _this$props17$current.record) === null ||
                          _this$props17$current2 === void 0
                        ? void 0
                        : _this$props17$current2.workflow_id
                    ) != -1) &&
                    [2190, 2191].indexOf(
                      (_this$props18 = this.props) === null ||
                        _this$props18 === void 0
                        ? void 0
                        : (_this$props18$current =
                            _this$props18.currentModule) === null ||
                          _this$props18$current === void 0
                        ? void 0
                        : (_this$props18$current2 =
                            _this$props18$current.record) === null ||
                          _this$props18$current2 === void 0
                        ? void 0
                        : _this$props18$current2.workflow_id
                    ) == -1 &&
                    this.state.selectedRequestType) ||
                  ([2190].indexOf(
                    (_this$props19 = this.props) === null ||
                      _this$props19 === void 0
                      ? void 0
                      : (_this$props19$current =
                          _this$props19.currentModule) === null ||
                        _this$props19$current === void 0
                      ? void 0
                      : (_this$props19$current2 =
                          _this$props19$current.record) === null ||
                        _this$props19$current2 === void 0
                      ? void 0
                      : _this$props19$current2.workflow_id
                  ) != -1 &&
                    "فرد") ||
                  ([2191].indexOf(
                    (_this$props20 = this.props) === null ||
                      _this$props20 === void 0
                      ? void 0
                      : (_this$props20$current =
                          _this$props20.currentModule) === null ||
                        _this$props20$current === void 0
                      ? void 0
                      : (_this$props20$current2 =
                          _this$props20$current.record) === null ||
                        _this$props20$current2 === void 0
                      ? void 0
                      : _this$props20$current2.workflow_id
                  ) != -1 &&
                    "اصدار الكروكي (المواطن)") ||
                  3;
                this.props.input.onChange({
                  ...this.state.landsData,
                });
              }
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(
              this,
              "setAdjacentToStore",
              (r) => {
                let store_value = this.props.input.value;
                store_value.temp.parcelDis = r;
                this.props.input.onChange(store_value);
              }
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(
              this,
              "checkUnitNumberAvailability",
              (selectedLands, munval) => {
                var _this$props21, _this$props21$current;
                if (
                  [10501, 10506, 10513].indexOf(munval) != -1 &&
                  selectedLands.find(
                    (parcel) => parcel.attributes.USING_SYMBOL_Code == "س1-أ"
                  ) != undefined &&
                  [1].indexOf(
                    (_this$props21 = this.props) === null ||
                      _this$props21 === void 0
                      ? void 0
                      : (_this$props21$current =
                          _this$props21.currentModule) === null ||
                        _this$props21$current === void 0
                      ? void 0
                      : _this$props21$current.record.app_id
                  ) != -1
                ) {
                  this.parcel_fields_headers =
                    (!this.parcel_fields_headers.find(
                      (f) => f == "عدد الوحدات"
                    ) && [...this.parcel_fields_headers, "عدد الوحدات"]) || [
                      ...this.parcel_fields_headers,
                    ];
                  this.parcel_fields = (!this.parcel_fields.find(
                    (f) => f.name == "UNITS_NUMBER"
                  ) && [
                    ...this.parcel_fields,
                    {
                      name: "UNITS_NUMBER",
                      editable: false,
                      dependsOn: "USING_SYMBOL_Code",
                      value: "س1-أ",
                    },
                  ]) || [...this.parcel_fields];
                }
              }
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(
              this,
              "LandHoverOn",
              (f) => {
                var _this$props22, _this$props22$current;
                if (
                  !this.state.selectedLands.length &&
                  [1].indexOf(
                    (_this$props22 = this.props) === null ||
                      _this$props22 === void 0
                      ? void 0
                      : (_this$props22$current =
                          _this$props22.currentModule) === null ||
                        _this$props22$current === void 0
                      ? void 0
                      : _this$props22$current.record.app_id
                  ) != -1
                ) {
                  return;
                }
                var fitleredGraphics = this.map
                  .getLayer("SelectGraphicLayer")
                  .graphics.filter((graphic) => {
                    var _graphic$attributes, _f$attributes;
                    return (
                      (graphic === null || graphic === void 0
                        ? void 0
                        : (_graphic$attributes = graphic.attributes) === null ||
                          _graphic$attributes === void 0
                        ? void 0
                        : _graphic$attributes.OBJECTID) !=
                      (f === null || f === void 0
                        ? void 0
                        : (_f$attributes = f.attributes) === null ||
                          _f$attributes === void 0
                        ? void 0
                        : _f$attributes.OBJECTID)
                    );
                  });
                fitleredGraphics = [
                  ...new Map(
                    fitleredGraphics.map((item) => {
                      var _item$attributes;
                      return [
                        item === null || item === void 0
                          ? void 0
                          : (_item$attributes = item["attributes"]) === null ||
                            _item$attributes === void 0
                          ? void 0
                          : _item$attributes["OBJECTID"],
                        item,
                      ];
                    })
                  ).values(),
                ];
                Object(
                  _common_common_func__WEBPACK_IMPORTED_MODULE_8__[
                    "clearGraphicFromLayer"
                  ]
                )(this.map, "SelectGraphicLayer");
                fitleredGraphics.forEach((graphic) => {
                  this.map.getLayer("SelectGraphicLayer").add(graphic);
                });
                Object(
                  _common_common_func__WEBPACK_IMPORTED_MODULE_8__[
                    "highlightFeature"
                  ]
                )([f], this.map, {
                  layerName: "SelectGraphicLayer",
                  noclear: true,
                  isZoom: false,
                  isHiglightSymbol: false,
                  attr: true,
                });
              }
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(
              this,
              "LandHoverOff",
              (f) => {
                var _this$props23,
                  _this$props23$current,
                  _f$attributes2,
                  _this$state;
                if (
                  !this.state.selectedLands.length &&
                  [1].indexOf(
                    (_this$props23 = this.props) === null ||
                      _this$props23 === void 0
                      ? void 0
                      : (_this$props23$current =
                          _this$props23.currentModule) === null ||
                        _this$props23$current === void 0
                      ? void 0
                      : _this$props23$current.record.app_id
                  ) != -1
                ) {
                  return;
                }
                if (
                  f &&
                  (f === null || f === void 0
                    ? void 0
                    : (_f$attributes2 = f.attributes) === null ||
                      _f$attributes2 === void 0
                    ? void 0
                    : _f$attributes2.PARCEL_SPATIAL_ID) !=
                    ((_this$state = this.state) === null ||
                    _this$state === void 0
                      ? void 0
                      : _this$state.parcelId)
                ) {
                  Object(
                    _common_common_func__WEBPACK_IMPORTED_MODULE_8__[
                      "highlightFeature"
                    ]
                  )([f], this.map, {
                    layerName: "SelectGraphicLayer",
                    noclear: true,
                    isZoom: false,
                    isHiglightSymbol: true,
                    highlighColor: [0, 255, 0, 0.5],
                    attr: true,
                  });
                }
              }
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(
              this,
              "remove",
              (item) => {
                let { mainObject } = this.props;
                if (mainObject && mainObject.waseka) {
                  delete mainObject.waseka;
                }
                this.state.parcelData = {};
                this.state.selectedLands.pop(item);
                //this.props.input.value.parcels = slice(this.props.input.value.parcels, 0, -1)
                // this.props.input.onChange([...values])
                if (this.state.selectedLandsT) {
                  this.state.selectedLandsT.pop(item);
                }
                this.DrawGraph();
                this.UpdateSubmissionDataObject();
              }
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(
              this,
              "openPopup",
              (scope) => {
                var fields = this.parcelDataFields;
                this.props.setMain("Popup", {
                  popup: {
                    type: "create",
                    childProps: {
                      fields,
                      initialValues: {
                        ...scope.state.parcelData,
                      },
                      ok(values) {
                        scope.state["parcelData"] = values;
                        scope.UpdateSubmissionDataObject();
                        return Promise.resolve(true);
                      },
                    },
                  },
                });
              }
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(
              this,
              "myChangeHandler",
              (name, i, e, event) => {
                this["edit_" + name + i] = event.target.value;
                e.attributes[name] = event.target.value;
                //e.attributes['PARCEL_AREA'] = event.target.value;
                this.setState({
                  [name + "_isEdit_" + i]: true,
                });
              }
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(
              this,
              "selectOnchange",
              (name, i, e, value) => {
                this["edit_" + name + i] = value;
                e.attributes[name] = value;
                //e.attributes['PARCEL_AREA'] = event.target.value;
                this.setState({
                  [name + "_isEdit_" + i]: true,
                });
              }
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(
              this,
              "showEditBtn",
              (name, value) => {
                if (name == "USING_SYMBOL") {
                  return value == null;
                } else {
                  return (
                    [
                      "PARCEL_AREA",
                      "PARCEL_BLOCK_NO",
                      "DISTRICT_NAME",
                      "SUBDIVISION_TYPE",
                      "SUBDIVISION_DESCRIPTION",
                    ].indexOf(name) > -1
                  );
                }
              }
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(
              this,
              "enableEdit",
              (name, i) => {
                this.setState({
                  [name + "_isEdit_" + i]: true,
                });
              }
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(
              this,
              "exportCad",
              () => {
                console.log(this.state.selectedLands);
                var polygons = this.state.selectedLands;
                var cadPolygons = [];
                polygons.forEach((polygon) => {
                  delete polygon.geometry.cache;
                  var jsonParcel = {
                    geometry: polygon.geometry,
                    attributes: {
                      Layer: "floor",
                      Color: 1,
                      LyrColor: 1,
                    },
                  };
                  cadPolygons.push(jsonParcel);
                });
                var jsonParcel = {
                  attributes: {
                    Layer: "plus",
                    Color: 2,
                    LyrColor: 2,
                  },
                };
                Object(
                  _common_common_func__WEBPACK_IMPORTED_MODULE_8__[
                    "uploadGISFile"
                  ]
                )(
                  `${window.restServicesPath}/ExportGeoDataToCAD/GPServer/ExportGeoDataToCAD`,
                  {
                    ParcelsToExport: JSON.stringify(cadPolygons), //`[${featuresList.join(", ")}]` ,
                  },
                  (data) => {
                    //store.dispatch({ type: "Show_Loading_new", loading: false });
                    data.value.split(",").forEach((item) => {
                      //setTimeout(() => {

                      var file_path =
                        window.filesHost +
                        "/" +
                        item.replaceAll(/\s/g, "").replaceAll("\\", "/");
                      var a = document.createElement("A");
                      a.href = file_path;
                      a.download = file_path.substr(
                        file_path.lastIndexOf("/") + 1
                      );
                      document.body.appendChild(a);
                      a.click();
                      document.body.removeChild(a);
                      //}, 1000);
                    });
                  }
                );
              }
            );
            this.PlanNum = [];
            this.planId = null;
            this.parcelTs = [];
            this.selectedLandsT =
              ((props === null || props === void 0
                ? void 0
                : (_props$input = props.input) === null ||
                  _props$input === void 0
                ? void 0
                : (_props$input$value = _props$input.value) === null ||
                  _props$input$value === void 0
                ? void 0
                : (_props$input$value$te = _props$input$value.temp) === null ||
                  _props$input$value$te === void 0
                ? void 0
                : _props$input$value$te.parcelDis) && [
                {
                  features:
                    props === null || props === void 0
                      ? void 0
                      : (_props$input2 = props.input) === null ||
                        _props$input2 === void 0
                      ? void 0
                      : (_props$input2$value = _props$input2.value) === null ||
                        _props$input2$value === void 0
                      ? void 0
                      : (_props$input2$value$t = _props$input2$value.temp) ===
                          null || _props$input2$value$t === void 0
                      ? void 0
                      : _props$input2$value$t.parcelDis,
                },
              ]) ||
              [];
            this.selectedLands = [];
            this.selectionMode = false;
            this.parcel_fields_headers = this.props.parcel_fields_headers || [
              "رقم الأرض",
              "المساحة (م۲)",
              "رقم المخطط",
              "رقم البلك",
              "الحي",
              "نوع التقسيم",
              "اسم التقسيم",
              "رمز الإستخدام",
            ];
            this.parcel_fields = this.props.parcel_fields || [
              {
                name: "PARCEL_PLAN_NO",
                editable: false,
                type: "text",
              },
              {
                name: "PARCEL_AREA",
                editable: (!this.props.isView && true) || false,
                type: "number",
              },
              {
                name: "PLAN_NO",
                editable: (!this.props.isView && true) || false,
                type: "text",
              },
              {
                name: "PARCEL_BLOCK_NO",
                editable: (!this.props.isView && true) || false,
                type: "text",
              },
              {
                name: "DISTRICT_NAME",
                editable: (!this.props.isView && true) || false,
                type: "text",
              },
              {
                name: "SUBDIVISION_TYPE",
                editable: (!this.props.isView && true) || false,
                type: "select",
              },
              {
                name: "SUBDIVISION_DESCRIPTION",
                editable: (!this.props.isView && true) || false,
                type: "text",
              },
              {
                name: "USING_SYMBOL",
                editable: false,
              },
            ];
            this.checkUnitNumberAvailability(
              [...((props.input && props.input.value.parcels) || [])],
              props === null || props === void 0
                ? void 0
                : (_props$input3 = props.input) === null ||
                  _props$input3 === void 0
                ? void 0
                : (_props$input3$value = _props$input3.value) === null ||
                  _props$input3$value === void 0
                ? void 0
                : (_props$input3$value$t = _props$input3$value.temp) === null ||
                  _props$input3$value$t === void 0
                ? void 0
                : _props$input3$value$t.mun
            );
            this.parcelDataFields = {};
            if (
              ([22, 23].indexOf(props.currentModule.id) != -1 ||
                [1928].indexOf(props.currentModule.record.workflow_id) != -1) &&
              props.is_parcel_type
            ) {
              this.parcelDataFields["parcel_type"] = {
                label: "عبارة عن",
                placeholder: "من فضلك اخل نوع الأرض",
                type: "text",
                name: "parcel_type",
                required: true,
                // label: "عبارة عن",
                // placeholder: "من فضلك اخل نوع الأرض",
                // type: "input",
                // field: "select",
                // className: "select_flex",
                // name: "parcel_type",
                // data: [
                //   { label: "أرض فضاء", value: "أرض فضاء" },
                //   { label: "مبنى سكني", value: "مبنى سكني" },
                //   { label: "ورشة", value: "ورشة" },
                //   { label: "أخرى", value: "أخرى" },
                // ],
                // required: true,
              };
            }
            this.parcelDataFields["north_length"] = {
              label: "طول الحد الشمالي (م)",
              placeholder: "من فضلك ادخل طول الحد الشمالي (م)",
              field: "inputNumber",
              name: "north_length",
              required: true,
            };
            this.parcelDataFields["north_desc"] = {
              label: "وصف الحد الشمالي",
              placeholder: "من فضلك ادخل وصف الحد الشمالي",
              type: "text",
              name: "north_desc",
              maxLength: 200,
              required: true,
            };
            this.parcelDataFields["south_length"] = {
              label: "طول الحد الجنوبي (م)",
              placeholder: "من فضلك ادخل طول الحد الجنوبي (م)",
              field: "inputNumber",
              name: "south_length",
              required: true,
            };
            (this.parcelDataFields["south_desc"] = {
              label: "وصف الحد الجنوبي",
              placeholder: "من فضلك ادخل وصف الحد الجنوبي",
              type: "text",
              name: "south_desc",
              maxLength: 200,
              required: true,
            }),
              (this.parcelDataFields["east_length"] = {
                label: "طول الحد الشرقي (م)",
                placeholder: "من فضلك ادخل طول الحد الشرقي (م)",
                field: "inputNumber",
                name: "east_length",
                required: true,
              });
            this.parcelDataFields["east_desc"] = {
              label: "وصف الحد الشرقي",
              placeholder: "من فضلك ادخل وصف الحد الشرقي",
              type: "text",
              name: "east_desc",
              maxLength: 200,
              required: true,
            };
            this.parcelDataFields["west_length"] = {
              label: "طول الحد الغربي (م)",
              placeholder: "من فضلك ادخل طول الحد الغربي (م)",
              field: "inputNumber",
              name: "west_length",
              required: true,
            };
            this.parcelDataFields["west_desc"] = {
              label: "وصف الحد الغربي",
              placeholder: "من فضلك ادخل وصف الحد الغربي",
              type: "text",
              name: "west_desc",
              maxLength: 200,
              required: true,
            };
            Object(
              _common_common_func__WEBPACK_IMPORTED_MODULE_8__["map_object"]
            )(props.input && props.input.value.parcels);
            this.state = {
              boundariesBtnIsVisible:
                this.props.boundariesBtnIsVisible != undefined
                  ? this.props.boundariesBtnIsVisible
                  : true,
              mapLoaded: false,
              munval:
                (props.input &&
                  props.input.value.temp &&
                  props.input.value.temp.mun) ||
                undefined,
              planeval:
                ((_this$props$mainObjec4 = this.props.mainObject) === null ||
                _this$props$mainObjec4 === void 0
                  ? void 0
                  : (_this$props$mainObjec5 =
                      _this$props$mainObjec4.landData) === null ||
                    _this$props$mainObjec5 === void 0
                  ? void 0
                  : (_this$props$mainObjec6 =
                      _this$props$mainObjec5.landData) === null ||
                    _this$props$mainObjec6 === void 0
                  ? void 0
                  : _this$props$mainObjec6.PLAN_NO) ||
                (props.input &&
                  props.input.value.temp &&
                  props.input.value.temp.plan) ||
                undefined,
              subTypeval:
                (props.input &&
                  props.input.value.temp &&
                  props.input.value.temp.subTypeval) ||
                undefined,
              subNameval:
                (props.input &&
                  props.input.value.temp &&
                  props.input.value.temp.subNameval) ||
                undefined,
              blockval:
                (props.input &&
                  props.input.value.temp &&
                  props.input.value.temp.blockval) ||
                undefined,
              selectedLands: (props.input && props.input.value.parcels) || [],
              parcelval:
                (props.input &&
                  props.input.value.temp &&
                  props.input.value.temp.parcelval) ||
                undefined,
              blockNum: [],
              subDivNames: [],
              subDivType: [],
              MunicipalityNames: [],
              PlanNum: [],
              // blockNum:
              //   (props.input.value.lists && props.input.value.lists.blockNum) || [],
              conditions:
                (props.input && props.input.value.conditions) || undefined,
              planSersh: null,
              // subDivNames:
              //   (props.input.value.lists && props.input.value.lists.subDivNames) || [],
              // subDivType:
              //   (props.input.value.lists && props.input.value.lists.subDivType) || [],
              parcelNum:
                ((_this$props24 = this.props) === null ||
                _this$props24 === void 0
                  ? void 0
                  : (_this$props24$input = _this$props24.input) === null ||
                    _this$props24$input === void 0
                  ? void 0
                  : (_this$props24$input$v = _this$props24$input.value) ===
                      null || _this$props24$input$v === void 0
                  ? void 0
                  : (_this$props24$input$v2 = _this$props24$input$v.temp) ===
                      null || _this$props24$input$v2 === void 0
                  ? void 0
                  : _this$props24$input$v2.parcelDis) || [],
              parcelNumS: [],
              // MunicipalityNames:
              //   (props.input.value.lists &&
              //     props.input.value.lists.MunicipalityNames) ||
              //   [],
              requestTypes: [
                {
                  code: 1,
                  name: "فرز",
                  key: "",
                },
                {
                  code: 2,
                  name: "دمج",
                  key: "",
                },
                //{ code: 3, name: "تقسيم", key: "" },
              ],
              // PlanNum:
              //   (props.input.value.lists && props.input.value.lists.PlanNum) || [],
              parcelId: null,
              mapExtend: null,
              parcelSearch: null,
              poly: null,
              selectedRequestType:
                (props === null || props === void 0
                  ? void 0
                  : (_props$input4 = props.input) === null ||
                    _props$input4 === void 0
                  ? void 0
                  : (_props$input4$value = _props$input4.value) === null ||
                    _props$input4$value === void 0
                  ? void 0
                  : _props$input4$value.selectedRequestType) ||
                ([2190, 2191].indexOf(
                  (_this$props25 = this.props) === null ||
                    _this$props25 === void 0
                    ? void 0
                    : (_this$props25$current = _this$props25.currentModule) ===
                        null || _this$props25$current === void 0
                    ? void 0
                    : (_this$props25$current2 =
                        _this$props25$current.record) === null ||
                      _this$props25$current2 === void 0
                    ? void 0
                    : _this$props25$current2.workflow_id
                ) == -1 &&
                  1) ||
                (props === null || props === void 0
                  ? void 0
                  : (_props$mainObject = props.mainObject) === null ||
                    _props$mainObject === void 0
                  ? void 0
                  : (_props$mainObject$lan = _props$mainObject.landData) ===
                      null || _props$mainObject$lan === void 0
                  ? void 0
                  : _props$mainObject$lan.requestType) ||
                "",
              parcelData: props.input.value.parcelData || {},
              landsData: {},
              domainLists: props.input.value.domainLists || {},
              city_name:
                props === null || props === void 0
                  ? void 0
                  : (_props$input5 = props.input) === null ||
                    _props$input5 === void 0
                  ? void 0
                  : (_props$input5$value = _props$input5.value) === null ||
                    _props$input5$value === void 0
                  ? void 0
                  : (_props$input5$value$t = _props$input5$value.temp) ===
                      null || _props$input5$value$t === void 0
                  ? void 0
                  : _props$input5$value$t.city_name,
            };
            this.isloaded = true;
          }
          componentDidMount() {
            if (
              // this.props.mainObject &&
              // this.props.mainObject.landData &&
              this.isloaded
            ) {
              window.filterUrl =
                _mapviewer_config_map__WEBPACK_IMPORTED_MODULE_12__["mapUrl"];
              Object(
                _common_common_func__WEBPACK_IMPORTED_MODULE_8__["getInfo"]
              )().then((res) => {
                this.LayerID = res;
                Object(_common__WEBPACK_IMPORTED_MODULE_9__["getParcels"])(
                  this,
                  null,
                  "",
                  {
                    returnDistinctValues: true,
                  },
                  ["MUNICIPALITY_NAME"]
                ).then((features) => {
                  Object(
                    _common_common_func__WEBPACK_IMPORTED_MODULE_8__[
                      "getFeatureDomainName"
                    ]
                  )(features, this.LayerID.Landbase_Parcel).then((features) => {
                    this.setState(
                      {
                        MunicipalityNames: features
                          .filter((r) => r.attributes.MUNICIPALITY_NAME)
                          .map((r) => {
                            return {
                              code: r.attributes.MUNICIPALITY_NAME_Code,
                              name: r.attributes.MUNICIPALITY_NAME,
                            };
                          }),
                        allParcels: features,
                      },
                      () => {
                        this.loadLists = true;
                        if (this.state.munval) {
                          Object(
                            _common__WEBPACK_IMPORTED_MODULE_9__["onMunChange"]
                          )(this, this.state.munval, () => {
                            Object(
                              _common__WEBPACK_IMPORTED_MODULE_9__[
                                "onPlaneChange"
                              ]
                            )(this, this.state.planeval, () => {
                              Object(
                                _common__WEBPACK_IMPORTED_MODULE_9__[
                                  "onSubTypeChange"
                                ]
                              )(this, this.state.subTypeval, () => {
                                Object(
                                  _common__WEBPACK_IMPORTED_MODULE_9__[
                                    "onSubNameChange"
                                  ]
                                )(this, this.state.subNameval, () => {
                                  Object(
                                    _common__WEBPACK_IMPORTED_MODULE_9__[
                                      "onBlockChange"
                                    ]
                                  )(this, this.state.blockval, () => {
                                    Object(
                                      _common__WEBPACK_IMPORTED_MODULE_9__[
                                        "onLandParcelChange"
                                      ]
                                    )(this, this.state.parcelval, () => {});
                                  });
                                });
                              });
                            });
                          });
                        }
                        this.loadLists = false;
                      }
                    );
                  });
                });
                Object(
                  _common_esri_request__WEBPACK_IMPORTED_MODULE_7__[
                    "esriRequest"
                  ]
                )(
                  _mapviewer_config_map__WEBPACK_IMPORTED_MODULE_12__[
                    "mapUrl"
                  ] +
                    "/" +
                    this.LayerID.Subdivision
                ).then((response) => {
                  if (this.parcel_fields[5]) {
                    this.parcel_fields[5].options =
                      response.fields[7].domain.codedValues;
                  }
                  this.setState({
                    subDivType: response.fields[7].domain.codedValues,
                  });
                  //this.forceUpdate();
                });
              });
              this.isloaded = false;
            }
          }
          replaceAll(str, find, replace) {
            return str.replace(new RegExp(find, "g"), replace);
          }
          saveEdit(id, name, i) {
            let findParcel = this.props.input.value.parcels.find((p) => {
              var _p$attributes;
              return (
                [
                  p === null || p === void 0 ? void 0 : p.id,
                  p === null || p === void 0
                    ? void 0
                    : (_p$attributes = p.attributes) === null ||
                      _p$attributes === void 0
                    ? void 0
                    : _p$attributes.PARCEL_SPATIAL_ID,
                ].indexOf(id) != -1
              );
            });
            findParcel.attributes[name] =
              this["edit_" + name + i] || findParcel.attributes[name];
            let selectLand = this.state.selectedLands.find((p) => {
              var _p$attributes2;
              return (
                [
                  p === null || p === void 0 ? void 0 : p.id,
                  p === null || p === void 0
                    ? void 0
                    : (_p$attributes2 = p.attributes) === null ||
                      _p$attributes2 === void 0
                    ? void 0
                    : _p$attributes2.PARCEL_SPATIAL_ID,
                ].indexOf(id) != -1
              );
            });
            selectLand.attributes[name] =
              this["edit_" + name + i] || selectLand.attributes[name];
            this.setState(
              {
                [name + "_isEdit_" + i]: false,
                selectedLands: [...this.state.selectedLands],
              },
              () => {
                this.UpdateSubmissionDataObject();
              }
            );
          }
          render() {
            var _this$props26,
              _this$props26$current,
              _this$props26$current2,
              _this$props27,
              _this$props27$current,
              _this$props27$current2,
              _this$props28,
              _this$props28$current,
              _this$props28$current2,
              _this$props29,
              _this$props29$current,
              _this$props29$current2,
              _this$state$Municipal,
              _this$props30;
            const {
              parcelData,
              selectedLands,
              MunicipalityNames,
              subDivType,
              subDivNames,
              subNameval,
              blockNum,
              blockval,
              PlanNum,
              mapLoaded,
              planeval,
              parcelSearch,
              parcelNum,
              parcelval,
              conditions,
              requestTypes,
              selectedRequestType,
              boundariesBtnIsVisible,
            } = this.state;
            const { t, fullMapWidth } = this.props;
            var parcelBtnDisabled = false; // this.props?.currentModule?.record?.workflow_id
            if (
              ([22, 23].indexOf(this.props.currentModule.id) != -1 ||
                [1928].indexOf(
                  (_this$props26 = this.props) === null ||
                    _this$props26 === void 0
                    ? void 0
                    : (_this$props26$current = _this$props26.currentModule) ===
                        null || _this$props26$current === void 0
                    ? void 0
                    : (_this$props26$current2 =
                        _this$props26$current.record) === null ||
                      _this$props26$current2 === void 0
                    ? void 0
                    : _this$props26$current2.workflow_id
                ) != -1) &&
              [2190, 2191].indexOf(
                (_this$props27 = this.props) === null ||
                  _this$props27 === void 0
                  ? void 0
                  : (_this$props27$current = _this$props27.currentModule) ===
                      null || _this$props27$current === void 0
                  ? void 0
                  : (_this$props27$current2 = _this$props27$current.record) ===
                      null || _this$props27$current2 === void 0
                  ? void 0
                  : _this$props27$current2.workflow_id
              ) == -1 &&
              selectedRequestType == 1 &&
              selectedLands.length > 0
            ) {
              parcelBtnDisabled = true;
            }
            return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(
              "div",
              null,
              /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(
                "div",
                {
                  className: !fullMapWidth
                    ? "content-section implementation"
                    : "",
                },
                /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(
                  "div",
                  {
                    style: (!this.props.isView && {
                      display: "flex",
                      marginTop: "35px",
                    }) || {
                      display: "flex",
                      alignItems: "center",
                      justifyContent: "center",
                    },
                  },
                  (mapLoaded &&
                    !this.props.isView &&
                    /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(
                      "div",
                      {
                        style: {
                          direction: "ltr",
                        },
                      },
                      ([22, 23].indexOf(this.props.currentModule.id) != -1 ||
                        [1928].indexOf(
                          (_this$props28 = this.props) === null ||
                            _this$props28 === void 0
                            ? void 0
                            : (_this$props28$current =
                                _this$props28.currentModule) === null ||
                              _this$props28$current === void 0
                            ? void 0
                            : (_this$props28$current2 =
                                _this$props28$current.record) === null ||
                              _this$props28$current2 === void 0
                            ? void 0
                            : _this$props28$current2.workflow_id
                        ) != -1) &&
                        [2190, 2191].indexOf(
                          (_this$props29 = this.props) === null ||
                            _this$props29 === void 0
                            ? void 0
                            : (_this$props29$current =
                                _this$props29.currentModule) === null ||
                              _this$props29$current === void 0
                            ? void 0
                            : (_this$props29$current2 =
                                _this$props29$current.record) === null ||
                              _this$props29$current2 === void 0
                            ? void 0
                            : _this$props29$current2.workflow_id
                        ) == -1 &&
                        /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(
                          antd_lib_select__WEBPACK_IMPORTED_MODULE_5___default.a,
                          {
                            getPopupContainer: (trigger) => trigger.parentNode,
                            autoFocus: true,
                            onChange: this.parcelQueryTask.bind(this),
                            showSearch: true,
                            value: this.state.selectedRequestType,
                            placeholder:
                              "\u0627\u062E\u062A\u0631 \u0646\u0648\u0639 \u0627\u0644\u0645\u0639\u0627\u0645\u0644\u0629",
                            optionFilterProp: "children",
                            filterOption: (input, option) => {
                              if (option.props.children) {
                                return (
                                  option.props.children.find((i) => {
                                    return (
                                      i &&
                                      i.indexOf(input.trim().toLowerCase()) >= 0
                                    );
                                  }) != null
                                );
                              } else {
                                return false;
                              }
                            },
                          },
                          requestTypes.map((e) =>
                            /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(
                              Option,
                              {
                                key: e.code,
                                value: e.code,
                              },
                              e.name,
                              " "
                            )
                          )
                        ),
                      /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(
                        antd_lib_select__WEBPACK_IMPORTED_MODULE_5___default.a,
                        {
                          getPopupContainer: (trigger) => trigger.parentNode,
                          autoFocus: true,
                          onChange: (val) => {
                            Object(
                              _common__WEBPACK_IMPORTED_MODULE_9__[
                                "onMunChange"
                              ]
                            )(this, val);
                          },
                          showSearch: true,
                          value: this.state.munval,
                          placeholder:
                            "\u0627\u062E\u062A\u0631 \u0627\u0633\u0645 \u0627\u0644\u0628\u0644\u062F\u064A\u0647",
                          disabled: !(
                            (_this$state$Municipal =
                              this.state.MunicipalityNames) !== null &&
                            _this$state$Municipal !== void 0 &&
                            _this$state$Municipal.length
                          ),
                          optionFilterProp: "children",
                          filterOption: (input, option) => {
                            if (option.props.children) {
                              return (
                                option.props.children.find((i) => {
                                  return (
                                    i &&
                                    i.indexOf(input.trim().toLowerCase()) >= 0
                                  );
                                }) != null
                              );
                            } else {
                              return false;
                            }
                          },
                        },
                        MunicipalityNames === null ||
                          MunicipalityNames === void 0
                          ? void 0
                          : MunicipalityNames.map((e) =>
                              /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(
                                Option,
                                {
                                  key: e.code,
                                  value: e.code,
                                },
                                e.name,
                                " "
                              )
                            )
                      ),
                      /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(
                        antd_lib_select__WEBPACK_IMPORTED_MODULE_5___default.a,
                        {
                          onChange: (val) => {
                            Object(
                              _common__WEBPACK_IMPORTED_MODULE_9__[
                                "onPlaneChange"
                              ]
                            )(this, val);
                          },
                          showSearch: true,
                          getPopupContainer: (trigger) => trigger.parentNode,
                          autoFocus: true,
                          disabled: !PlanNum.length,
                          optionFilterProp: "children",
                          filterOption: (input, option) => {
                            if (option.props.children) {
                              var _option$props$childre;
                              return (
                                ((_option$props$childre =
                                  option.props.children) === null ||
                                _option$props$childre === void 0
                                  ? void 0
                                  : _option$props$childre.indexOf(
                                      Object(
                                        _common_common_func__WEBPACK_IMPORTED_MODULE_8__[
                                          "convertToArabic"
                                        ]
                                      )(input)
                                    )) != -1
                              );
                            } else {
                              return false;
                            }
                          },
                          value: planeval,
                          placeholder:
                            "\u0631\u0642\u0645 \u0627\u0644\u0645\u062E\u0637\u0637",
                          notFoundContent: "not found",
                        },
                        PlanNum
                          //.slice(0, 100)
                          .map((d, i) => {
                            return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(
                              Option,
                              {
                                key: i,
                                value: d.i,
                              },
                              Object(
                                _common_common_func__WEBPACK_IMPORTED_MODULE_8__[
                                  "convertToArabic"
                                ]
                              )(d.attributes.PLAN_NO)
                            );
                          })
                      ),
                      /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(
                        antd_lib_select__WEBPACK_IMPORTED_MODULE_5___default.a,
                        {
                          getPopupContainer: (trigger) => trigger.parentNode,
                          autoFocus: true,
                          onChange: (val) => {
                            Object(
                              _common__WEBPACK_IMPORTED_MODULE_9__[
                                "onSubTypeChange"
                              ]
                            )(this, val);
                          },
                          showSearch: true,
                          disabled: !subDivType.length,
                          value: this.state.subTypeval,
                          placeholder: "نوع التقسيم",
                          optionFilterProp: "children",
                          filterOption: (input, option) => {
                            if (option.props.children) {
                              var _option$props$childre2;
                              return (
                                ((_option$props$childre2 =
                                  option.props.children) === null ||
                                _option$props$childre2 === void 0
                                  ? void 0
                                  : _option$props$childre2.indexOf(
                                      Object(
                                        _common_common_func__WEBPACK_IMPORTED_MODULE_8__[
                                          "convertToArabic"
                                        ]
                                      )(input)
                                    )) != -1
                              );
                            } else {
                              return false;
                            }
                          },
                        },
                        subDivType
                          //.slice(0, 100)
                          .map((e, i) =>
                            /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(
                              Option,
                              {
                                key: i,
                                value: e.code,
                              },
                              " ",
                              e.name,
                              " "
                            )
                          )
                      ),
                      /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(
                        antd_lib_select__WEBPACK_IMPORTED_MODULE_5___default.a,
                        {
                          getPopupContainer: (trigger) => trigger.parentNode,
                          autoFocus: true,
                          onChange: (val) => {
                            Object(
                              _common__WEBPACK_IMPORTED_MODULE_9__[
                                "onSubNameChange"
                              ]
                            )(this, val);
                          },
                          showSearch: true,
                          disabled: !subDivNames.length,
                          placeholder:
                            "\u0627\u0633\u0645 \u0627\u0644\u062A\u0642\u0633\u064A\u0645",
                          value: subNameval,
                          optionFilterProp: "children",
                          filterOption: (input, option) => {
                            if (option.props.children) {
                              var _option$props$childre3;
                              return (
                                ((_option$props$childre3 =
                                  option.props.children) === null ||
                                _option$props$childre3 === void 0
                                  ? void 0
                                  : _option$props$childre3.indexOf(
                                      Object(
                                        _common_common_func__WEBPACK_IMPORTED_MODULE_8__[
                                          "convertToArabic"
                                        ]
                                      )(input)
                                    )) != -1
                              );
                            } else {
                              return false;
                            }
                          },
                        },
                        subDivNames
                          //.slice(0, 100)
                          .map((e, i) =>
                            /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(
                              Option,
                              {
                                key: i,
                                value: e.attributes.SUBDIVISION_SPATIAL_ID,
                              },
                              " ",
                              e.attributes.SUBDIVISION_DESCRIPTION
                            )
                          )
                      ),
                      /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(
                        antd_lib_select__WEBPACK_IMPORTED_MODULE_5___default.a,
                        {
                          getPopupContainer: (trigger) => trigger.parentNode,
                          autoFocus: true,
                          onChange: (val) => {
                            Object(
                              _common__WEBPACK_IMPORTED_MODULE_9__[
                                "onBlockChange"
                              ]
                            )(this, val);
                          },
                          showSearch: true,
                          disabled: !blockNum.length,
                          value: blockval,
                          placeholder:
                            "\u0631\u0642\u0645 \u0627\u0644\u0628\u0644\u0643",
                          optionFilterProp: "children",
                          filterOption: (input, option) => {
                            if (option.props.children) {
                              var _option$props$childre4;
                              return (
                                ((_option$props$childre4 =
                                  option.props.children) === null ||
                                _option$props$childre4 === void 0
                                  ? void 0
                                  : _option$props$childre4.indexOf(
                                      Object(
                                        _common_common_func__WEBPACK_IMPORTED_MODULE_8__[
                                          "convertToArabic"
                                        ]
                                      )(input)
                                    )) != -1
                              );
                            } else {
                              return false;
                            }
                          },
                        },
                        blockNum
                          //.slice(0, 100)
                          .map((e, i) =>
                            /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(
                              Option,
                              {
                                key: i,
                                value: e.attributes.BLOCK_SPATIAL_ID,
                              },
                              Object(
                                _common_common_func__WEBPACK_IMPORTED_MODULE_8__[
                                  "convertToArabic"
                                ]
                              )(e.attributes.BLOCK_NO)
                            )
                          )
                      ),
                      /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(
                        antd_lib_select__WEBPACK_IMPORTED_MODULE_5___default.a,
                        {
                          // onBlur={() => {
                          //   clearGraphicFromLayer(this.map, "SelectGraphicLayer");
                          // }}
                          getPopupContainer: (trigger) => trigger.parentNode,
                          autoFocus: true,
                          onFocus: () => {
                            //clearGraphicFromLayer(this.map, "SelectLandsGraphicLayer");
                            if (!this.state["parcelId"]) {
                              Object(
                                _common_common_func__WEBPACK_IMPORTED_MODULE_8__[
                                  "highlightFeature"
                                ]
                              )(
                                parcelNum.filter((e, i) => {
                                  if (parcelSearch) {
                                    if (this.state.selectedLands.length) {
                                      return !this.state.selectedLands.find(
                                        (tt) =>
                                          tt.attributes.PARCEL_SPATIAL_ID ==
                                          e.attributes.PARCEL_SPATIAL_ID
                                      );
                                    } else {
                                      return (
                                        e.attributes.PARCEL_PLAN_NO &&
                                        e.attributes.PARCEL_PLAN_NO.toLowerCase().indexOf(
                                          parcelSearch.toLowerCase()
                                        ) >= 0
                                      );
                                    }
                                  } else {
                                    if (selectedLands.length) {
                                      return (
                                        !selectedLands.find(
                                          (tt) =>
                                            tt.attributes.PARCEL_SPATIAL_ID ==
                                            e.attributes.PARCEL_SPATIAL_ID
                                        ) && e.attributes.PARCEL_PLAN_NO
                                      );
                                    } else {
                                      return e.attributes.PARCEL_PLAN_NO;
                                    }
                                  }
                                }),
                                // .slice(0, 100),
                                this.map,
                                {
                                  layerName: "SelectGraphicLayer",
                                  noclear: false,
                                  isZoom: false,
                                  isHiglightSymbol: true,
                                  highlighColor: [0, 255, 0, 0.5],
                                  attr: true,
                                }
                              );
                            }
                          },
                          onChange: (val) => {
                            Object(
                              _common__WEBPACK_IMPORTED_MODULE_9__[
                                "onLandParcelChange"
                              ]
                            )(this, val);
                          },
                          showSearch: true,
                          disabled: parcelNum && !parcelNum.length,
                          onSearch: (e) => {
                            this.setState({
                              parcelSearch: e,
                            });
                            Object(
                              _common__WEBPACK_IMPORTED_MODULE_9__["onSearch"]
                            )(this, e);
                          },
                          filterOption: (input, option) => {
                            if (option.props.children) {
                              var _option$props$childre5;
                              return (
                                ((_option$props$childre5 =
                                  option.props.children) === null ||
                                _option$props$childre5 === void 0
                                  ? void 0
                                  : _option$props$childre5.indexOf(
                                      Object(
                                        _common_common_func__WEBPACK_IMPORTED_MODULE_8__[
                                          "convertToArabic"
                                        ]
                                      )(input)
                                    )) != -1
                              );
                            } else {
                              return false;
                            }
                          },
                          value: parcelval,
                          placeholder:
                            "\u0631\u0642\u0645 \u0642\u0637\u0639\u0629 \u0627\u0644\u0627\u0631\u0636",
                        },
                        parcelNum &&
                          parcelNum
                            .filter((e, i) => {
                              if (parcelSearch) {
                                if (this.state.selectedLands.length) {
                                  return !this.state.selectedLands.find(
                                    (tt) =>
                                      tt.attributes.PARCEL_SPATIAL_ID ==
                                      e.attributes.PARCEL_SPATIAL_ID
                                  );
                                } else {
                                  return (
                                    e.attributes.PARCEL_PLAN_NO &&
                                    e.attributes.PARCEL_PLAN_NO.toLowerCase().indexOf(
                                      parcelSearch.toLowerCase()
                                    ) >= 0
                                  );
                                }
                              } else {
                                if (selectedLands.length) {
                                  return (
                                    !selectedLands.find(
                                      (tt) =>
                                        tt.attributes.PARCEL_SPATIAL_ID ==
                                        e.attributes.PARCEL_SPATIAL_ID
                                    ) && e.attributes.PARCEL_PLAN_NO
                                  );
                                } else {
                                  return e.attributes.PARCEL_PLAN_NO;
                                }
                              }
                            })
                            .slice(0, 100)
                            .map((e, i) => {
                              return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(
                                Option,
                                {
                                  onMouseEnter: this.LandHoverOn.bind(this, e),
                                  onMouseLeave: this.LandHoverOff.bind(this, e),
                                  key: e.attributes.PARCEL_SPATIAL_ID,
                                  value: e.i,
                                },
                                Object(
                                  _common_common_func__WEBPACK_IMPORTED_MODULE_8__[
                                    "localizeNumber"
                                  ]
                                )(e.attributes.PARCEL_PLAN_NO)
                              );
                            })
                      ),
                      /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(
                        antd_lib_button__WEBPACK_IMPORTED_MODULE_2___default.a,
                        {
                          className: "add-gis",
                          disabled: !this.state.parcelId || parcelBtnDisabled,
                          onClick: this.OnParcelSelect,
                        },
                        "\u0625\u0636\u0627\u0641\u0629 \u0627\u0644\u0623\u0631\u0636"
                      )
                    )) ||
                    (((_this$props30 = this.props) === null ||
                    _this$props30 === void 0
                      ? void 0
                      : _this$props30.isExportCad) &&
                      /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(
                        "div",
                        {
                          style: {
                            direction: "ltr",
                          },
                        },
                        /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(
                          antd_lib_button__WEBPACK_IMPORTED_MODULE_2___default.a,
                          {
                            className: "add-gis",
                            onClick: this.exportCad,
                          },
                          "\u0627\u0633\u062A\u062E\u0631\u0627\u062C \u0645\u0644\u0641 \u0643\u0627\u062F"
                        )
                      ))
                ),
                /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(
                  "div",
                  null,
                  /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(
                    react_sticky__WEBPACK_IMPORTED_MODULE_19__[
                      "StickyContainer"
                    ],
                    {
                      style: {
                        direction: "ltr",
                      },
                    },
                    /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(
                      react_sticky__WEBPACK_IMPORTED_MODULE_19__["Sticky"],
                      {
                        bottomOffset: 80,
                      },
                      ({ style }) =>
                        /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(
                          _MapBtnsComponent__WEBPACK_IMPORTED_MODULE_14__[
                            "default"
                          ],
                          _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default()(
                            {
                              style: style,
                            },
                            this.props
                          )
                        )
                    )
                  ),
                  /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(
                    "div",
                    null,
                    /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(
                      _MapComponent_MapComponent__WEBPACK_IMPORTED_MODULE_13__[
                        "default"
                      ],
                      _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default()(
                        {
                          mapload: this.mapLoaded.bind(this),
                        },
                        this.props
                      )
                    )
                  )
                )
              ),
              mapLoaded &&
                /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(
                  "div",
                  {
                    style: {
                      gridColumn: "1/3",
                    },
                  },
                  selectedLands &&
                    selectedLands.length > 0 &&
                    /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(
                      "div",
                      null,
                      /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(
                        "h1",
                        {
                          className: "titleSelectedParcel",
                        },
                        "\u0627\u0644\u0623\u0631\u0627\u0636\u064A \u0627\u0644\u0645\u062E\u062A\u0627\u0631\u0629"
                      ),
                      /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(
                        "table",
                        {
                          className: "table table-bordered",
                          style: {
                            marginTop: "1%",
                          },
                        },
                        /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(
                          "thead",
                          null,
                          /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(
                            "tr",
                            null,
                            this.parcel_fields_headers.map(
                              (field_header, k) => {
                                return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(
                                  "th",
                                  null,
                                  field_header
                                );
                              }
                            ),
                            /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(
                              "th",
                              null,
                              " \u062E\u064A\u0627\u0631\u0627\u062A"
                            )
                          )
                        ),
                        /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(
                          "tbody",
                          null,
                          selectedLands.map((e, i) => {
                            return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(
                              "tr",
                              {
                                key: i,
                              },
                              this.parcel_fields.map((field, k) => {
                                var _field$options;
                                return (
                                  ((!field.dependsOn ||
                                    (field.dependsOn &&
                                      e.attributes[field.dependsOn] ==
                                        field.value)) &&
                                    /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(
                                      "td",
                                      {
                                        key: k,
                                      },
                                      /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(
                                        "div",
                                        null,
                                        field.editable
                                          ? !this.state[
                                              field.name + "_isEdit_" + i
                                            ]
                                            ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(
                                                "span",
                                                null,
                                                /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(
                                                  "span",
                                                  null,
                                                  Object(
                                                    _common_common_func__WEBPACK_IMPORTED_MODULE_8__[
                                                      "localizeNumber"
                                                    ]
                                                  )(
                                                    e.attributes[field.name] ||
                                                      ""
                                                  )
                                                ),
                                                this.showEditBtn(
                                                  field.name,
                                                  e.attributes[field.name]
                                                ) &&
                                                  /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(
                                                    "span",
                                                    null,
                                                    /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(
                                                      "button",
                                                      {
                                                        className: "btn",
                                                        style: {
                                                          marginRight: e
                                                            .attributes[
                                                            field.name
                                                          ]
                                                            ? "20px"
                                                            : "0px",
                                                        },
                                                        onClick:
                                                          this.enableEdit.bind(
                                                            this,
                                                            field.name,
                                                            i
                                                          ),
                                                      },
                                                      /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(
                                                        "i",
                                                        {
                                                          className:
                                                            "fas fa-edit",
                                                        }
                                                      )
                                                    )
                                                  )
                                              )
                                            : /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(
                                                "span",
                                                {
                                                  style: {
                                                    display: "grid",
                                                    gridTemplateColumns:
                                                      "1fr auto",
                                                  },
                                                },
                                                field.type != "select" &&
                                                  /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(
                                                    "input",
                                                    {
                                                      key: i,
                                                      className: "form-control",
                                                      type: field.type,
                                                      step: "any",
                                                      value:
                                                        e.attributes[
                                                          field.name
                                                        ],
                                                      onChange:
                                                        this.myChangeHandler.bind(
                                                          this,
                                                          field.name,
                                                          i,
                                                          e
                                                        ),
                                                    }
                                                  ),
                                                field.type == "select" &&
                                                  /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(
                                                    antd_lib_select__WEBPACK_IMPORTED_MODULE_5___default.a,
                                                    {
                                                      value:
                                                        e.attributes[
                                                          field.name
                                                        ],
                                                      onChange:
                                                        this.selectOnchange.bind(
                                                          this,
                                                          field.name,
                                                          i,
                                                          e
                                                        ),
                                                      placeholder:
                                                        "\u0646\u0648\u0639 \u0627\u0644\u062A\u0642\u0633\u064A\u0645",
                                                      optionFilterProp:
                                                        "children",
                                                      filterOption: (
                                                        input,
                                                        option
                                                      ) => {
                                                        var _convertToEnglish,
                                                          _convertToEnglish$toL;
                                                        return (
                                                          ((_convertToEnglish =
                                                            Object(
                                                              _common_common_func__WEBPACK_IMPORTED_MODULE_8__[
                                                                "convertToEnglish"
                                                              ]
                                                            )(
                                                              option.props
                                                                .children
                                                            )) === null ||
                                                          _convertToEnglish ===
                                                            void 0
                                                            ? void 0
                                                            : (_convertToEnglish$toL =
                                                                _convertToEnglish.toLowerCase()) ===
                                                                null ||
                                                              _convertToEnglish$toL ===
                                                                void 0
                                                            ? void 0
                                                            : _convertToEnglish$toL.indexOf(
                                                                input.toLowerCase()
                                                              )) >= 0
                                                        );
                                                      },
                                                    },
                                                    field === null ||
                                                      field === void 0
                                                      ? void 0
                                                      : (_field$options =
                                                          field.options) ===
                                                          null ||
                                                        _field$options ===
                                                          void 0
                                                      ? void 0
                                                      : _field$options.map(
                                                          (e, i) =>
                                                            /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(
                                                              Option,
                                                              {
                                                                key: i,
                                                                value: e.name,
                                                              },
                                                              Object(
                                                                _common_common_func__WEBPACK_IMPORTED_MODULE_8__[
                                                                  "convertToArabic"
                                                                ]
                                                              )(e.name)
                                                            )
                                                        )
                                                  ),
                                                /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(
                                                  "button",
                                                  {
                                                    className: "btn",
                                                    style: {
                                                      marginRight: "20px",
                                                    },
                                                    onClick: this.saveEdit.bind(
                                                      this,
                                                      e.attributes
                                                        .PARCEL_SPATIAL_ID,
                                                      field.name,
                                                      i
                                                    ),
                                                  },
                                                  /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(
                                                    "i",
                                                    {
                                                      className:
                                                        "fa fa-floppy-o",
                                                    }
                                                  )
                                                )
                                              )
                                          : /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(
                                              "span",
                                              null,
                                              /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(
                                                "span",
                                                null,
                                                Object(
                                                  _common_common_func__WEBPACK_IMPORTED_MODULE_8__[
                                                    "localizeNumber"
                                                  ]
                                                )(
                                                  e.attributes[field.name] || ""
                                                )
                                              )
                                            )
                                      )
                                    )) ||
                                  /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(
                                    "td",
                                    null
                                  )
                                );
                              }),
                              !this.props.isView &&
                                i === selectedLands.length - 1
                                ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(
                                    "td",
                                    null,
                                    boundariesBtnIsVisible &&
                                      /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(
                                        "button",
                                        {
                                          className: "btn follow",
                                          style: {
                                            margin: "0px 5px",
                                          },
                                          onClick: () => {
                                            this.openPopup(this);
                                          },
                                        },
                                        "\u062D\u062F\u0648\u062F \u0648 \u0623\u0628\u0639\u0627\u062F \u0627\u0644\u0623\u0631\u0636"
                                      ),
                                    /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(
                                      "button",
                                      {
                                        className: "btn btn-danger",
                                        onClick: this.remove.bind(this, e),
                                      },
                                      "\u062D\u0630\u0641"
                                    )
                                  )
                                : ""
                            );
                          })
                        )
                      )
                    )
                )
            );
          }
        }
        /* harmony default export */ __webpack_exports__["default"] = Object(
          react_redux__WEBPACK_IMPORTED_MODULE_17__["connect"]
        )(
          _mapping__WEBPACK_IMPORTED_MODULE_15__["mapStateToProps"],
          appMapDispatchToProps
        )(
          Object(react_i18next__WEBPACK_IMPORTED_MODULE_11__["translate"])(
            "labels"
          )(farzIdentifyComponnent)
        );

        /***/
      },
  },
]);
//# sourceMappingURL=104.min.js.map
