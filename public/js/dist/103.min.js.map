{"version":3,"file":"103.min.js","sources":["webpack:///./src/app/components/inputs/fields/identify/Component/IdentifyServiceRange/index.js"],"sourcesContent":["import React, {Component} from 'react'\r\nimport {esriRequest} from '../common/esri_request'\r\nimport {\r\n    queryTask,\r\n    getInfo,\r\n    highlightFeature,\r\n    clearGraphicFromLayer,\r\n    getFeatureDomainName,\r\n    intersectQueryTask,\r\n    project,\r\n    addParcelNo\r\n} from '../common/common_func';\r\nimport {workFlowUrl} from 'configFiles/config';\r\n\r\nimport { message } from 'antd';\r\nimport { LoadModules } from \"../common/esri_loader\";\r\nimport {mapUrl} from \"../mapviewer/config/map\"\r\nimport {Select, Button,Form} from 'antd';\r\nimport 'antd/dist/reset.css';\r\nimport MapComponent from \"../MapComponent/MapComponent\"\r\nimport {mapDispatchToProps, mapStateToProps} from \"../mapping\"\r\nimport {connect} from \"react-redux\"\r\nimport axios from \"axios\";\r\nimport {get} from 'lodash'\r\nconst {Option} = Select;\r\n\r\nclass IdentifyServiceRange extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n   \r\n    this.state = {\r\n      mapLoaded: false, \r\n      serviceVal:null ,\r\n      serviceSubTypeVal:null,\r\n      servicesSubTypes:[],\r\n      bufferDistance:null,\r\n      servicesTypes:[],\r\n      resultServices:[],\r\n      lands:[]\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    getInfo().then((res) => {\r\n      // \r\n      this.LayerID = res;\r\n      \r\n    })\r\n  }\r\n\r\n  \r\n  mapLoaded = (map) => {\r\n\r\n    this.map = map;\r\n\r\n    this.props.setLoading(true);\r\n    axios.get(`${workFlowUrl}/CadLayers/GetAll`).then((response) => {\r\n      \r\n      this.props.setLoading(false);\r\n      response.data.results = response.data.results.filter((res)=>{return res.layer_description.indexOf('خدمات') > -1});\r\n      this.setState({servicesTypes:response.data.results})\r\n    \r\n    });\r\n\r\n    var lands = get(this.props.mainObject, 'LandWithCoordinate.landData.lands' )\r\n\r\n    if (lands)\r\n    {\r\n\r\n      highlightFeature(lands.parcels, this.map, {\r\n        layerName: \"SelectLandsGraphicLayer\",\r\n        isZoom: true,\r\n        zoomFactor:10,\r\n        isHighlighPolygonBorder:true,\r\n        highlighColor: [0, 0, 0, 0.7]\r\n      }) \r\n\r\n\r\n        setTimeout(() => { \r\n\r\n          lands.parcels.forEach((land)=>{\r\n            addParcelNo( land.geometry.getExtent().getCenter() , this.map ,land.attributes.PARCEL_PLAN_NO+'', \"ParcelPlanNoGraphicLayer\",18,[0,0,0])\r\n          })\r\n        }, 1000);\r\n        \r\n\r\n        \r\n    }\r\n    this.setState({mapLoaded: true })\r\n\r\n    this.selectedParcel = lands.parcels[0];\r\n    \r\n  }\r\n\r\n  zoomToParcel=(f)=>{\r\n\r\n    highlightFeature(this.selectedParcel, this.map, {\r\n      layerName: \"SelectLandsGraphicLayer\",\r\n      isZoom: true,\r\n      zoomFactor:10,\r\n      isHighlighPolygonBorder:true,\r\n      highlighColor: [0, 0, 0, 0.7]\r\n    }) \r\n\r\n  }\r\n\r\n  clearBuffer=(f)=>{\r\n\r\n    this.map.getLayer(\"BufferGraphicLayer\").clear();\r\n  }\r\n\r\n  onServieTypeChange= (f) => {\r\n    this.setState({serviceVal:f , \r\n      serviceSubTypeVal:null,\r\n      servicesSubTypes:this.state.servicesTypes.find(x=>{return x.layer_code == f}).cad_sublayers||[]})\r\n  }\r\n  onServieSubTypeChange= (f) => {\r\n    this.setState({serviceSubTypeVal:f})\r\n  }\r\n\r\n  getServicesOnBuffer()\r\n  {\r\n\r\n    LoadModules([\"esri/geometry/Circle\"]).then(([Circle]) => {\r\n     \r\n        var circleGeometry = new Circle({\r\n                            center: this.selectedParcel.geometry.getExtent().getCenter(),\r\n                            radius: +this.state.bufferDistance,\r\n                            radiusUnit: esri.Units.METERS\r\n                        });\r\n\r\n        highlightFeature(circleGeometry, this.map, {\r\n          layerName: \"BufferGraphicLayer\",\r\n          isZoom: true,\r\n          zoomFactor:10,\r\n          isHiglightSymbol: true,\r\n          highlighColor: [255, 0, 0, .4]\r\n        })\r\n\r\n        var where =\"\";\r\n        if( this.state.serviceSubTypeVal )\r\n        {\r\n          where = \"SRVC_SUBTYPE =\" + this.state.serviceSubTypeVal ;\r\n        } \r\n        else{\r\n          console.log(this.state.servicesSubTypes)\r\n          if(this.state.servicesSubTypes)\r\n          {  \r\n            where = \"SRVC_TYPE='\" + (this.state.servicesSubTypes[0].sublayer_code+'').substring(0,3)+\"'\";\r\n          }\r\n          else{\r\n            where = \"SRVC_TYPE=\" + this.state.serviceVal;\r\n          }\r\n        }\r\n\r\n        intersectQueryTask({\r\n          url: mapUrl + \"/\" + (this.LayerID.Serivces_Data || this.LayerID.Service_Data),\r\n          geometry: circleGeometry,\r\n          where: where,\r\n          returnGeometry:true,\r\n          outFields: [\"SRVC_NAME\"],\r\n          callbackResult: res => {\r\n\r\n           \r\n            if(res.features && res.features.length == 0)\r\n            {\r\n               message.warning(\"لا توجد نتائج لنطاق تأثير الخدمة المختارة\");\r\n            }\r\n            else{\r\n              highlightFeature(res.features, this.map, {\r\n                layerName: \"ZoomGraphicLayer\",\r\n                isZoom: true,\r\n                zoomFactor:10\r\n              });\r\n            }\r\n\r\n\r\n            this.setState({resultServices:res.features})\r\n          }\r\n        });\r\n\r\n    });\r\n  }\r\n\r\n  updateBufferDistance= (evt)=>{\r\n    this.setState({\r\n      bufferDistance: evt.target.value\r\n    });\r\n  }\r\n\r\n  highlightService(feature)\r\n  {\r\n    highlightFeature(feature, this.map, {\r\n      layerName: \"highlightGraphicLayer\",\r\n      isHiglightSymbol:true,\r\n      isZoom:true,\r\n      zoomFactor:10,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      mapLoaded,\r\n      servicesTypes,\r\n      servicesSubTypes,\r\n      serviceSubTypeVal,\r\n      serviceVal,\r\n      resultServices\r\n    } = this.state;\r\n    \r\n    return (\r\n      <div>\r\n        <div>\r\n          <MapComponent mapload={this.mapLoaded.bind(this)}></MapComponent>\r\n        </div>\r\n\r\n        <h1 className=\"titleSelectedParcel\">نطاق التأثير</h1>\r\n        <div>\r\n          <label>نوع الخدمة</label>\r\n          <Select\r\n            getPopupContainer={trigger => trigger.parentNode}\r\n            onChange={this.onServieTypeChange}\r\n            showSearch\r\n            autoFocus\r\n            disabled={!servicesTypes.length}\r\n            optionFilterProp=\"children\"\r\n            filterOption={(input, option) => {\r\n              if (option.props.children) {\r\n                return (\r\n                  option.props.children\r\n                    ?.toLowerCase()\r\n                    ?.indexOf(input.toLowerCase()) >= 0\r\n                );\r\n              } else {\r\n                return false;\r\n              }\r\n            }}\r\n            value={serviceVal}\r\n            placeholder=\"نوع الخدمة\"\r\n            notFoundContent=\"not found\"\r\n          >\r\n            {servicesTypes.map((d, i) => {\r\n              return (\r\n                <Option key={i} value={d.layer_code}>\r\n                  {d.layer_description}\r\n                </Option>\r\n              );\r\n            })}\r\n          </Select>\r\n\r\n          <label>مستوى الخدمة</label>\r\n          <Select\r\n            getPopupContainer={trigger => trigger.parentNode}\r\n            onChange={this.onServieSubTypeChange}\r\n            showSearch\r\n            autoFocus\r\n            disabled={!servicesSubTypes.length}\r\n            optionFilterProp=\"children\"\r\n            filterOption={(input, option) => {\r\n              if (option.props.children) {\r\n                return (\r\n                  option.props.children\r\n                    ?.toLowerCase()\r\n                    ?.indexOf(input.toLowerCase()) >= 0\r\n                );\r\n              } else {\r\n                return false;\r\n              }\r\n            }}\r\n            value={serviceSubTypeVal}\r\n            placeholder=\"مستوى الخدمة\"\r\n            notFoundContent=\"not found\"\r\n          >\r\n            {servicesSubTypes.map((d, i) => {\r\n              return (\r\n                <Option key={i} value={d.sublayer_code}>\r\n                  {d.sublayer_description}\r\n                </Option>\r\n              );\r\n            })}\r\n          </Select>\r\n\r\n          <label>نطاق التخديم بالمتر</label>\r\n          <input\r\n            className=\"ant-input\"\r\n            type=\"number\"\r\n            placeholder=\"نطاق التخديم بالمتر\"\r\n            required={true}\r\n            value={this.state.bufferDistance}\r\n            onChange={this.updateBufferDistance}\r\n          />\r\n\r\n          <button\r\n            type=\"button\"\r\n            disabled={!this.state.bufferDistance}\r\n            className=\"btn btn-primary\"\r\n            style={{\r\n              width: \"100px\",\r\n              marginTop: \"20px\",\r\n              backgroundColor: \"#337ab7\"\r\n            }}\r\n            onClick={this.getServicesOnBuffer.bind(this)}\r\n          >\r\n            {\" \"}\r\n            بحث{\" \"}\r\n          </button>\r\n\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary\"\r\n            style={{\r\n              width: \"auto\",\r\n              marginTop: \"20px\",\r\n              marginRight: \"35px\",\r\n              backgroundColor: \"#337ab7\"\r\n            }}\r\n            onClick={this.zoomToParcel.bind(this)}\r\n          >\r\n            {\" \"}\r\n            تقريب إلي الأرض{\" \"}\r\n          </button>\r\n\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary\"\r\n            style={{\r\n              width: \"auto\",\r\n              marginTop: \"20px\",\r\n              marginRight: \"35px\",\r\n              backgroundColor: \"#337ab7\"\r\n            }}\r\n            onClick={this.clearBuffer.bind(this)}\r\n          >\r\n            {\" \"}\r\n            مسح نطاق التأثير{\" \"}\r\n          </button>\r\n\r\n          {resultServices && resultServices.length > 0 && (\r\n            <table className=\"table table-bordered\" style={{ marginTop: \"1%\" }}>\r\n              <thead>\r\n                <th>اسم الخدمة</th>\r\n                <th></th>\r\n              </thead>\r\n              <tbody>\r\n                {resultServices.map(s => {\r\n                  return (\r\n                    <tr>\r\n                      <td>{s.attributes.SRVC_NAME}</td>\r\n                      <td>\r\n                        <button\r\n                          className=\"btn btn-warning\"\r\n                          onClick={this.highlightService.bind(this, s)}\r\n                        >\r\n                          تقريب\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(IdentifyServiceRange)\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAUA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAyBA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAEA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAAA;AAAA;AAEA;AAEA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAIA;AACA;AAAA;AAGA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAmEA;AACA;AACA;AACA;AA9JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAwEA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAQA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAAA;AAGA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AAAA;AAAA;AAIA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AAAA;AAAA;AAIA;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAOA;AAKA;AACA;AAAA;AAOA;AAOA;AACA;AACA;;;;A","sourceRoot":""}