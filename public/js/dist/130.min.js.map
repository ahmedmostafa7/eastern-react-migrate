{"version":3,"file":"130.min.js","sources":["webpack:///./src/app/components/wizard/components/stepContent/sections/sectionTypes/wizardSummery/components/editUpdateCreate.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport { editAndDeleteMapLayers, addFeaturesMapLayers } from '../../../../../../../inputs/fields/identify/Component/mapviewer/config';\r\n\r\nexport default class editUpdateCreate extends Component {\r\n\r\n  state = {\r\n    allFeatures: {}\r\n  }\r\n\r\n  formatNumber(num) {\r\n    return (+num).toFixed(2).replace(/[.,]00$/, \"\");\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    \r\n    this.setState({\r\n      allFeatures: this.props.mainObject.editUpdateCreate.editableFeatures,\r\n      originalFeatures: this.props.mainObject.editUpdateCreate.originalFeatures\r\n    })\r\n  }\r\n\r\n  isHasDifference = (index, layer) => {\r\n\r\n    let isDifference = false;\r\n    editAndDeleteMapLayers[layer]?.outFields?.filter((x) => !x.notInclude)?.forEach((field) => {\r\n      if (this.state.allFeatures[layer].features[index].attributes[field.name] != this.state.originalFeatures[layer].features[index].attributes[field.name]) {\r\n        isDifference = true;\r\n      }\r\n    });\r\n\r\n    return isDifference;\r\n  }\r\n\r\n  compareGeomtryDifference = (index, layer) => {\r\n\r\n    try {\r\n      return !window.geometryEngine.equals(\r\n        this.state.allFeatures[layer].features[index].geometry,\r\n        this.state.originalFeatures[layer].features[index].geometry\r\n      );\r\n    } catch (error) {\r\n\r\n      let feature = this.state.allFeatures[layer].features[index].geometry;\r\n      let originalFeature = this.state.originalFeatures[layer].features[index].geometry;\r\n      let tempFeatureGeometry = null;\r\n      let tempOriginalGeometry = null;\r\n\r\n      delete feature.cache;\r\n      delete originalFeature.cache;\r\n      delete feature.spatialReference._geVersion;\r\n      delete originalFeature.spatialReference._geVersion;\r\n\r\n      if (feature.type == \"polygon\") {\r\n        tempFeatureGeometry = new esri.geometry.Polygon(feature);\r\n        tempOriginalGeometry = new esri.geometry.Polygon(originalFeature);\r\n      }\r\n      else if (feature.type == \"point\") {\r\n        tempFeatureGeometry = new esri.geometry.Point(feature);\r\n        tempOriginalGeometry = new esri.geometry.Point(originalFeature);\r\n      }\r\n      else {\r\n        tempFeatureGeometry = new esri.geometry.Polyline(feature);\r\n        tempOriginalGeometry = new esri.geometry.Polyline(originalFeature);\r\n      }\r\n\r\n      return !window.geometryEngine.equals(tempFeatureGeometry, tempOriginalGeometry);\r\n\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    const { allFeatures, originalFeatures } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        {Object.keys(allFeatures).map((layer) => {\r\n          return (allFeatures[layer].features?.length ?\r\n            <div>\r\n              <div style={{ background: '#57779d', textAlign: \"center\", padding: '5px' }}>\r\n                <label style={{\r\n                  color: \"white\", float: 'none',\r\n                  marginRight: '20px',\r\n                  fontSize: '23px !important'\r\n                }}>{editAndDeleteMapLayers[layer].name}</label>\r\n              </div>\r\n              {allFeatures[layer].features.map((feature, index) => {\r\n                return (\r\n                  feature.isDelete ?\r\n                    <div className='editSummaryTable'>\r\n                      <label>موقع {index + 1} : </label>\r\n                      <table\r\n                        className=\"table table-bordered centeredTable\" style={{ width: '100%' }}>\r\n                        <thead>\r\n                          <tr>\r\n\r\n                            {editAndDeleteMapLayers[layer]?.outFields?.filter((x) => !x.notInclude)?.map((field) => {\r\n                              return (<th>{field.arName}</th>)\r\n                            })}\r\n                          </tr>\r\n\r\n                        </thead>\r\n                        <tbody>\r\n                          <tr style={{ background: feature.isDelete ? '#ff000045' : '' }}>\r\n\r\n                            {editAndDeleteMapLayers[layer]?.outFields?.filter((x) => !x.notInclude)?.map((field) => {\r\n                              return (<td>{(isNaN(feature.attributes[field.name]) || !feature.attributes[field.name]) ? (feature.attributes[field.name] || 'غير متوفر') : this.formatNumber(feature.attributes[field.name])}</td>)\r\n                            })}\r\n\r\n                          </tr>\r\n                        </tbody>\r\n                      </table>\r\n                    </div> :\r\n                    (this.isHasDifference(index, layer) || this.compareGeomtryDifference(index, layer)) ?\r\n                      <div className='editSummaryTable'>\r\n                        <div style={{ textAlign: 'center', background: '#c9d3df' }}>\r\n                          <label style={{ fontWeight: 'bold !important' }} >بيانات الموقع {index + 1}</label>\r\n                        </div>\r\n                        {<table\r\n                          className=\"table table-bordered centeredTable\" style={{ width: '100%' }}>\r\n                          <thead>\r\n                            <tr>\r\n                              {editAndDeleteMapLayers[layer]?.outFields.filter((x) => x.isSummary)?.map((field) => {\r\n                                return (<th>{field.arName}</th>)\r\n                              })}\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n\r\n                            <tr>\r\n                              {editAndDeleteMapLayers[layer]?.outFields?.filter((x) => x.isSummary)?.map((field) => {\r\n                                return (\r\n                                  <td>\r\n                                    {originalFeatures[layer].features[index].attributes[field.name]}\r\n                                  </td>\r\n                                )\r\n                              })}\r\n                            </tr>\r\n                          </tbody>\r\n                        </table>}\r\n                        <label>بيانات التعديل</label>\r\n                        {this.isHasDifference(index, layer) ? <table\r\n                          className=\"table table-bordered centeredTable\" style={{ width: '100%' }}>\r\n                          <thead>\r\n                            <tr>\r\n                              <th>البيانات</th>\r\n                              <th>قبل</th>\r\n                              <th>بعد</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {editAndDeleteMapLayers[layer]?.outFields?.filter((x) => !x.notInclude)?.map((field) => {\r\n                              return (\r\n                                allFeatures[layer].features[index].attributes[field.name] != originalFeatures[layer].features[index].attributes[field.name] ?\r\n                                  <tr>\r\n                                    <td>\r\n                                      {field.arName}\r\n                                    </td>\r\n                                    <td>\r\n                                      {originalFeatures[layer].features[index].attributes[field.name]}\r\n                                    </td>\r\n                                    <td>\r\n                                      {feature.attributes[field.name]}\r\n                                    </td>\r\n                                  </tr> : <></>)\r\n                            })}\r\n                          </tbody>\r\n                        </table> : <></>}\r\n                        {this.compareGeomtryDifference(index, layer) ?\r\n                          <div>\r\n                            تم التعديل على أبعاد الموقع\r\n                          </div> : <></>}\r\n                      </div> : <></>)\r\n              })\r\n              }\r\n\r\n            </div> : <></>)\r\n        })}\r\n      </div>\r\n    )\r\n\r\n  }\r\n}\r\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAeA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAIA;AACA;AAIA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AAAA;AA7DA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AAoDA;AAEA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAEA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAKA;AAAA;AAAA;AAAA;AAGA;AACA;AAOA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAOA;AAKA;AAMA;AAAA;AAAA;AAAA;AAAA;AAUA;AAaA;AAQA;AAIA;AAIA;AACA;;;;A","sourceRoot":""}