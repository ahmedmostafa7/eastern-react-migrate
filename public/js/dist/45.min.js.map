{"version":3,"file":"45.min.js","sources":["webpack:///./src/app/components/inputs/fields/fileUploader/ImagePreview.js","webpack:///./src/app/components/inputs/fields/fileUploader/mapping.js","webpack:///./src/app/components/inputs/fields/fileUploader/simple.js","webpack:///./src/app/components/inputs/fields/list/table/row/types/index.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Modal } from 'antd';\r\nimport { get, last } from 'lodash';\r\n// import {host} from 'configFiles/config';\r\nimport Img from \"app/helpers/components/image\";\r\nimport ReactImageZoom from \"react-image-zooom\";\r\nconst isObject = (val) => {\r\n    return val instanceof Object;\r\n}\r\nclass ImagePreview extends Component {\r\n  render() {\r\n    const { image, onCancel } = this.props;\r\n    console.log(\"ff\", image);\r\n    const url = get(image, \"url\", \"\");\r\n    const type = last(\r\n      (!isObject(url) && url.split(\".\")) || url.data.split(\".\")\r\n    ).toLowerCase();\r\n    return (\r\n      <div className=\"eee\">\r\n        {\r\n          <Modal visible={true} footer={null} onCancel={onCancel}>\r\n            {((type.includes(\"pdf\") ||\r\n              type.includes(\"PDF\") ||\r\n              type.includes(\"dwg\") ||\r\n              type.includes(\"docx\")) && <Img type={type} file={url} />) || (\r\n              <ReactImageZoom src={filesHost + url} />\r\n            )}\r\n          </Modal>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImagePreview;","import { get } from \"lodash\";\r\nexport const mapStateToProps = ({\r\n  mapReducer,\r\n  wizard: {\r\n    steps,\r\n    mainObject,\r\n    currentStep,\r\n    treeNode,\r\n    currentModule,\r\n    comments,\r\n    wizardSettings,\r\n  },\r\n}) => {\r\n  console.log(mainObject);\r\n  // return ({\r\n  //     map: mapReducer.map,\r\n  //     mainObject,\r\n\r\n  // })\r\n  return {\r\n    mainObject,\r\n    currentStep,\r\n    steps,\r\n    currentModule,\r\n    wizardSettings,\r\n  };\r\n  // console.log(mainObject)\r\n};\r\n\r\nexport const mapDispatchToProps = (dispatch, { moduleName }) => {\r\n  console.log(moduleName);\r\n  return {};\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Icon, Modal } from \"antd\";\r\nimport {withTranslation} from \"react-i18next\";\r\nimport {\r\n  concat,\r\n  reject,\r\n  map,\r\n  last,\r\n  isFunction,\r\n  isEqual,\r\n  omit,\r\n  isArray,\r\n} from \"lodash\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCloudUploadAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { host } from \"config\";\r\nimport ImagePreview from \"./ImagePreview\";\r\nimport axios from \"axios\";\r\nimport { input } from \"../list/table/row/types\";\r\nimport Img from \"app/helpers/components/image\";\r\nimport { mapStateToProps, mapDispatchToProps } from \"./mapping\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\nconst { confirm } = Modal;\r\nconst config = {\r\n  headers: {\r\n    \"content-type\": \"multipart/form-data\",\r\n  },\r\n};\r\nconst isObject = (val) => {\r\n  return val instanceof Object;\r\n};\r\nclass fileUploaderComponent extends Component {\r\n  state = {\r\n    error: \"\",\r\n    disabled: false,\r\n    deleteVisible: false,\r\n    maxFileSize: 10 * 1024,\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props) {\r\n      if (this.props.init) this.props.init(this.props);\r\n    }\r\n  }\r\n  uploadButton = (\r\n    <div>\r\n      {/* <div className=\"ant-upload-text\">\r\n        {this.props.textTruncated\r\n          ? this.props.label.substring(\r\n              0,\r\n              this.props.truncatedCharacterIndex || 10\r\n            ) + \"...\"\r\n          : this.props.label}\r\n      </div> */}\r\n\r\n      <FontAwesomeIcon\r\n        icon={faCloudUploadAlt}\r\n        className=\"fa-2x\"\r\n        style={{ color: \"#00726f\" }}\r\n      />\r\n    </div>\r\n  );\r\n  isObject = (val) => {\r\n    return val instanceof Object;\r\n  };\r\n  renderThumb = (file, key) => {\r\n    const { disabled, values } = this.props;\r\n    console.log(\"file\", file);\r\n    file =\r\n      (!this.isObject(file) && file) ||\r\n      (isArray(file) && (file?.[0]?.data || file?.[0])) ||\r\n      (!isArray(file) && (file?.data || file));\r\n    let splitted = file;\r\n    if (splitted && splitted.toLowerCase().includes(\"gisapi\")) {\r\n      file = `${splitted\r\n        .toLowerCase()\r\n        .split(\"gisapi\")[1]\r\n        .replace(/\\\\/g, \"/\")\r\n        .replace(\"//\", \"/\")}`;\r\n    }\r\n\r\n    const type = file && last(file.split(\".\")).toLowerCase();\r\n    return (\r\n      <div style={{ display: \"grid\" }}>\r\n        <Img type={type} file={file} key={key} />\r\n        <div className=\"overlay-img\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn_up_icon\"\r\n            onClick={this.handlePreview.bind(this, file, key, type)}\r\n          >\r\n            <i className=\"fa fa-eye\" aria-hidden=\"true\"></i>\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn_up_icon\"\r\n            disabled={\r\n              isFunction(disabled) ? disabled(values, this.props) : disabled\r\n            }\r\n            onClick={this.onRemove.bind(this, file, key)}\r\n          >\r\n            <i className=\"fas fa-trash\" aria-hidden=\"true\"></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  handlePreview(file, key, type) {\r\n    if (\r\n      [\"dwg\", \"pdf\", \"doc\", \"docx\", \"xlsx\", \"kmz\", \"shp\", \"xls\"].includes(type)\r\n    ) {\r\n      return window.open(\r\n        window.filesHost + `/${(isObject(file) && file.data) || file}`\r\n      );\r\n    }\r\n    this.setState({\r\n      ...this.state,\r\n      previewImage: { url: file },\r\n      previewVisible: true,\r\n    });\r\n    // } else {\r\n    //   window.open(`${host}/${get(file, \"url\")}`);\r\n    // }\r\n  }\r\n\r\n  handleCancel() {\r\n    this.setState({ ...this.state, previewVisible: false });\r\n  }\r\n\r\n  uploadFile = (files, preRequestResults = null, event) => {\r\n    const {\r\n      t,\r\n      input,\r\n      multiple = true,\r\n      uploadUrl,\r\n      postRequest,\r\n      preRequest = (props) => {\r\n        return new Promise((resolve, reject) => {\r\n          resolve(true);\r\n        });\r\n      },\r\n    } = this.props;\r\n    const formData = new window.FormData();\r\n    for (let i = 0; i < this.files.length; i++) {\r\n      formData.append(\"file\" + i, this.files[i]);\r\n    }\r\n    return axios.post(uploadUrl, formData, config).then(\r\n      ({ data }) => {\r\n        event.target.value = \"\";\r\n        input.onChange(\r\n          multiple\r\n            ? concat(\r\n                input.value,\r\n                data.map((d) => d.data)\r\n              ).filter((d) => d)\r\n            : data[0].data\r\n        );\r\n        if (postRequest) {\r\n          postRequest(\r\n            multiple\r\n              ? concat(\r\n                  input.value,\r\n                  data.map((d) => d.data)\r\n                ).filter((d) => d)\r\n              : data[0].data,\r\n            this.props,\r\n            preRequestResults\r\n          );\r\n        }\r\n      },\r\n      (error) => {\r\n        // \"global.ERRORINWRITEFILE\"\r\n        event.target.value = \"\";\r\n        window.notifySystem(\"error\", t(\"messages:global.ERRORINWRITEFILE\"));\r\n      }\r\n    );\r\n  };\r\n\r\n  onChangeFile(event) {\r\n    debugger;\r\n    const {\r\n      preRequest = (props) => {\r\n        return new Promise((resolve, reject) => {\r\n          resolve(true);\r\n        });\r\n      },\r\n    } = this.props;\r\n    this.files = event.target.files;\r\n\r\n    const { t, fileType } = this.props;\r\n\r\n    let isNotValidExtension =\r\n      (fileType &&\r\n        _.values(this.files).filter((file) => {\r\n          if (file.type) {\r\n            var type =\r\n              file.type.indexOf(\"/\") != -1\r\n                ? file.type.toLowerCase().split(\"/\")[1]\r\n                : file.type.toLowerCase().replace(\".\", \"\");\r\n            if (\r\n              fileType.toLowerCase().indexOf(\"image/*\") != -1 &&\r\n              [\"jpg\", \"jpeg\", \"gif\", \"bmp\", \"png\"].indexOf(type) != -1\r\n            ) {\r\n              return false;\r\n            } else {\r\n              if (\r\n                file?.name?.indexOf(\"xlsx\") != -1 &&\r\n                fileType.indexOf(\"xlsx\") != -1\r\n              ) {\r\n                return false;\r\n              }\r\n              if (\r\n                file?.name?.indexOf(\"xls\") != -1 &&\r\n                fileType.indexOf(\"xls\") != -1\r\n              ) {\r\n                return false;\r\n              }\r\n              if (\r\n                file?.name?.indexOf(\"docx\") != -1 &&\r\n                fileType.indexOf(\"docx\") != -1\r\n              ) {\r\n                return false;\r\n              }\r\n              if (\r\n                file?.name?.indexOf(\"doc\") != -1 &&\r\n                fileType.indexOf(\"doc\") != -1\r\n              ) {\r\n                return false;\r\n              } else if (\r\n                file?.name?.indexOf(\"zip\") != -1 &&\r\n                fileType.indexOf(\"zip\") != -1\r\n              ) {\r\n                return false;\r\n              } else if (\r\n                file?.name?.indexOf(\"shp\") != -1 &&\r\n                fileType.indexOf(\"shp\") != -1\r\n              ) {\r\n                return false;\r\n              } else {\r\n                return !(fileType.toLowerCase().indexOf(type) != -1);\r\n              }\r\n            }\r\n          } else {\r\n            return !(\r\n              fileType.toLowerCase().indexOf(\"dwg\") != -1 ||\r\n              fileType.toLowerCase().indexOf(\"xlsx\") != -1 ||\r\n              fileType.toLowerCase().indexOf(\"xls\") != -1\r\n            );\r\n          }\r\n        }).length > 0) ||\r\n      false;\r\n\r\n    if (isNotValidExtension) {\r\n      window.notifySystem(\"error\", t(\"messages:WRONG_EXTENSION\"));\r\n      delete this.files;\r\n      return false;\r\n    }\r\n\r\n    var sizeByKiloByte = 2 * 1024 * +this.state.maxFileSize;\r\n    let isFileNotValid =\r\n      _.values(this.files).filter((file) => {\r\n        return file.size >= sizeByKiloByte;\r\n      }).length > 0;\r\n\r\n    if (isFileNotValid) {\r\n      window.notifySystem(\"error\", t(\"messages:ERRORFILESIZE\"));\r\n      delete this.files;\r\n      return false;\r\n    }\r\n\r\n    let exception = 0;\r\n    try {\r\n      preRequest(this.props).then(\r\n        (response) => {\r\n          exception++;\r\n          this.uploadFile(this.files, response, event);\r\n          delete this.files;\r\n          return true;\r\n        },\r\n        (response) => {\r\n          return false;\r\n        }\r\n      );\r\n    } catch (e) {\r\n      if (exception == 0) {\r\n        this.uploadFile(this.files, null, event);\r\n        delete this.files;\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n\r\n  onRemove = (removItem) => {\r\n    const {\r\n      input,\r\n      multiple = true,\r\n      t,\r\n      postRequest,\r\n      values,\r\n      change,\r\n    } = this.props;\r\n\r\n    var mythis = this;\r\n    confirm({\r\n      content: t(\"Are you sure you want to delete this item?\"),\r\n      title: t(\"labels:Delete\"),\r\n      onOk: () => {\r\n        let newVals = multiple\r\n          ? input.value\r\n              ?.map((v, index) => {\r\n                return (\r\n                  (v.data && v) || {\r\n                    data: v,\r\n                    PrevFileName: v,\r\n                    $id: index.toString(),\r\n                    ignorResize: false,\r\n                  }\r\n                );\r\n              })\r\n              ?.filter((v) => v.data && v.data.indexOf(removItem) == -1)\r\n          : \"\";\r\n        input.onChange(newVals);\r\n        mythis.setState({});\r\n        if (postRequest) {\r\n          postRequest(\"\", this.props);\r\n        }\r\n        return false;\r\n      },\r\n      onCancel: () => {\r\n        return false;\r\n      },\r\n      okText: t(\"labels:Yes\"),\r\n      cancelText: t(\"labels:No\"),\r\n    });\r\n\r\n    return false;\r\n  };\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    return (\r\n      !isEqual(nextProps.data, this.props.data) ||\r\n      !isEqual(nextProps.input.value, this.props.input.value) ||\r\n      !isEqual(nextProps.lang, this.props.lang) ||\r\n      !isEqual(nextProps.forceUpdate, this.props.forceUpdate) ||\r\n      true\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      input: { value },\r\n      fileType = \"\",\r\n      multiple = true,\r\n      disabled,\r\n      values,\r\n      visible = true,\r\n    } = this.props;\r\n\r\n    const { previewImage, previewVisible } = this.state;\r\n    const fileList = value && (multiple ? value : [value]);\r\n\r\n    return (\r\n      (isFunction(visible) ? visible(values, this.props) : visible) && (\r\n        <div className=\"file_up\">\r\n          <button\r\n            className=\"upload-button\"\r\n            type=\"button\"\r\n            disabled={\r\n              isFunction(disabled) ? disabled(values, this.props) : disabled\r\n            }\r\n            onClick={() => {\r\n              this.upload.click();\r\n            }}\r\n          >\r\n            <>\r\n              {this.uploadButton}\r\n\r\n              <input\r\n                type=\"file\"\r\n                id=\"file\"\r\n                ref={(ref) => (this.upload = ref)}\r\n                style={{ display: \"none\" }}\r\n                accept={fileType}\r\n                multiple={multiple}\r\n                onChange={this.onChangeFile.bind(this)}\r\n              />\r\n            </>\r\n          </button>\r\n          {map(fileList, this.renderThumb)}\r\n          {previewVisible && (\r\n            <ImagePreview\r\n              image={previewImage}\r\n              onCancel={this.handleCancel.bind(this)}\r\n            />\r\n          )}\r\n        </div>\r\n      )\r\n    );\r\n  }\r\n}\r\n\r\n// const connector = connect(mapStateToProps, mapDispatchToProps);\r\n// export default connector(\r\n//   withTranslation(\"messages\", \"labels\")(fileUploaderComponent)\r\n// );\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(withTranslation(\"messages\", \"labels\")(fileUploaderComponent))\r\n);\r\n","import {lazy} from 'react'\r\n\r\nexport const label = lazy(()=>import('./label'))\r\nexport const input = lazy(()=>import('./input'))\r\nexport const actions = lazy(()=>import('./actions'))\r\nexport const image = lazy(()=>import('./image'))"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AACA;AAAA;AAMA;AACA;AAEA;;;;;;;;;;;;ACjCA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChCA;AAEA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAAA;AANA;AACA;AACA;AACA;AACA;AAAA;AAsBA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAGA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAIA;AACA;AACA;AAKA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAGA;AACA;AACA;AAGA;AAAA;AAEA;AAAA;AAAA;AAKA;AAAA;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAQA;AACA;AAUA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAqHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AA3SA;AAEA;AACA;AACA;AACA;AACA;AAgEA;AACA;AAGA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAmDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AAGA;AACA;AAIA;AAIA;AACA;AAAA;AACA;AAIA;AACA;AACA;AAIA;AACA;AACA;AAIA;AACA;AACA;AAIA;AACA;AAIA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAgDA;AACA;AAOA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AAAA;AAEA;AACA;AACA;AAGA;AACA;AACA;AAAA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAOA;AACA;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC1ZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;;;;A","sourceRoot":""}