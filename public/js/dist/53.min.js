(window["webpackJsonp"] = window["webpackJsonp"] || []).push([
  [53],
  {
    /***/ "./src/app/components/inputs/fields/identify/Component/FilterComponentInvest/index.js":
      /*!********************************************************************************************!*\
  !*** ./src/app/components/inputs/fields/identify/Component/FilterComponentInvest/index.js ***!
  \********************************************************************************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony import */ var antd_lib_input_style__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! antd/lib/input/style */ "./node_modules/antd/lib/input/style/index.js"
          );
        /* harmony import */ var antd_lib_input_style__WEBPACK_IMPORTED_MODULE_0___default =
          /*#__PURE__*/ __webpack_require__.n(
            antd_lib_input_style__WEBPACK_IMPORTED_MODULE_0__
          );
        /* harmony import */ var antd_lib_input__WEBPACK_IMPORTED_MODULE_1__ =
          __webpack_require__(
            /*! antd/lib/input */ "./node_modules/antd/lib/input/index.js"
          );
        /* harmony import */ var antd_lib_input__WEBPACK_IMPORTED_MODULE_1___default =
          /*#__PURE__*/ __webpack_require__.n(
            antd_lib_input__WEBPACK_IMPORTED_MODULE_1__
          );
        /* harmony import */ var antd_lib_select_style__WEBPACK_IMPORTED_MODULE_2__ =
          __webpack_require__(
            /*! antd/lib/select/style */ "./node_modules/antd/lib/select/style/index.js"
          );
        /* harmony import */ var antd_lib_select_style__WEBPACK_IMPORTED_MODULE_2___default =
          /*#__PURE__*/ __webpack_require__.n(
            antd_lib_select_style__WEBPACK_IMPORTED_MODULE_2__
          );
        /* harmony import */ var antd_lib_select__WEBPACK_IMPORTED_MODULE_3__ =
          __webpack_require__(
            /*! antd/lib/select */ "./node_modules/antd/lib/select/index.js"
          );
        /* harmony import */ var antd_lib_select__WEBPACK_IMPORTED_MODULE_3___default =
          /*#__PURE__*/ __webpack_require__.n(
            antd_lib_select__WEBPACK_IMPORTED_MODULE_3__
          );
        /* harmony import */ var antd_lib_spin_style__WEBPACK_IMPORTED_MODULE_4__ =
          __webpack_require__(
            /*! antd/lib/spin/style */ "./node_modules/antd/lib/spin/style/index.js"
          );
        /* harmony import */ var antd_lib_spin_style__WEBPACK_IMPORTED_MODULE_4___default =
          /*#__PURE__*/ __webpack_require__.n(
            antd_lib_spin_style__WEBPACK_IMPORTED_MODULE_4__
          );
        /* harmony import */ var antd_lib_spin__WEBPACK_IMPORTED_MODULE_5__ =
          __webpack_require__(
            /*! antd/lib/spin */ "./node_modules/antd/lib/spin/index.js"
          );
        /* harmony import */ var antd_lib_spin__WEBPACK_IMPORTED_MODULE_5___default =
          /*#__PURE__*/ __webpack_require__.n(
            antd_lib_spin__WEBPACK_IMPORTED_MODULE_5__
          );
        /* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_6__ =
          __webpack_require__(
            /*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"
          );
        /* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_6___default =
          /*#__PURE__*/ __webpack_require__.n(
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_6__
          );
        /* harmony import */ var react__WEBPACK_IMPORTED_MODULE_7__ =
          __webpack_require__(/*! react */ "./node_modules/react/index.js");
        /* harmony import */ var react__WEBPACK_IMPORTED_MODULE_7___default =
          /*#__PURE__*/ __webpack_require__.n(
            react__WEBPACK_IMPORTED_MODULE_7__
          );
        /* harmony import */ var _mapviewer_config__WEBPACK_IMPORTED_MODULE_8__ =
          __webpack_require__(
            /*! ../mapviewer/config */ "./src/app/components/inputs/fields/identify/Component/mapviewer/config/index.js"
          );
        /* harmony import */ var _common_common_func__WEBPACK_IMPORTED_MODULE_9__ =
          __webpack_require__(
            /*! ../common/common_func */ "./src/app/components/inputs/fields/identify/Component/common/common_func.js"
          );

        class FilterComponentInvest extends react__WEBPACK_IMPORTED_MODULE_7__[
          "Component"
        ] {
          constructor(...args) {
            super(...args);
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_6___default()(
              this,
              "state",
              {
                searchLayer: null,
                searchLayers: [],
                formValues: {},
                searchFields: [],
                isActiveBufferSearch: false,
                showInfo: false,
                noData: false,
              }
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_6___default()(
              this,
              "self",
              this
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_6___default()(
              this,
              "mapPoint",
              null
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_6___default()(
              this,
              "handleSearchSelect",
              () => (layer) => {
                this.updateSearchSelect(layer);
              }
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_6___default()(
              this,
              "updateSearchSelect",
              (layer) => {
                this.setState({
                  searchLayer: layer,
                  showInfo: false,
                  noData: false,
                  formValues: {},
                  searchFields: [],
                  isActiveBufferSearch: false,
                });
                this.props.setSelectMapLayer(layer);
                this.getListsValue(layer);
              }
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_6___default()(
              this,
              "getListsValue",
              (layer, getListsAfterFieldName, parentFilter) => {
                var _investMapLayers$laye, _investMapLayers$laye2;
                //
                //get all filters
                let promiseQueries = [];
                let fieldsName = [];
                let layerdId = Object(
                  _common_common_func__WEBPACK_IMPORTED_MODULE_9__["getLayerId"]
                )(this.props.map.__mapInfo, layer);
                let uniqueFieldsFilter = [];
                (_investMapLayers$laye =
                  _mapviewer_config__WEBPACK_IMPORTED_MODULE_8__[
                    "investMapLayers"
                  ][layer]) === null || _investMapLayers$laye === void 0
                  ? void 0
                  : (_investMapLayers$laye2 =
                      _investMapLayers$laye.searchFields) === null ||
                    _investMapLayers$laye2 === void 0
                  ? void 0
                  : _investMapLayers$laye2
                      .filter((x) => !x.isSearch)
                      .forEach((item, index) => {
                        if (!getListsAfterFieldName) {
                          fieldsName.push(item.field);
                          let filterQuery = parentFilter
                            ? parentFilter +
                              " and " +
                              item.field +
                              " is not null"
                            : "MUNICIPALITY_NAME in (" +
                              _mapviewer_config__WEBPACK_IMPORTED_MODULE_8__[
                                "InvestMunicpality"
                              ] +
                              ")";
                          uniqueFieldsFilter.push(item.field);
                          promiseQueries.push(
                            Object(
                              _common_common_func__WEBPACK_IMPORTED_MODULE_9__[
                                "queryTask"
                              ]
                            )({
                              url:
                                _mapviewer_config__WEBPACK_IMPORTED_MODULE_8__[
                                  "investMapUrl"
                                ] +
                                "/" +
                                layerdId,
                              where: filterQuery,
                              outFields:
                                item.zoomLayer &&
                                item.zoomLayer.filterField &&
                                !item.zoomLayer.isNotSameAttributeNameInLayer
                                  ? [item.field, item.zoomLayer.filterField]
                                  : [item.field],
                              returnGeometry: false,
                              returnExecuteObject: true,
                              returnDistinctValues: true,
                            })
                          );
                        } else {
                          if (item.field == getListsAfterFieldName)
                            getListsAfterFieldName = null;
                        }
                      });
                if (promiseQueries.length > 0)
                  Object(
                    _common_common_func__WEBPACK_IMPORTED_MODULE_9__[
                      "showLoading"
                    ]
                  )(true);
                else {
                  var _investMapLayers$laye3, _investMapLayers$laye4;
                  this.setState({
                    searchFields:
                      (_investMapLayers$laye3 =
                        _mapviewer_config__WEBPACK_IMPORTED_MODULE_8__[
                          "investMapLayers"
                        ][layer]) === null || _investMapLayers$laye3 === void 0
                        ? void 0
                        : (_investMapLayers$laye4 =
                            _investMapLayers$laye3.searchFields) === null ||
                          _investMapLayers$laye4 === void 0
                        ? void 0
                        : _investMapLayers$laye4.filter((x) => !x.isSearch),
                  });
                }

                /*if (!this.state.formValues["MUNICIPALITY_NAME"]) {
        promiseQueries = [promiseQueries[0]];
        fieldsName = [fieldsName[0]]
      }*/

                Promise.all(promiseQueries).then((resultsData) => {
                  this.mapResultWithDomain(
                    resultsData,
                    fieldsName,
                    layerdId
                  ).then((data) => {
                    var _investMapLayers$laye7, _investMapLayers$laye8;
                    data.forEach((item, index) => {
                      var _investMapLayers$laye5, _investMapLayers$laye6;
                      let searchField =
                        (_investMapLayers$laye5 =
                          _mapviewer_config__WEBPACK_IMPORTED_MODULE_8__[
                            "investMapLayers"
                          ][layer]) === null ||
                        _investMapLayers$laye5 === void 0
                          ? void 0
                          : (_investMapLayers$laye6 =
                              _investMapLayers$laye5.searchFields) === null ||
                            _investMapLayers$laye6 === void 0
                          ? void 0
                          : _investMapLayers$laye6.find(
                              (x) => x.field == fieldsName[index]
                            );
                      let key = uniqueFieldsFilter[index];
                      let arrayUniqueByKey = [
                        ...new Map(
                          item.features.map((item) => [
                            item.attributes[key],
                            item,
                          ])
                        ).values(),
                      ];
                      item.features = [...arrayUniqueByKey];
                      if (item.features.length > 0) {
                        searchField.dataList =
                          fieldsName[index] === "MUNICIPALITY_NAME"
                            ? [
                                ...item.features
                                  .filter(
                                    (f) =>
                                      typeof f.attributes[
                                        "MUNICIPALITY_NAME"
                                      ] === "string"
                                  )
                                  .sort((a, b) =>
                                    a.attributes[
                                      "MUNICIPALITY_NAME"
                                    ].localeCompare(
                                      b.attributes["MUNICIPALITY_NAME"],
                                      "ar"
                                    )
                                  ),
                              ]
                            : [...item.features];
                      } else {
                        searchField.dataList = [];
                      }
                    });
                    Object(
                      _common_common_func__WEBPACK_IMPORTED_MODULE_9__[
                        "showLoading"
                      ]
                    )(false);
                    this.setState({
                      searchFields:
                        (_investMapLayers$laye7 =
                          _mapviewer_config__WEBPACK_IMPORTED_MODULE_8__[
                            "investMapLayers"
                          ][layer]) === null ||
                        _investMapLayers$laye7 === void 0
                          ? void 0
                          : (_investMapLayers$laye8 =
                              _investMapLayers$laye7.searchFields) === null ||
                            _investMapLayers$laye8 === void 0
                          ? void 0
                          : _investMapLayers$laye8.filter((x) => !x.isSearch),
                      formValues: {
                        ...this.state.formValues,
                      },
                    });
                  });
                });
              }
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_6___default()(
              this,
              "mapResultWithDomain",
              (results, fieldsName, layerId) => {
                return new Promise((resolve, reject) => {
                  let count = fieldsName.length;
                  results.forEach((item, index) => {
                    Object(
                      _common_common_func__WEBPACK_IMPORTED_MODULE_9__[
                        "getFeatureDomainName"
                      ]
                    )(
                      item.features,
                      layerId,
                      false,
                      _mapviewer_config__WEBPACK_IMPORTED_MODULE_8__[
                        "investMapUrl"
                      ]
                    ).then((domainResult) => {
                      if (domainResult) item.features = domainResult;
                      --count;
                      if (count < 1) {
                        resolve(results);
                      }
                    });
                  });
                });
              }
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_6___default()(
              this,
              "selectChange",
              (name, listData, item) => (e) => {
                this.setState({
                  showInfo: false,
                  noData: false,
                });
                if (!e) {
                  Object(
                    _common_common_func__WEBPACK_IMPORTED_MODULE_9__[
                      "clearGraphicFromLayer"
                    ]
                  )(this.props.map, "ZoomGraphicLayer");
                  this.setState({
                    [name]: undefined,
                  });
                }
                this.setState(
                  {
                    formValues: {
                      ...this.state.formValues,
                      [name]: e,
                    },
                  },
                  () => {
                    let searchField =
                      _mapviewer_config__WEBPACK_IMPORTED_MODULE_8__[
                        "investMapLayers"
                      ][this.state.searchLayer].searchFields.find(
                        (i) => i.field == name && !i.isSearch
                      );
                    if (searchField) {
                      let filterQuery = [];
                      if (searchField.zoomLayer) {
                        let item = searchField.dataList.find(
                          (x) =>
                            (x.attributes[name + "_Code"] ||
                              x.attributes[name]) == this.state.formValues[name]
                        );
                        if (item) {
                          let where = "";
                          if (
                            searchField.zoomLayer.isNotSameAttributeNameInLayer
                          ) {
                            where =
                              searchField.zoomLayer.filterField +
                              "=" +
                              "'" +
                              (item.attributes[searchField.field + "_Code"] ||
                                item.attributes[searchField.zoomLayer.field]) +
                              "'";
                          } else {
                            where =
                              searchField.zoomLayer.filterField +
                              "=" +
                              "'" +
                              (item.attributes[
                                searchField.zoomLayer.filterField + "_Code"
                              ] ||
                                item.attributes[
                                  searchField.zoomLayer.filterField
                                ]) +
                              "'";
                          }
                          if (e) {
                            Object(
                              _common_common_func__WEBPACK_IMPORTED_MODULE_9__[
                                "zoomToFeatureByFilter"
                              ]
                            )(
                              where,
                              searchField.zoomLayer.name,
                              this.props.map,
                              null,
                              (data) => {
                                if (item) {
                                  item.attributes["OBJECTID"] =
                                    data.attributes["OBJECTID"];
                                  item.geometry = data.geometry;
                                  this.state[name + "_Object"] = item;
                                }
                              }
                            );
                          }
                        }
                      }
                      this.state.formValues = this.deleteChildValues(name);
                      Object.keys(this.state.formValues).forEach((key) => {
                        if (this.state.formValues[key])
                          filterQuery.push(
                            key + "='" + this.state.formValues[key] + "'"
                          );
                      });
                      this.getListsValue(
                        this.state.searchLayer,
                        name,
                        filterQuery.join(" and ")
                      );
                    }
                  }
                );
              }
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_6___default()(
              this,
              "deleteChildValues",
              (name) => {
                let found = false;
                _mapviewer_config__WEBPACK_IMPORTED_MODULE_8__[
                  "investMapLayers"
                ][this.state.searchLayer].searchFields.forEach((item) => {
                  if (found) {
                    delete this.state.formValues[item.field];
                    delete this.state[item.field];
                  }
                  if (item.field == name) {
                    found = true;
                  }
                });
                return this.state.formValues;
              }
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_6___default()(
              this,
              "handleChangeInput",
              (e) => {
                this.setState({
                  showInfo: false,
                  noData: false,
                  formValues: {
                    ...this.state.formValues,
                    [e.target.name]: e.target.value,
                  },
                });
              }
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_6___default()(
              this,
              "handleBufferSearch",
              (e) => {
                this.setState({
                  showInfo: false,
                  noData: false,
                  buffer_distance: e.target.value,
                });
              }
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_6___default()(
              this,
              "searchForData",
              (e) => {
                let searchFields =
                  _mapviewer_config__WEBPACK_IMPORTED_MODULE_8__[
                    "investMapLayers"
                  ][this.state.searchLayer].searchFields;
                let selectedFeature =
                  this.state[
                    searchFields[searchFields.length - 1].field + "_Object"
                  ];
                let layerdId = Object(
                  _common_common_func__WEBPACK_IMPORTED_MODULE_9__["getLayerId"]
                )(this.props.map.__mapInfo, this.state.searchLayer);
                Object(
                  _common_common_func__WEBPACK_IMPORTED_MODULE_9__["queryTask"]
                )({
                  url:
                    this.props.map.getLayer("basemap").url.split("?")[0] +
                    "/" +
                    layerdId,
                  where: "OBJECTID = " + selectedFeature.attributes["OBJECTID"],
                  outFields: _mapviewer_config__WEBPACK_IMPORTED_MODULE_8__[
                    "investMapLayers"
                  ][this.state.searchLayer].outFields.map((x) => x.name),
                  returnGeometry: false,
                  callbackResult: ({ features }) => {
                    if (features.length > 0) {
                      Object(
                        _common_common_func__WEBPACK_IMPORTED_MODULE_9__[
                          "getFeatureDomainName"
                        ]
                      )(
                        features,
                        layerdId,
                        false,
                        _mapviewer_config__WEBPACK_IMPORTED_MODULE_8__[
                          "investMapUrl"
                        ]
                      ).then((res) => {
                        selectedFeature.attributes = {
                          ...res[0].attributes,
                        };
                        selectedFeature.layerName = this.state.searchLayer;
                        this.props.addFeature(selectedFeature);
                        this.state.formValues[
                          searchFields[searchFields.length - 1].field
                        ] = null;
                        this.setState({
                          formValues: {
                            ...this.state.formValues,
                          },
                        });
                      });
                    }
                  },
                  callbackError(error) {},
                });
              }
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_6___default()(
              this,
              "onChange",
              (e) => {
                this.setState({
                  isActiveBufferSearch: !this.state.isActiveBufferSearch,
                });
              }
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_6___default()(
              this,
              "changeDate",
              (name) => (e) => {
                this.setState({
                  formValues: {
                    ...this.state.formValues,
                    [name]: e,
                  },
                });
              }
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_6___default()(
              this,
              "onSearch",
              (item, filterValue) => {
                if (item.isServerSideSearch) {
                  if (this.searchTimeOut) clearTimeout(this.searchTimeOut);
                  this.searchTimeOut = setTimeout(() => {
                    this.setState({
                      fetching: true,
                    });
                    let filterQuery = [];
                    Object.keys(this.state.formValues).forEach((key) => {
                      if (
                        this.state.formValues[key] &&
                        key != item.field &&
                        key != item.isServerSideSearch
                      )
                        filterQuery.push(
                          key + "='" + this.state.formValues[key] + "'"
                        );
                    });
                    if (filterValue) {
                      filterQuery.push(
                        item.field + " like '%" + filterValue + "%'"
                      );
                    }
                    let layerdId = Object(
                      _common_common_func__WEBPACK_IMPORTED_MODULE_9__[
                        "getLayerId"
                      ]
                    )(this.props.map.__mapInfo, this.state.searchLayer);
                    Object(
                      _common_common_func__WEBPACK_IMPORTED_MODULE_9__[
                        "queryTask"
                      ]
                    )({
                      url:
                        _mapviewer_config__WEBPACK_IMPORTED_MODULE_8__[
                          "investMapUrl"
                        ] +
                        "/" +
                        layerdId,
                      where: filterQuery.join(" and "),
                      outFields: [item.field, item.zoomLayer.filterField],
                      returnDistinctValues: true,
                      returnGeometry: false,
                      callbackResult: ({ features }) => {
                        let searchField =
                          _mapviewer_config__WEBPACK_IMPORTED_MODULE_8__[
                            "investMapLayers"
                          ][this.state.searchLayer].searchFields.find(
                            (x) => x.field == item.field
                          );
                        if (features.length > 0)
                          searchField.dataList = [...features];
                        this.setState({
                          searchFields: [
                            ..._mapviewer_config__WEBPACK_IMPORTED_MODULE_8__[
                              "investMapLayers"
                            ][this.state.searchLayer].searchFields.filter(
                              (x) => !x.isSearch
                            ),
                          ],
                          formValues: {
                            ...this.state.formValues,
                          },
                          fetching: false,
                        });
                      },
                    });
                  }, 500);
                }
              }
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_6___default()(
              this,
              "isActive",
              () => {
                let searchFields =
                  _mapviewer_config__WEBPACK_IMPORTED_MODULE_8__[
                    "investMapLayers"
                  ][this.state.searchLayer].searchFields;
                return !this.state.formValues[
                  searchFields[searchFields.length - 1].field
                ];
              }
            );
          }
          componentDidMount() {
            //
            this.setState({
              searchLayers: Object.keys(
                _mapviewer_config__WEBPACK_IMPORTED_MODULE_8__[
                  "investMapLayers"
                ]
              )
                .map((key) => {
                  return {
                    layerName: key,
                    layer:
                      _mapviewer_config__WEBPACK_IMPORTED_MODULE_8__[
                        "investMapLayers"
                      ][key],
                    name: _mapviewer_config__WEBPACK_IMPORTED_MODULE_8__[
                      "investMapLayers"
                    ][key].name,
                  };
                })
                .filter((l) => {
                  return (
                    l.layer.searchFields &&
                    Object(
                      _common_common_func__WEBPACK_IMPORTED_MODULE_9__[
                        "isLayerExist"
                      ]
                    )(this.props.map.__mapInfo, l.layerName)
                  );
                }),
            });
            if (this.props.searchLayer) {
              this.updateSearchSelect(this.props.searchLayer);
            }
          }
          componentWillUnmount() {
            Object(
              _common_common_func__WEBPACK_IMPORTED_MODULE_9__[
                "clearGraphicFromLayer"
              ]
            )(this.props.map, "ZoomGraphicLayer");
          }
          render() {
            const { t } = this.props;
            const filterText =
              this.state.searchLayer &&
              _mapviewer_config__WEBPACK_IMPORTED_MODULE_8__["investMapLayers"][
                this.state.searchLayer
              ].searchFields.find((x) => x.isSearch);
            return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(
              "div",
              {
                style: {
                  textAlign: "right",
                  paddingRight: "10px",
                },
              },
              /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(
                "div",
                {
                  style: {
                    display: "grid",
                    direction: "rtl",
                  },
                },
                this.state.searchFields.map((item, index) => {
                  return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(
                    "div",
                    {
                      style: {
                        display: "grid",
                      },
                      key: index,
                    },
                    /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(
                      antd_lib_select__WEBPACK_IMPORTED_MODULE_3___default.a,
                      {
                        style: {
                          width: "50%",
                        },
                        virtual: false,
                        disabled: item.dataList && item.dataList.length == 0,
                        showSearch: true,
                        allowClear: true,
                        notFoundContent: this.state.fetching
                          ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(
                              antd_lib_spin__WEBPACK_IMPORTED_MODULE_5___default.a,
                              {
                                size: "small",
                              }
                            )
                          : null,
                        onChange: this.selectChange(
                          item.field,
                          item.dataList,
                          item
                        ),
                        value: this.state.formValues[item.field],
                        placeholder: item.alias,
                        /*onSearch={(e) => {
          this.setState({ [item.field]: e });
          this.onSearch(item, e);
        }}*/ getPopupContainer: (trigger) => trigger.parentNode,
                        optionFilterProp: "v",
                      },
                      item.dataList &&
                        item.dataList
                          .filter((e, i) => {
                            if (this.state[item.field]) {
                              return (
                                e.attributes[item.field] &&
                                e.attributes[item.field]
                                  .toLowerCase()
                                  .indexOf(
                                    Object(
                                      _common_common_func__WEBPACK_IMPORTED_MODULE_9__[
                                        "convertToArabic"
                                      ]
                                    )(this.state[item.field].toLowerCase())
                                  ) >= 0
                              );
                            } else {
                              return i < 100 && e.attributes[item.field];
                            }
                          })
                          .slice(0, 50)
                          .map((m, i) => {
                            return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(
                              antd_lib_select__WEBPACK_IMPORTED_MODULE_3___default
                                .a.Option,
                              {
                                key: m.attributes[item.field] + i,
                                v: m.attributes[item.field],
                                value:
                                  m.attributes[item.field + "_Code"] ||
                                  m.attributes[item.field],
                              },
                              Object(
                                _common_common_func__WEBPACK_IMPORTED_MODULE_9__[
                                  "convertToArabic"
                                ]
                              )(m.attributes[item.field])
                            );
                          })
                    )
                  );
                })
              ),
              this.state.searchLayer && this.state.searchFields.length
                ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(
                    "div",
                    null,
                    filterText &&
                      /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(
                        "div",
                        {
                          style: {
                            display: "grid",
                          },
                        },
                        /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(
                          "label",
                          {
                            className: "selectLabelStyle",
                          },
                          filterText.alias
                        ),
                        /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(
                          antd_lib_input__WEBPACK_IMPORTED_MODULE_1___default.a,
                          {
                            name: filterText.field,
                            onChange: this.handleChangeInput,
                            value: this.state.formValues[filterText.field],
                            placeholder: filterText.alias,
                          }
                        )
                      ),
                    /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(
                      "div",
                      {
                        style: {
                          display: "grid",
                        },
                      },
                      /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(
                        "div",
                        {
                          style: {
                            textAlign: "center",
                          },
                        },
                        /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(
                          "button",
                          {
                            onClick: this.searchForData,
                            size: "large",
                            className: "add-gis",
                            style: {
                              padding: "5px",
                            },
                            disabled: this.isActive(),
                            htmlType: "submit",
                          },
                          "\u0625\u0636\u0627\u0641\u0629 \u0627\u0644\u0623\u0631\u0636"
                        )
                      )
                    )
                  )
                : /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(
                    react__WEBPACK_IMPORTED_MODULE_7___default.a.Fragment,
                    null
                  )
            );
          }
        }
        /* harmony default export */ __webpack_exports__["default"] =
          FilterComponentInvest;

        /***/
      },

    /***/ "./src/app/components/inputs/fields/identify/Component/InvestIdentifyComponnent/Helpers.js":
      /*!*************************************************************************************************!*\
  !*** ./src/app/components/inputs/fields/identify/Component/InvestIdentifyComponnent/Helpers.js ***!
  \*************************************************************************************************/
      /*! exports provided: selectDis, DataQuery, queryOption, querySetting, DataReqest */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "selectDis",
          function () {
            return selectDis;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "DataQuery",
          function () {
            return DataQuery;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "queryOption",
          function () {
            return queryOption;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "querySetting",
          function () {
            return querySetting;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "DataReqest",
          function () {
            return DataReqest;
          }
        );
        /* harmony import */ var esri_loader__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! esri-loader */ "./node_modules/esri-loader/dist/umd/esri-loader.js"
          );
        /* harmony import */ var esri_loader__WEBPACK_IMPORTED_MODULE_0___default =
          /*#__PURE__*/ __webpack_require__.n(
            esri_loader__WEBPACK_IMPORTED_MODULE_0__
          );
        /* harmony import */ var _mapviewer_config_map__WEBPACK_IMPORTED_MODULE_1__ =
          __webpack_require__(
            /*! ../mapviewer/config/map */ "./src/app/components/inputs/fields/identify/Component/mapviewer/config/map.js"
          );

        const options = {
          url: "https://js.arcgis.com/3.13",
        };
        const selectDis = (e) => {
          var a = [];
          e.forEach((el) => {
            el.features.forEach((element) => {
              if (
                !a.find(
                  (t) =>
                    t.attributes.PARCEL_SPATIAL_ID ==
                    element.attributes.PARCEL_SPATIAL_ID
                )
              ) {
                a.push(element);
              }
            });
          });
          return a;
        };
        const DataQuery = (layerNum, QueryOptions, CallBack) => {
          Object(esri_loader__WEBPACK_IMPORTED_MODULE_0__["loadModules"])(
            [
              "esri/symbols/SimpleLineSymbol",
              "esri/Color",
              "esri/layers/FeatureLayer",
              "esri/tasks/RelationshipQuery",
              "esri/tasks/QueryTask",
              "esri/tasks/query",
              "esri/request",
              "esri/geometry/Polygon",
              "esri/symbols/SimpleFillSymbol",
              "esri/graphic",
            ],
            options
          ).then(
            ([
              SimpleLineSymbol,
              Color,
              FeatureLayer,
              RQuery,
              QueryTask,
              Query,
              request,
              Polygon,
              SimpleFillSymbol,
              Graphic,
            ]) => {
              var query = new Query();
              var qt = new QueryTask(
                _mapviewer_config_map__WEBPACK_IMPORTED_MODULE_1__["mapUrl"] +
                  `/${layerNum}`
              );
              QueryOptions.forEach((e) => {
                query[e.name] = e.value;
              });
              qt.execute(query, CallBack, (res) => {
                console.log(res);
              });
            }
          );
        };
        const queryOption = (where, geo, outfields) => {
          return [
            {
              name: "where",
              value: where,
            },
            {
              name: "returnGeometry",
              value: geo,
            },
            {
              name: "outFields",
              value: outfields,
            },
          ];
        };
        const querySetting = (num, where, geo, outfields, customMapUrl) => {
          let url =
            (customMapUrl ||
              _mapviewer_config_map__WEBPACK_IMPORTED_MODULE_1__["mapUrl"]) +
            "/" +
            num;
          return {
            url:
              (customMapUrl ||
                _mapviewer_config_map__WEBPACK_IMPORTED_MODULE_1__["mapUrl"]) +
              "/" +
              num,
            where,
            returnGeometry: geo,
            outFields: outfields,
          };
        };
        const DataReqest = (url, callBack) => {
          Object(esri_loader__WEBPACK_IMPORTED_MODULE_0__["loadModules"])(
            ["esri/request"],
            options
          ).then(([request]) => {
            request({
              url: url,
              content: {
                f: "json",
              },
              handleAs: "json",
              callbackParamName: "callback",
            }).then(callBack);
          });
        };

        /***/
      },

    /***/ "./src/app/components/inputs/fields/identify/Component/InvestIdentifyComponnent/index.js":
      /*!***********************************************************************************************!*\
  !*** ./src/app/components/inputs/fields/identify/Component/InvestIdentifyComponnent/index.js ***!
  \***********************************************************************************************/
      /*! exports provided: appMapDispatchToProps, default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "appMapDispatchToProps",
          function () {
            return appMapDispatchToProps;
          }
        );
        /* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/extends.js"
          );
        /* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default =
          /*#__PURE__*/ __webpack_require__.n(
            _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__
          );
        /* harmony import */ var antd_lib_row_style__WEBPACK_IMPORTED_MODULE_1__ =
          __webpack_require__(
            /*! antd/lib/row/style */ "./node_modules/antd/lib/row/style/index.js"
          );
        /* harmony import */ var antd_lib_row_style__WEBPACK_IMPORTED_MODULE_1___default =
          /*#__PURE__*/ __webpack_require__.n(
            antd_lib_row_style__WEBPACK_IMPORTED_MODULE_1__
          );
        /* harmony import */ var antd_lib_row__WEBPACK_IMPORTED_MODULE_2__ =
          __webpack_require__(
            /*! antd/lib/row */ "./node_modules/antd/lib/row/index.js"
          );
        /* harmony import */ var antd_lib_row__WEBPACK_IMPORTED_MODULE_2___default =
          /*#__PURE__*/ __webpack_require__.n(
            antd_lib_row__WEBPACK_IMPORTED_MODULE_2__
          );
        /* harmony import */ var antd_lib_col_style__WEBPACK_IMPORTED_MODULE_3__ =
          __webpack_require__(
            /*! antd/lib/col/style */ "./node_modules/antd/lib/col/style/index.js"
          );
        /* harmony import */ var antd_lib_col_style__WEBPACK_IMPORTED_MODULE_3___default =
          /*#__PURE__*/ __webpack_require__.n(
            antd_lib_col_style__WEBPACK_IMPORTED_MODULE_3__
          );
        /* harmony import */ var antd_lib_col__WEBPACK_IMPORTED_MODULE_4__ =
          __webpack_require__(
            /*! antd/lib/col */ "./node_modules/antd/lib/col/index.js"
          );
        /* harmony import */ var antd_lib_col__WEBPACK_IMPORTED_MODULE_4___default =
          /*#__PURE__*/ __webpack_require__.n(
            antd_lib_col__WEBPACK_IMPORTED_MODULE_4__
          );
        /* harmony import */ var antd_lib_form_style__WEBPACK_IMPORTED_MODULE_5__ =
          __webpack_require__(
            /*! antd/lib/form/style */ "./node_modules/antd/lib/form/style/index.js"
          );
        /* harmony import */ var antd_lib_form_style__WEBPACK_IMPORTED_MODULE_5___default =
          /*#__PURE__*/ __webpack_require__.n(
            antd_lib_form_style__WEBPACK_IMPORTED_MODULE_5__
          );
        /* harmony import */ var antd_lib_form__WEBPACK_IMPORTED_MODULE_6__ =
          __webpack_require__(
            /*! antd/lib/form */ "./node_modules/antd/lib/form/index.js"
          );
        /* harmony import */ var antd_lib_form__WEBPACK_IMPORTED_MODULE_6___default =
          /*#__PURE__*/ __webpack_require__.n(
            antd_lib_form__WEBPACK_IMPORTED_MODULE_6__
          );
        /* harmony import */ var antd_lib_input_style__WEBPACK_IMPORTED_MODULE_7__ =
          __webpack_require__(
            /*! antd/lib/input/style */ "./node_modules/antd/lib/input/style/index.js"
          );
        /* harmony import */ var antd_lib_input_style__WEBPACK_IMPORTED_MODULE_7___default =
          /*#__PURE__*/ __webpack_require__.n(
            antd_lib_input_style__WEBPACK_IMPORTED_MODULE_7__
          );
        /* harmony import */ var antd_lib_input__WEBPACK_IMPORTED_MODULE_8__ =
          __webpack_require__(
            /*! antd/lib/input */ "./node_modules/antd/lib/input/index.js"
          );
        /* harmony import */ var antd_lib_input__WEBPACK_IMPORTED_MODULE_8___default =
          /*#__PURE__*/ __webpack_require__.n(
            antd_lib_input__WEBPACK_IMPORTED_MODULE_8__
          );
        /* harmony import */ var antd_lib_button_style__WEBPACK_IMPORTED_MODULE_9__ =
          __webpack_require__(
            /*! antd/lib/button/style */ "./node_modules/antd/lib/button/style/index.js"
          );
        /* harmony import */ var antd_lib_button_style__WEBPACK_IMPORTED_MODULE_9___default =
          /*#__PURE__*/ __webpack_require__.n(
            antd_lib_button_style__WEBPACK_IMPORTED_MODULE_9__
          );
        /* harmony import */ var antd_lib_button__WEBPACK_IMPORTED_MODULE_10__ =
          __webpack_require__(
            /*! antd/lib/button */ "./node_modules/antd/lib/button/index.js"
          );
        /* harmony import */ var antd_lib_button__WEBPACK_IMPORTED_MODULE_10___default =
          /*#__PURE__*/ __webpack_require__.n(
            antd_lib_button__WEBPACK_IMPORTED_MODULE_10__
          );
        /* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_11__ =
          __webpack_require__(
            /*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"
          );
        /* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_11___default =
          /*#__PURE__*/ __webpack_require__.n(
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_11__
          );
        /* harmony import */ var antd_lib_select_style__WEBPACK_IMPORTED_MODULE_12__ =
          __webpack_require__(
            /*! antd/lib/select/style */ "./node_modules/antd/lib/select/style/index.js"
          );
        /* harmony import */ var antd_lib_select_style__WEBPACK_IMPORTED_MODULE_12___default =
          /*#__PURE__*/ __webpack_require__.n(
            antd_lib_select_style__WEBPACK_IMPORTED_MODULE_12__
          );
        /* harmony import */ var antd_lib_select__WEBPACK_IMPORTED_MODULE_13__ =
          __webpack_require__(
            /*! antd/lib/select */ "./node_modules/antd/lib/select/index.js"
          );
        /* harmony import */ var antd_lib_select__WEBPACK_IMPORTED_MODULE_13___default =
          /*#__PURE__*/ __webpack_require__.n(
            antd_lib_select__WEBPACK_IMPORTED_MODULE_13__
          );
        /* harmony import */ var react__WEBPACK_IMPORTED_MODULE_14__ =
          __webpack_require__(/*! react */ "./node_modules/react/index.js");
        /* harmony import */ var react__WEBPACK_IMPORTED_MODULE_14___default =
          /*#__PURE__*/ __webpack_require__.n(
            react__WEBPACK_IMPORTED_MODULE_14__
          );
        /* harmony import */ var _common_esri_request__WEBPACK_IMPORTED_MODULE_15__ =
          __webpack_require__(
            /*! ../common/esri_request */ "./src/app/components/inputs/fields/identify/Component/common/esri_request.js"
          );
        /* harmony import */ var _common_common_func__WEBPACK_IMPORTED_MODULE_16__ =
          __webpack_require__(
            /*! ../common/common_func */ "./src/app/components/inputs/fields/identify/Component/common/common_func.js"
          );
        /* harmony import */ var _reducers__WEBPACK_IMPORTED_MODULE_17__ =
          __webpack_require__(
            /*! ../../../../../../reducers */ "./src/app/reducers/index.js"
          );
        /* harmony import */ var react_i18next__WEBPACK_IMPORTED_MODULE_18__ =
          __webpack_require__(
            /*! react-i18next */ "./node_modules/react-i18next/dist/es/index.js"
          );
        /* harmony import */ var _mapviewer_config_map__WEBPACK_IMPORTED_MODULE_19__ =
          __webpack_require__(
            /*! ../mapviewer/config/map */ "./src/app/components/inputs/fields/identify/Component/mapviewer/config/map.js"
          );
        /* harmony import */ var react_bootstrap__WEBPACK_IMPORTED_MODULE_20__ =
          __webpack_require__(
            /*! react-bootstrap */ "./node_modules/react-bootstrap/esm/index.js"
          );
        /* harmony import */ var _MapComponent_MapComponent__WEBPACK_IMPORTED_MODULE_21__ =
          __webpack_require__(
            /*! ../MapComponent/MapComponent */ "./src/app/components/inputs/fields/identify/Component/MapComponent/MapComponent.js"
          );
        /* harmony import */ var _MapBtnsComponent__WEBPACK_IMPORTED_MODULE_22__ =
          __webpack_require__(
            /*! ../MapBtnsComponent */ "./src/app/components/inputs/fields/identify/Component/MapBtnsComponent/index.js"
          );
        /* harmony import */ var _mapping__WEBPACK_IMPORTED_MODULE_23__ =
          __webpack_require__(
            /*! ../mapping */ "./src/app/components/inputs/fields/identify/Component/mapping.js"
          );
        /* harmony import */ var _main_helpers_actions_main__WEBPACK_IMPORTED_MODULE_24__ =
          __webpack_require__(
            /*! ../../../../../../../main_helpers/actions/main */ "./src/main_helpers/actions/main/index.js"
          );
        /* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_25__ =
          __webpack_require__(
            /*! react-redux */ "./node_modules/react-redux/es/index.js"
          );
        /* harmony import */ var _Helpers__WEBPACK_IMPORTED_MODULE_26__ =
          __webpack_require__(
            /*! ./Helpers */ "./src/app/components/inputs/fields/identify/Component/InvestIdentifyComponnent/Helpers.js"
          );
        /* harmony import */ var react_sticky__WEBPACK_IMPORTED_MODULE_27__ =
          __webpack_require__(
            /*! react-sticky */ "./node_modules/react-sticky/lib/index.js"
          );
        /* harmony import */ var react_sticky__WEBPACK_IMPORTED_MODULE_27___default =
          /*#__PURE__*/ __webpack_require__.n(
            react_sticky__WEBPACK_IMPORTED_MODULE_27__
          );
        /* harmony import */ var _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_28__ =
          __webpack_require__(
            /*! @fortawesome/free-solid-svg-icons */ "./node_modules/@fortawesome/free-solid-svg-icons/index.es.js"
          );
        /* harmony import */ var _common_esri_loader__WEBPACK_IMPORTED_MODULE_29__ =
          __webpack_require__(
            /*! ../common/esri_loader */ "./src/app/components/inputs/fields/identify/Component/common/esri_loader.js"
          );
        /* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_30__ =
          __webpack_require__(/*! axios */ "./node_modules/axios/index.js");
        /* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_30___default =
          /*#__PURE__*/ __webpack_require__.n(
            axios__WEBPACK_IMPORTED_MODULE_30__
          );
        /* harmony import */ var _imports_config__WEBPACK_IMPORTED_MODULE_31__ =
          __webpack_require__(
            /*! ../../../../../../../imports/config */ "./src/imports/config.js"
          );
        /* harmony import */ var _FilterComponentInvest__WEBPACK_IMPORTED_MODULE_32__ =
          __webpack_require__(
            /*! ../FilterComponentInvest */ "./src/app/components/inputs/fields/identify/Component/FilterComponentInvest/index.js"
          );
        /* harmony import */ var _fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_33__ =
          __webpack_require__(
            /*! @fortawesome/react-fontawesome */ "./node_modules/@fortawesome/react-fontawesome/index.es.js"
          );
        /* harmony import */ var _mapviewer_config__WEBPACK_IMPORTED_MODULE_34__ =
          __webpack_require__(
            /*! ../mapviewer/config */ "./src/app/components/inputs/fields/identify/Component/mapviewer/config/index.js"
          );
        /* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_35__ =
          __webpack_require__(
            /*! ../common */ "./src/app/components/inputs/fields/identify/Component/common/index.js"
          );

        // import "antd/dist/reset.css";

        var uniqid = __webpack_require__(
          /*! uniqid */ "./node_modules/uniqid/index.js"
        );

        const { Option } =
          antd_lib_select__WEBPACK_IMPORTED_MODULE_13___default.a;
        const investSugges = "SITE_ACTIVITY";
        const appMapDispatchToProps = (dispatch) => {
          return {
            ...Object(
              _mapping__WEBPACK_IMPORTED_MODULE_23__["mapDispatchToProps"]
            )(dispatch, "lands"),
            ...Object(
              _main_helpers_actions_main__WEBPACK_IMPORTED_MODULE_24__[
                "default"
              ]
            )(dispatch),
          };
        };
        class InvestIdentifyComponnent extends react__WEBPACK_IMPORTED_MODULE_14__[
          "Component"
        ] {
          constructor(props) {
            var _this$props15,
              _this$props15$current,
              _this$props15$current2,
              _this$props16,
              _this$props16$current,
              _this$props16$current2,
              _this$props17,
              _this$props17$current,
              _this$props17$current2,
              _this$props18,
              _this$props18$current,
              _this$props18$current2,
              _this$props19,
              _this$props19$current,
              _this$props19$current2,
              _this$props20,
              _this$props20$current,
              _this$props20$current2,
              _this$props21,
              _this$props21$current,
              _this$props21$current2,
              _props$input,
              _props$input$value,
              _this$props22,
              _this$props22$current,
              _this$props22$current2,
              _props$mainObject,
              _props$mainObject$lan;
            super(props);
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_11___default()(
              this,
              "LayerID",
              []
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_11___default()(
              this,
              "handleChange",
              (e) => {
                this.setState({
                  formValues: {
                    ...this.state.formValues,
                    [e.target.name]: e.target.value,
                  },
                });
              }
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_11___default()(
              this,
              "CoordinateSearch",
              (e) => {
                e.preventDefault();
                this.onPublicUserDecimalSubmit(this.state.formValues);
              }
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_11___default()(
              this,
              "degSearch",
              (e) => {
                e.preventDefault();
                this.onPublicUserDegreesSubmit(this.state.formValues);
              }
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_11___default()(
              this,
              "showGoogleLink",
              (googleLink) => {
                window.open(googleLink, "_blank");
              }
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_11___default()(
              this,
              "UpdateSubmissionDataObject",
              () => {
                var _this$props,
                  _this$props$currentMo,
                  _this$props$currentMo2,
                  _this$props2,
                  _this$props2$currentM,
                  _this$props2$currentM2,
                  _this$props3,
                  _this$props3$currentM,
                  _this$props3$currentM2,
                  _this$props4,
                  _this$props4$currentM,
                  _this$props4$currentM2;
                const { parcelData } = this.state;
                var fields = {
                  ...parcelData.fields,
                };
                Object.keys(fields).map((key, index) => {
                  parcelData[key] = fields[key].value;
                });
                this.state.landsData = {
                  ...this.props.input.value,
                  parcels: [...this.state.selectedLands],
                  parcelData: {
                    ...parcelData,
                  },
                  domainLists: {
                    ...this.state.domainLists,
                  },
                  lists: {
                    firstParcels: [...this.state.parcelNum],
                    subDivNames: [...this.state.subDivNames],
                    MunicipalityNames: [...this.state.MunicipalityNames],
                    subDivType: [...this.state.subDivType],
                    PlanNum: [...this.state.PlanNum],
                    blockNum: [...this.state.blockNum],
                  },
                };
                this.state.landsData["selectedRequestType"] =
                  (([22, 23].indexOf(this.props.currentModule.id) != -1 ||
                    [1928].indexOf(
                      (_this$props = this.props) === null ||
                        _this$props === void 0
                        ? void 0
                        : (_this$props$currentMo =
                            _this$props.currentModule) === null ||
                          _this$props$currentMo === void 0
                        ? void 0
                        : (_this$props$currentMo2 =
                            _this$props$currentMo.record) === null ||
                          _this$props$currentMo2 === void 0
                        ? void 0
                        : _this$props$currentMo2.workflow_id
                    ) != -1) &&
                    [2190, 2191].indexOf(
                      (_this$props2 = this.props) === null ||
                        _this$props2 === void 0
                        ? void 0
                        : (_this$props2$currentM =
                            _this$props2.currentModule) === null ||
                          _this$props2$currentM === void 0
                        ? void 0
                        : (_this$props2$currentM2 =
                            _this$props2$currentM.record) === null ||
                          _this$props2$currentM2 === void 0
                        ? void 0
                        : _this$props2$currentM2.workflow_id
                    ) == -1 &&
                    this.state.selectedRequestType) ||
                  ([2190].indexOf(
                    (_this$props3 = this.props) === null ||
                      _this$props3 === void 0
                      ? void 0
                      : (_this$props3$currentM = _this$props3.currentModule) ===
                          null || _this$props3$currentM === void 0
                      ? void 0
                      : (_this$props3$currentM2 =
                          _this$props3$currentM.record) === null ||
                        _this$props3$currentM2 === void 0
                      ? void 0
                      : _this$props3$currentM2.workflow_id
                  ) != -1 &&
                    "فرد") ||
                  ([2191].indexOf(
                    (_this$props4 = this.props) === null ||
                      _this$props4 === void 0
                      ? void 0
                      : (_this$props4$currentM = _this$props4.currentModule) ===
                          null || _this$props4$currentM === void 0
                      ? void 0
                      : (_this$props4$currentM2 =
                          _this$props4$currentM.record) === null ||
                        _this$props4$currentM2 === void 0
                      ? void 0
                      : _this$props4$currentM2.workflow_id
                  ) != -1 &&
                    "اصدار الكروكي (المواطن)") ||
                  3;
                this.props.input.onChange({
                  ...this.state.landsData,
                });
                this.setState({
                  parcelData: parcelData,
                });
              }
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_11___default()(
              this,
              "parcelQueryTask",
              (value) => {
                this.setState({
                  selectedLands: [],
                  selectedLandsT: [],
                  parcelId: null,
                  parcelNum: [],
                  parcelData: {},
                  selectedRequestType: value,
                });
                Object(
                  _common_esri_request__WEBPACK_IMPORTED_MODULE_15__[
                    "esriRequest"
                  ]
                )(
                  _mapviewer_config_map__WEBPACK_IMPORTED_MODULE_19__[
                    "investMapUrl"
                  ] +
                    "/" +
                    this.LayerID["Landbase_Parcel"]
                ).then((response) => {
                  let { domainLists } = this.state;
                  domainLists.usingSymbols = [];
                  domainLists.districtNames = [];
                  domainLists.SUB_MUNICIPALITY_NAME_Domains = [];
                  domainLists.cityNames = [];
                  response.fields.forEach(function (val) {
                    //;
                    if (val.name === "USING_SYMBOL") {
                      // list.push(val.domain);
                      val.domain.codedValues.forEach(function (domain) {
                        // ////
                        domainLists.usingSymbols.push(domain);
                      });
                    } else if (val.name === "DISTRICT_NAME") {
                      val.domain.codedValues.forEach(function (domain) {
                        // ////
                        domainLists.districtNames.push(domain);
                      });
                    } else if (val.name === "SUB_MUNICIPALITY_NAME") {
                      val.domain.codedValues.forEach(function (domain) {
                        // ////
                        domainLists.SUB_MUNICIPALITY_NAME_Domains.push(domain);
                      });
                    } else if (val.name === "CITY_NAME") {
                      val.domain.codedValues.forEach(function (domain) {
                        domainLists.cityNames.push(domain);
                      });
                    }
                  });
                  this.DrawGraph();
                  this.UpdateSubmissionDataObject();
                });
              }
            );
            // onMunChange = (e) => {
            //   //
            //   clearGraphicFromLayer(this.map, "SelectLandsGraphicLayer");
            //   this.setState({
            //     munval: e,
            //     planeval: undefined,
            //     subTypeval: undefined,
            //     subNameval: undefined,
            //     blockval: undefined,
            //     parcelval: undefined,
            //     // selectedLands: [],
            //     // selectedLandsT: [],
            //     PlanNum: [],
            //     blockNum: [],
            //     subDivNames: [],
            //     //subDivType: [],
            //     parcelId: null,
            //     parcelNum: [],
            //     parcelData: {},
            //   });
            //   this.planId = null;
            //   queryTask({
            //     ...querySetting(
            //       this.LayerID.Municipality_Boundary,
            //       `MUNICIPALITY_NAME='${e}'`,
            //       true,
            //       ["*"],
            //       investMapUrl
            //     ),
            //     callbackResult: (res) => {
            //       this.pol = res.features[0];
            //       highlightFeature(this.pol, this.map, {
            //         layerName: "SelectGraphicLayer",
            //         isZoom: true,
            //         isHiglightSymbol: true,
            //         highlighColor: [0, 0, 0, 0.25],
            //       });
            //       this.setState({ city_name: this.pol?.attributes?.CITY_NAME_A || "" });
            //     },
            //   });
            //   queryTask({
            //     ...querySetting(
            //       this.LayerID.Plan_Data,
            //       `MUNICIPALITY_NAME='${e}'`,
            //       false,
            //       ["PLAN_SPATIAL_ID", "PLAN_NO"],
            //       investMapUrl
            //     ),
            //     callbackResult: (res) => {
            //       this.setState({
            //         PlanNum: res.features.map((e, i) => {
            //           return {
            //             ...e,
            //             i: uniqid(),
            //           };
            //         }),
            //       });
            //     },
            //   });
            //   this.resetGraphics();
            // };
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_11___default()(
              this,
              "resetFields",
              () => {
                this.props.onChange([]);
                this.setState({
                  selectedLands: [],
                  selectedLandsT: [],
                });
              }
            );
            // onPlaneChange = (f) => {
            //   clearGraphicFromLayer(this.map, "SelectLandsGraphicLayer");
            //   clearGraphicFromLayer(this.map, "SelectGraphicLayer");
            //   var planSpatialId = this.state.PlanNum.filter((m) => m.i == f)[0].attributes
            //     .PLAN_SPATIAL_ID;
            //   this.setState({
            //     plan_no: this.state.PlanNum.filter((m) => m.i == f)[0].attributes.PLAN_NO,
            //     planeval: f,
            //     subTypeval: undefined,
            //     subNameval: undefined,
            //     blockval: undefined,
            //     parcelval: undefined,
            //     blockNum: [],
            //     subDivNames: [],
            //     // subDivType: [],
            //     parcelId: null,
            //     parcelNum: [],
            //     parcelData: {},
            //     // selectedLands: [],
            //     // selectedLandsT: [],
            //   });
            //   queryTask({
            //     ...querySetting(
            //       this.LayerID.Plan_Data,
            //       `PLAN_SPATIAL_ID='${planSpatialId}'`,
            //       true,
            //       ["MUNICIPALITY_NAME"],
            //       investMapUrl
            //     ),
            //     callbackResult: (res) => {
            //       this.pol = res.features[0];
            //       highlightFeature(res.features[0], this.map, {
            //         layerName: "SelectGraphicLayer",
            //         isZoom: true,
            //         isHiglightSymbol: true,
            //         highlighColor: [0, 0, 0, 0.25],
            //       });
            //       this.planId = planSpatialId;
            //     },
            //   });
            //   queryTask({
            //     ...querySetting(
            //       this.LayerID.Survey_Block,
            //       `PLAN_SPATIAL_ID='${planSpatialId}'`,
            //       false,
            //       ["BLOCK_NO", "BLOCK_SPATIAL_ID"],
            //       investMapUrl
            //     ),
            //     callbackResult: (res) => {
            //       // var blocks = [];
            //       // if (res.features) {
            //       //   res.features.forEach((feature, index) => {
            //       //     if (feature.attributes.Block_NO) {
            //       //       blocks.splice(0, 0, feature);
            //       //     }
            //       //   });
            //       // }
            //       // this.setState({ blockNum: blocks });
            //       this.setState({ blockNum: res.features });
            //     },
            //   });
            //   queryTask({
            //     ...querySetting(
            //       this.LayerID.Landbase_Parcel,
            //       `PLAN_SPATIAL_ID='${planSpatialId}'`,
            //       false,
            //       ["PARCEL_SPATIAL_ID", "PARCEL_PLAN_NO"],
            //       investMapUrl
            //     ),
            //     callbackResult: (res) => {
            //       this.setState({
            //         parcelSearch: null,
            //         parcelNum: res.features.map((e, i) => {
            //           return {
            //             ...e,
            //             i,
            //           };
            //         }),
            //       });
            //     },
            //   });
            //   this.resetGraphics();
            // };
            // onSubTypeChange = (e) => {
            //   this.onPlaneChange(this.state.planeval);
            //   this.setState({
            //     subType_name: this.state.subDivType.filter((m) => m.code == e)[0].name,
            //     subTypeval: e,
            //   });
            //   queryTask({
            //     ...querySetting(
            //       this.LayerID.Subdivision,
            //       `SUBDIVISION_TYPE=${e} AND PLAN_SPATIAL_ID=${this.planId}`,
            //       false,
            //       ["SUBDIVISION_DESCRIPTION", "SUBDIVISION_SPATIAL_ID"],
            //       investMapUrl
            //     ),
            //     callbackResult: (res) => {
            //       this.setState({ subDivNames: res.features });
            //     },
            //   });
            //   // this.onSubNameChange(this.state.subNameval);
            //   // this.DrawGraph();
            // };
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_11___default()(
              this,
              "resetGraphics",
              () => {
                this.state["selectedLands"] = [];
                this.state["selectedLandsT"] = [];
                this.DrawGraph();
              }
            );
            // onSubNameChange = (value) => {
            //   clearGraphicFromLayer(this.map, "SelectLandsGraphicLayer");
            //   var selectedSubDivName = this.state.subDivNames.filter(
            //     (m) =>
            //       m.attributes.SUBDIVISION_SPATIAL_ID == value ||
            //       m.attributes.SUBDIVISION_DESCRIPTION == value
            //   )[0];
            //   //if (selectedSubDivName) {
            //   var e = selectedSubDivName?.attributes?.SUBDIVISION_SPATIAL_ID;
            //   this.setState({
            //     subName_name: selectedSubDivName?.attributes?.SUBDIVISION_DESCRIPTION,
            //     subNameval: e,
            //     blockval: undefined,
            //     parcelval: undefined,
            //     parcelNum: [],
            //     parcelId: null,
            //   });
            //   queryTask({
            //     ...querySetting(
            //       this.LayerID.Subdivision,
            //       `SUBDIVISION_SPATIAL_ID=${e}`,
            //       true,
            //       ["SUBDIVISION_SPATIAL_ID"],
            //       investMapUrl
            //     ),
            //     callbackResult: (res) => {
            //       if (res) {
            //         this.pol = res.features[0];
            //         highlightFeature(res.features[0], this.map, {
            //           layerName: "SelectGraphicLayer",
            //           isZoom: true,
            //           isHiglightSymbol: true,
            //           highlighColor: [0, 0, 0, 0.25],
            //         });
            //       }
            //     },
            //   });
            //   queryTask({
            //     ...querySetting(
            //       this.LayerID.Landbase_Parcel,
            //       `SUBDIVISION_SPATIAL_ID=${e}`,
            //       false,
            //       ["PARCEL_SPATIAL_ID", "PARCEL_PLAN_NO"],
            //       investMapUrl
            //     ),
            //     callbackResult: (res) => {
            //       if (res) {
            //         this.setState({
            //           parcelSearch: null,
            //           parcelNum: res.features.map((e, i) => {
            //             return {
            //               ...e,
            //               i,
            //             };
            //           }),
            //         });
            //       }
            //     },
            //   });
            //   this.resetGraphics();
            //   //}
            // };
            // onBlockChange = (e) => {
            //   clearGraphicFromLayer(this.map, "SelectLandsGraphicLayer");
            //   this.setState({
            //     block_no: this.state.blockNum.filter(
            //       (m) => m.attributes.BLOCK_SPATIAL_ID == e
            //     )[0].attributes.BLOCK_NO,
            //     blockval: e,
            //     parcelval: undefined,
            //     parcelId: null,
            //     parcelNum: [],
            //     // selectedLands: [],
            //     // selectedLandsT: [],
            //   });
            //   queryTask({
            //     ...querySetting(
            //       this.LayerID.Survey_Block,
            //       `BLOCK_SPATIAL_ID=${e}`,
            //       true,
            //       ["BLOCK_SPATIAL_ID"],
            //       investMapUrl
            //     ),
            //     callbackResult: (res) => {
            //       this.pol = res.features[0];
            //       highlightFeature(res.features[0], this.map, {
            //         layerName: "SelectGraphicLayer",
            //         isZoom: true,
            //         isHiglightSymbol: true,
            //         highlighColor: [0, 0, 0, 0.25],
            //       });
            //     },
            //   });
            //   queryTask({
            //     ...querySetting(
            //       this.LayerID.Landbase_Parcel,
            //       `BLOCK_SPATIAL_ID=${e}`,
            //       false,
            //       ["PARCEL_SPATIAL_ID", "PARCEL_PLAN_NO"],
            //       investMapUrl
            //     ),
            //     callbackResult: (res) => {
            //       this.setState({
            //         parcelSearch: null,
            //         parcelNum: res.features.map((e, i) => {
            //           return {
            //             ...e,
            //             i,
            //           };
            //         }),
            //       });
            //     },
            //   });
            //   this.resetGraphics();
            // };
            // onLandParcelChange = (f) => {
            //   if (!this.state.selectedLands.length) {
            //     var e = this.state.parcelNum.filter((m) => m.i === f)[0].attributes
            //       .PARCEL_SPATIAL_ID;
            //     this.setState({ parcelId: e, parcelval: f });
            //     this.RolBackPol = this.pol;
            //     this.RolBackParcelNum = this.state.parcelNum;
            //     queryTask({
            //       ...querySetting(
            //         this.LayerID.Landbase_Parcel,
            //         `PARCEL_SPATIAL_ID='${e}'`,
            //         true,
            //         ["PARCEL_SPATIAL_ID"],
            //         investMapUrl
            //       ),
            //       callbackResult: (res) => {
            //         this.selectedLandsT = [];
            //         highlightFeature(res.features[0], this.map, {
            //           layerName: "SelectGraphicLayer",
            //           strokeColor: [0, 0, 0],
            //           highlightWidth: 3,
            //           isHighlighPolygonBorder: true,
            //           isZoom: true,
            //           zoomFactor: 10,
            //         });
            //       },
            //     });
            //   } else {
            //     // clearGraphicFromLayer(this.map, "SelectGraphicLayer");
            //     var prevParcelId = this.state.parcelId;
            //     var g = this.state.parcelNum.filter((m) => m.i == f)[0];
            //     this.state["parcelId"] = g.attributes.PARCEL_SPATIAL_ID;
            //     //this.setState({ parcelId: g.attributes.PARCEL_SPATIAL_ID });
            //     this.LandHoverOff(
            //       this.map
            //         .getLayer("SelectGraphicLayer")
            //         .graphics.find(
            //           (prevGraphic) =>
            //             prevGraphic.attributes.PARCEL_SPATIAL_ID == prevParcelId
            //         )
            //     );
            //     // if (
            //     //   this.state.selectedLands.map(
            //     //     ((land) =>
            //     //       land.attributes.OBJECTID ==
            //     //       this.state.parcelval.attributes.OBJECTID).length == 0
            //     //   )
            //     // ) {
            //     //   highlightFeature([this.state.parcelval], this.map, {
            //     //     layerName: "SelectGraphicLayer",
            //     //     noclear: true,
            //     //     isZoom: false,
            //     //     isHiglightSymbol: true,
            //     //     highlighColor: [0, 255, 0, 0.5],
            //     //     attr: true,
            //     //   });
            //     // }
            //     // // highlightFeature(g, this.map, {
            //     // //   layerName: "SelectGraphicLayer",
            //     // //   strokeColor: [0, 0, 0],
            //     // //   isHighlighPolygonBorder: true,
            //     // //   highlightWidth: 3,
            //     // // });
            //     this.setState({ parcelval: f });
            //   }
            // };
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_11___default()(
              this,
              "validation",
              (item) => {
                const { t } = this.props;
                return new Promise((resolve, reject) => {
                  axios__WEBPACK_IMPORTED_MODULE_30___default.a
                    .post(
                      _imports_config__WEBPACK_IMPORTED_MODULE_31__["host"] +
                        "/IsHasSubmission/" +
                        item.attributes.PARCEL_SPATIAL_ID +
                        "/" +
                        (this.props.currentModule.record.id || 0),
                      {
                        PARCEL_PLAN_NO: item.attributes.PARCEL_PLAN_NO,
                        PARCEL_BLOCK_NO: item.attributes.PARCEL_BLOCK_NO,
                        PLAN_NO: item.attributes.PLAN_NO,
                      }
                    )
                    .then(
                      (data) => {
                        if (
                          data.status == 204 ||
                          item.attributes.IS_EDITED_Code != 1
                        ) {
                          return resolve();
                        } else {
                          window.notifySystem(
                            "warning",
                            t("messages:global.PARCELSWARNING")
                          );
                          return reject();
                        }
                      },
                      (err) => {
                        window.notifySystem(
                          "warning",
                          t(
                            `messages:${
                              err.msg ||
                              (err &&
                                err.response &&
                                err.response.data &&
                                err.response.data.msg)
                            }`
                          )
                        );
                        return reject();
                      }
                    );
                  // if (item.attributes.IS_EDITED_Code != 1) {
                  //   return resolve();
                  // } else {
                  //   window.notifySystem("warning", t("messages:PARCELSWARNING"));
                  //   return reject();
                  // }
                });
              }
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_11___default()(
              this,
              "addParcelToSelect",
              (feature) => {
                return new Promise((resolve, reject) => {
                  //if (this.state.selectedLands && this.state.selectedLands.length > 0) {
                  Object(
                    _common_common_func__WEBPACK_IMPORTED_MODULE_16__[
                      "intersectQueryTask"
                    ]
                  )({
                    outFields: [
                      "OBJECTID",
                      "MUNICIPALITY_NAME",
                      "SUB_MUNICIPALITY_NAME",
                      "PARCEL_AREA",
                      "PARCEL_LAT_COORD",
                      "PARCEL_LONG_COORD",
                      "PARCEL_MAIN_LUSE",
                      "PLAN_NO",
                      "PARCEL_PLAN_NO",
                      "USING_SYMBOL",
                      "PARCEL_SPATIAL_ID",
                    ],
                    distance: 20,
                    geometry: feature.geometry,
                    url:
                      _mapviewer_config_map__WEBPACK_IMPORTED_MODULE_19__[
                        "investMapUrl"
                      ] +
                      "/" +
                      this.LayerID.Landbase_Parcel,
                    where: "PARCEL_PLAN_NO is not null",
                    callbackResult: (res) => {
                      Object(
                        _common_common_func__WEBPACK_IMPORTED_MODULE_16__[
                          "getFeatureDomainName"
                        ]
                      )(
                        res.features,
                        this.LayerID.Landbase_Parcel,
                        false,
                        _mapviewer_config_map__WEBPACK_IMPORTED_MODULE_19__[
                          "investMapUrl"
                        ]
                      ).then((r) => {
                        var _this$props5,
                          _this$props5$currentM,
                          _this$props6,
                          _this$props6$currentM,
                          _this$props6$currentM2;
                        res.features = res.features.map((e, i) => {
                          return {
                            ...e,
                            i: uniqid(),
                          };
                        });
                        if (
                          [20, 21].indexOf(
                            (_this$props5 = this.props) === null ||
                              _this$props5 === void 0
                              ? void 0
                              : (_this$props5$currentM =
                                  _this$props5.currentModule) === null ||
                                _this$props5$currentM === void 0
                              ? void 0
                              : _this$props5$currentM.record.app_id
                          ) == -1 &&
                          [2191].indexOf(
                            (_this$props6 = this.props) === null ||
                              _this$props6 === void 0
                              ? void 0
                              : (_this$props6$currentM =
                                  _this$props6.currentModule) === null ||
                                _this$props6$currentM === void 0
                              ? void 0
                              : (_this$props6$currentM2 =
                                  _this$props6$currentM.record) === null ||
                                _this$props6$currentM2 === void 0
                              ? void 0
                              : _this$props6$currentM2.workflow_id
                          ) == -1
                        ) {
                          this.validation(feature, this.props).then(
                            () => {
                              return resolve(res);
                            },
                            () => {
                              return reject();
                            }
                          );
                        } else {
                          return resolve(res);
                        }
                      });
                    },
                  });
                  //}
                });
              }
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_11___default()(
              this,
              "DrawGraph",
              () => {
                if (!this.state.selectedLands.length) {
                  this.map.graphics.clear();
                  Object(
                    _common_common_func__WEBPACK_IMPORTED_MODULE_16__[
                      "clearGraphicFromLayer"
                    ]
                  )(this.map, "SelectLandsGraphicLayer");
                  Object(
                    _common_common_func__WEBPACK_IMPORTED_MODULE_16__[
                      "clearGraphicFromLayer"
                    ]
                  )(this.map, "editlengthGraphicLayer");
                  Object(
                    _common_common_func__WEBPACK_IMPORTED_MODULE_16__[
                      "clearGraphicFromLayer"
                    ]
                  )(this.map, "PacrelNoGraphicLayer");
                  Object(
                    _common_common_func__WEBPACK_IMPORTED_MODULE_16__[
                      "clearGraphicFromLayer"
                    ]
                  )(this.map, "SelectGraphicLayer");
                  Object(
                    _common_common_func__WEBPACK_IMPORTED_MODULE_16__[
                      "clearGraphicFromLayer"
                    ]
                  )(this.map, "ZoomGraphicLayer");

                  //this.onSubNameChange(this.state.subNameval);
                  this.setToStore(null);
                } else {
                  this.parcelDis = Object(
                    _Helpers__WEBPACK_IMPORTED_MODULE_26__["selectDis"]
                  )(this.selectedLandsT);
                  console.log(this.parcelDis);
                  //this.setAdjacentToStore(this.parcelDis);
                  //this.setState({ parcelNum: this.parcelDis });

                  Object(
                    _common_common_func__WEBPACK_IMPORTED_MODULE_16__[
                      "clearGraphicFromLayer"
                    ]
                  )(this.map, "SelectLandsGraphicLayer");
                  Object(
                    _common_common_func__WEBPACK_IMPORTED_MODULE_16__[
                      "clearGraphicFromLayer"
                    ]
                  )(this.map, "editlengthGraphicLayer");
                  Object(
                    _common_common_func__WEBPACK_IMPORTED_MODULE_16__[
                      "clearGraphicFromLayer"
                    ]
                  )(this.map, "PacrelNoGraphicLayer");
                  Object(
                    _common_common_func__WEBPACK_IMPORTED_MODULE_16__[
                      "clearGraphicFromLayer"
                    ]
                  )(this.map, "SelectGraphicLayer");
                  Object(
                    _common_common_func__WEBPACK_IMPORTED_MODULE_16__[
                      "clearGraphicFromLayer"
                    ]
                  )(this.map, "ZoomGraphicLayer");
                  //clearGraphicFromLayer(this.map, "editlengthGraphicLayer")
                  Object(
                    _common_common_func__WEBPACK_IMPORTED_MODULE_16__[
                      "drawLength"
                    ]
                  )(this.map, this.state.selectedLands);
                  // highlightFeature(
                  //   this.parcelDis.filter(
                  //     (element) =>
                  //       !this.state.selectedLands.find(
                  //         (i) => i.id === element.attributes.PARCEL_SPATIAL_ID
                  //       )
                  //   ),
                  //   this.map,
                  //   {
                  //     layerName: "SelectLandsGraphicLayer",
                  //     noclear: false,
                  //     isZoom: false,
                  //     isHiglightSymbol: true,
                  //     highlighColor: [0, 255, 0, 0.5],
                  //     zoomFactor: 10,
                  //   }
                  // );

                  this.parcelDis
                    .filter(
                      (element) =>
                        !this.state.selectedLands.find(
                          (i) => i.id === element.attributes.PARCEL_SPATIAL_ID
                        )
                    )
                    .forEach((f) => {
                      Object(
                        _common_common_func__WEBPACK_IMPORTED_MODULE_16__[
                          "addParcelNo"
                        ]
                      )(
                        f.geometry.getExtent().getCenter(),
                        this.map,
                        f.attributes.PARCEL_PLAN_NO + "",
                        "PacrelNoGraphicLayer",
                        20,
                        [0, 0, 0]
                      );
                    });
                  Object(
                    _common_common_func__WEBPACK_IMPORTED_MODULE_16__[
                      "highlightFeature"
                    ]
                  )(
                    this.parcelDis.filter((element) =>
                      this.state.selectedLands.find(
                        (i) => i.id === element.attributes.PARCEL_SPATIAL_ID
                      )
                    ),
                    this.map,
                    {
                      layerName: "SelectGraphicLayer",
                      noclear: true,
                      attr: {
                        isParcel: true,
                      },
                      isZoom: true,
                      isHighlighPolygonBorder: true,
                      zoomFactor: 10,
                    }
                  );
                  this.parcelDis
                    .filter((element) =>
                      this.state.selectedLands.find(
                        (i) => i.id === element.attributes.PARCEL_SPATIAL_ID
                      )
                    )
                    .forEach((f) => {
                      Object(
                        _common_common_func__WEBPACK_IMPORTED_MODULE_16__[
                          "addParcelNo"
                        ]
                      )(
                        f.geometry.getExtent().getCenter(),
                        this.map,
                        f.attributes.PARCEL_PLAN_NO + "",
                        "PacrelNoGraphicLayer",
                        20,
                        [0, 0, 0]
                      );
                    });
                }
              }
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_11___default()(
              this,
              "setSelectMapLayer",
              (layer) => {
                this.props.setSelectMapLayer(layer);
              }
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_11___default()(
              this,
              "mapLoaded",
              (map) => {
                this.map = map;
                Object(
                  _common_esri_request__WEBPACK_IMPORTED_MODULE_15__[
                    "getMapInfo"
                  ]
                )(
                  _mapviewer_config_map__WEBPACK_IMPORTED_MODULE_19__[
                    "investMapUrl"
                  ]
                ).then((response) => {
                  map.__mapInfo = response;
                  this.setState({
                    mapLoaded: true,
                  });
                });
                this.props.setSelectMapLayer("Landbase_Parcel");
                this.props.setMap(map);
                if (
                  this.props.input &&
                  this.props.input.value &&
                  this.props.input.value.parcels &&
                  this.props.input.value.temp
                ) {
                  var _this$props7,
                    _this$props7$currentM,
                    _this$props7$currentM2,
                    _this$props8,
                    _this$props8$currentM,
                    _this$props8$currentM2,
                    _this$props9,
                    _this$props9$currentM,
                    _this$props9$currentM2,
                    _this$props10,
                    _this$props10$current,
                    _this$props10$current2;
                  setTimeout(() => {
                    var _this$props$input$val,
                      _this$props$input$val2,
                      _this$props$input$val3,
                      _this$props$input,
                      _this$props$input$val4,
                      _this$props$input$val5;
                    this.props.input.value.parcels.forEach((f) => {
                      f.geometry = new esri.geometry.Polygon(f.geometry);
                      Object(
                        _common_common_func__WEBPACK_IMPORTED_MODULE_16__[
                          "addParcelNo"
                        ]
                      )(
                        f.geometry.getExtent().getCenter(),
                        this.map,
                        f.attributes.PARCEL_PLAN_NO + "",
                        "PacrelNoGraphicLayer",
                        20,
                        [0, 0, 0]
                      );
                    });
                    Object(
                      _common_common_func__WEBPACK_IMPORTED_MODULE_16__[
                        "drawLength"
                      ]
                    )(this.map, this.props.input.value.parcels);
                    if (
                      (_this$props$input$val = this.props.input.value) !==
                        null &&
                      _this$props$input$val !== void 0 &&
                      (_this$props$input$val2 = _this$props$input$val.temp) !==
                        null &&
                      _this$props$input$val2 !== void 0 &&
                      (_this$props$input$val3 =
                        _this$props$input$val2.parcelDis) !== null &&
                      _this$props$input$val3 !== void 0 &&
                      _this$props$input$val3.length
                    ) {
                      // highlightFeature(
                      //   this.props.input.value.temp.parcelDis.filter(
                      //     (element) =>
                      //       !this.props.input.value.parcels.find(
                      //         (i) =>
                      //           i.attributes.PARCEL_SPATIAL_ID ===
                      //           element.attributes.PARCEL_SPATIAL_ID
                      //       )
                      //   ),
                      //   this.map,
                      //   {
                      //     layerName: "SelectLandsGraphicLayer",
                      //     noclear: false,
                      //     isZoom: false,
                      //     isHiglightSymbol: true,
                      //     highlighColor: [0, 255, 0, 0.5],
                      //     zoomFactor: 10,
                      //   }
                      // );

                      this.props.input.value.temp.parcelDis
                        .filter(
                          (element) =>
                            !this.props.input.value.parcels.find(
                              (i) =>
                                i.attributes.PARCEL_SPATIAL_ID ===
                                element.attributes.PARCEL_SPATIAL_ID
                            )
                        )
                        .forEach((f) => {
                          if (!f.geometry.getExtent) {
                            f.geometry = new esri.geometry.Polygon(f.geometry);
                          }
                          Object(
                            _common_common_func__WEBPACK_IMPORTED_MODULE_16__[
                              "addParcelNo"
                            ]
                          )(
                            f.geometry.getExtent().getCenter(),
                            this.map,
                            f.attributes.PARCEL_PLAN_NO + "",
                            "PacrelNoGraphicLayer",
                            20,
                            [0, 0, 0]
                          );
                        });
                      console.log(this.props.input.value.temp.parcelDis);
                      this.setState({
                        parcelSearch: null,
                        parcelNum: this.props.input.value.temp.parcelDis,
                      });
                    } else if (
                      (_this$props$input = this.props.input) !== null &&
                      _this$props$input !== void 0 &&
                      (_this$props$input$val4 = _this$props$input.value) !==
                        null &&
                      _this$props$input$val4 !== void 0 &&
                      (_this$props$input$val5 =
                        _this$props$input$val4.parcels) !== null &&
                      _this$props$input$val5 !== void 0 &&
                      _this$props$input$val5.length
                    ) {
                      var _this$props$input2, _this$props$input2$va;
                      Object(
                        _common_common_func__WEBPACK_IMPORTED_MODULE_16__[
                          "checkParcelAdjacents"
                        ]
                      )(
                        (_this$props$input2 = this.props.input) === null ||
                          _this$props$input2 === void 0
                          ? void 0
                          : (_this$props$input2$va =
                              _this$props$input2.value) === null ||
                            _this$props$input2$va === void 0
                          ? void 0
                          : _this$props$input2$va.parcels
                      );
                    }
                  }, 500);
                  const {
                    input: { value },
                  } = this.props;
                  this.state.landsData = {
                    ...value,
                    conditions: this.state.conditions,
                    temp: {
                      //map: this.map,
                      mun: this.props.input.value.temp.mun,
                      plan: this.props.input.value.temp.plan,
                      subTypeval: this.props.input.value.temp.subTypeval,
                      subNameval: this.props.input.value.temp.subNameval,
                      parcelDis: this.props.input.value.temp.parcelDis,
                      blockval: this.props.input.value.temp.blockval,
                      parcelval: this.props.input.value.temp.parcelval,
                      subname: this.props.input.value.temp.subname,
                      block_no: this.props.input.value.temp.block_no,
                      city_name: this.props.input.value.temp.city_name,
                    },
                    parcels: [...this.props.input.value.parcels],
                    parcelData: {
                      ...this.props.input.value.parcelData,
                    },
                    domainLists: {
                      ...this.state.domainLists,
                    },
                    lists: {
                      firstParcels: [...this.state.parcelNum],
                      subDivNames: [...this.state.subDivNames],
                      MunicipalityNames: [...this.state.MunicipalityNames],
                      subDivType: [...this.state.subDivType],
                      PlanNum: [...this.state.PlanNum],
                      blockNum: [...this.state.blockNum],
                    },
                  };
                  this.state.landsData["selectedRequestType"] =
                    (([22, 23].indexOf(this.props.currentModule.id) != -1 ||
                      [1928].indexOf(
                        (_this$props7 = this.props) === null ||
                          _this$props7 === void 0
                          ? void 0
                          : (_this$props7$currentM =
                              _this$props7.currentModule) === null ||
                            _this$props7$currentM === void 0
                          ? void 0
                          : (_this$props7$currentM2 =
                              _this$props7$currentM.record) === null ||
                            _this$props7$currentM2 === void 0
                          ? void 0
                          : _this$props7$currentM2.workflow_id
                      ) != -1) &&
                      [2190, 2191].indexOf(
                        (_this$props8 = this.props) === null ||
                          _this$props8 === void 0
                          ? void 0
                          : (_this$props8$currentM =
                              _this$props8.currentModule) === null ||
                            _this$props8$currentM === void 0
                          ? void 0
                          : (_this$props8$currentM2 =
                              _this$props8$currentM.record) === null ||
                            _this$props8$currentM2 === void 0
                          ? void 0
                          : _this$props8$currentM2.workflow_id
                      ) == -1 &&
                      this.state.selectedRequestType) ||
                    ([2190].indexOf(
                      (_this$props9 = this.props) === null ||
                        _this$props9 === void 0
                        ? void 0
                        : (_this$props9$currentM =
                            _this$props9.currentModule) === null ||
                          _this$props9$currentM === void 0
                        ? void 0
                        : (_this$props9$currentM2 =
                            _this$props9$currentM.record) === null ||
                          _this$props9$currentM2 === void 0
                        ? void 0
                        : _this$props9$currentM2.workflow_id
                    ) != -1 &&
                      "فرد") ||
                    ([2191].indexOf(
                      (_this$props10 = this.props) === null ||
                        _this$props10 === void 0
                        ? void 0
                        : (_this$props10$current =
                            _this$props10.currentModule) === null ||
                          _this$props10$current === void 0
                        ? void 0
                        : (_this$props10$current2 =
                            _this$props10$current.record) === null ||
                          _this$props10$current2 === void 0
                        ? void 0
                        : _this$props10$current2.workflow_id
                    ) != -1 &&
                      "اصدار الكروكي (المواطن)") ||
                    3;
                  this.props.input.onChange({
                    ...this.state.landsData,
                  });
                }
                this.props.setCurrentMap(map);
                if (this.props.input.value.parcels) {
                  setTimeout(() => {
                    Object(
                      _common_common_func__WEBPACK_IMPORTED_MODULE_16__[
                        "highlightFeature"
                      ]
                    )([this.props.input.value.parcels[0]], this.map, {
                      layerName: "SelectGraphicLayer",
                      noclear: true,
                      isZoom: true,
                      attr: {
                        isParcel: true,
                      },
                      isHighlighPolygonBorder: true,
                      zoomFactor: 10,
                    });
                  }, 1000);
                }

                //this.props.setMapLayers(mapLayers);
                _reducers__WEBPACK_IMPORTED_MODULE_17__["default"].dispatch({
                  type: "Show_Loading_new",
                  loading: false,
                });
              }
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_11___default()(
              this,
              "setValue",
              (item, event) => {
                item.value = event.target.value;
                this.UpdateSubmissionDataObject();
              }
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_11___default()(
              this,
              "addSelectedFeaturesFromMap",
              () => {
                this.props.selectedFeaturesOnMap.forEach((f) => {
                  if (
                    this.props.mainObject.investType.invest_type
                      .SelectedLayer == "Invest_Site_Polygon"
                  ) {
                    f.attributes.PARCEL_MAIN_LUSE = f.attributes[investSugges];
                    f.attributes[investSugges] = null;
                    f.attributes.PARCEL_AREA = f.attributes["SITE_AREA"];
                  }
                  f.id = f.attributes.PARCEL_SPATIAL_ID;
                  this.setToStore([f]).then(() => {
                    this.setState({
                      parcelId: null,
                    });
                    var res = {
                      features: [
                        {
                          ...f,
                          i: uniqid(),
                        },
                      ],
                    };
                    this.selectedLandsT.push(res);
                    this.DrawGraph();
                  });
                });
                this.props.setSelectedFeaturesOnMap([]);
              }
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_11___default()(
              this,
              "addFeature",
              (feature) => {
                feature.attributes.PARCEL_SPATIAL_ID =
                  feature.attributes.SITE_GEOSPATIAL_ID;
                this.setState(
                  {
                    parcelId: feature.attributes.SITE_GEOSPATIAL_ID,
                  },
                  () => {
                    this.OnParcelSelect();
                  }
                );
              }
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_11___default()(
              this,
              "OnParcelSelect",
              () => {
                //
                this.setState({
                  parcelval: undefined,
                });
                Object(
                  _common_common_func__WEBPACK_IMPORTED_MODULE_16__[
                    "clearGraphicFromLayer"
                  ]
                )(this.map, "SelectGraphicLayer");
                Object(
                  _common_common_func__WEBPACK_IMPORTED_MODULE_16__[
                    "clearGraphicFromLayer"
                  ]
                )(this.map, "SelectLandsGraphicLayer");
                if (
                  !this.state.selectedLands.filter(
                    (e) => e.id === this.state.parcelId
                  ).length
                ) {
                  // ["PARCEL_AREA", "PARCEL_MAIN_LUSE", "PARCEL_LAT_COORD", "PARCEL_LONG_COORD", "PLAN_NO", "PARCEL_PLAN_NO", "USING_SYMBOL", "PARCEL_BLOCK_NO", "DISTRICT_NAME", "SUBDIVISION_DESCRIPTION", "SUBDIVISION_TYPE", "PARCEL_SPATIAL_ID", "MUNICIPALITY_NAME"]

                  let layerId = this.LayerID.Landbase_Parcel;
                  let filterField = "PARCEL_SPATIAL_ID";
                  if (
                    this.props.mainObject.investType.invest_type
                      .SelectedLayer == "Invest_Site_Polygon"
                  ) {
                    layerId = this.LayerID.Invest_Site_Polygon;
                    filterField = "SITE_GEOSPATIAL_ID";
                  }
                  Object(
                    _common_common_func__WEBPACK_IMPORTED_MODULE_16__[
                      "queryTask"
                    ]
                  )({
                    ...Object(
                      _Helpers__WEBPACK_IMPORTED_MODULE_26__["querySetting"]
                    )(
                      layerId,
                      `${filterField} =${this.state.parcelId}`,
                      true,
                      ["*"],
                      _mapviewer_config_map__WEBPACK_IMPORTED_MODULE_19__[
                        "investMapUrl"
                      ]
                    ),
                    callbackResult: (res) => {
                      if (res.features.length > 0) {
                        if (res.features[0].attributes.PARCELOWNER == 2) {
                          window.notifySystem(
                            "warning",
                            "عذرا لا يمكن تقديم معاملة طرح مواقع استثمارية على هذة الأرض حيث تم الإفادة مسبقًا بأن الأرض غير عائدة للأمانة"
                          );
                        } else {
                          if (
                            this.state.selectedLands &&
                            this.state.selectedLands.length == 0
                          ) {
                            Object(
                              _common_common_func__WEBPACK_IMPORTED_MODULE_16__[
                                "queryTask"
                              ]
                            )({
                              ...Object(
                                _Helpers__WEBPACK_IMPORTED_MODULE_26__[
                                  "querySetting"
                                ]
                              )(
                                this.LayerID.Tbl_Parcel_Conditions,
                                `USING_SYMBOL_CODE ='${res.features[0].attributes.USING_SYMBOL}'`,
                                false,
                                [
                                  "SLIDE_AREA",
                                  "MIN_FROT_OFFSET",
                                  "BUILDING_RATIO",
                                  "FRONT_OFFSET",
                                  "SIDE_OFFSET",
                                  "BACK_OFFSET",
                                  "FLOORS",
                                  "FLOOR_HEIGHT",
                                  "FAR",
                                  "ADD_FLOOR",
                                ],
                                _mapviewer_config_map__WEBPACK_IMPORTED_MODULE_19__[
                                  "investMapUrl"
                                ]
                              ),
                              callbackResult: (condition) => {
                                this.setState({
                                  conditions: condition.features,
                                });
                                Object(
                                  _common_common_func__WEBPACK_IMPORTED_MODULE_16__[
                                    "getFeatureDomainName"
                                  ]
                                )(
                                  res.features,
                                  layerId,
                                  false,
                                  _mapviewer_config_map__WEBPACK_IMPORTED_MODULE_19__[
                                    "investMapUrl"
                                  ]
                                ).then((r) => {
                                  if (
                                    this.props.mainObject.investType.invest_type
                                      .SelectedLayer == "Invest_Site_Polygon"
                                  ) {
                                    r[0].attributes.PARCEL_MAIN_LUSE =
                                      r[0].attributes[investSugges];
                                    r[0].attributes.PARCEL_AREA =
                                      r[0].attributes["SITE_AREA"];
                                    r[0].attributes[investSugges] = null;
                                  }
                                  this.setToStore(r).then(() => {
                                    this.setState({
                                      parcelId: null,
                                    });
                                    this.selectedLandsT.push(res);
                                    this.DrawGraph();

                                    //this.state.selectedLands.pop();
                                  });
                                });
                              },
                            });
                          } else {
                            Object(
                              _common_common_func__WEBPACK_IMPORTED_MODULE_16__[
                                "getFeatureDomainName"
                              ]
                            )(
                              res.features,
                              layerId,
                              false,
                              _mapviewer_config_map__WEBPACK_IMPORTED_MODULE_19__[
                                "investMapUrl"
                              ]
                            ).then((r) => {
                              if (
                                this.props.mainObject.investType.invest_type
                                  .SelectedLayer == "Invest_Site_Polygon"
                              ) {
                                r[0].attributes.PARCEL_MAIN_LUSE =
                                  r[0].attributes[investSugges];
                                r[0].attributes[investSugges] = null;
                                r[0].attributes.PARCEL_AREA =
                                  r[0].attributes["SITE_AREA"];
                              }
                              this.setToStore(r).then(() => {
                                this.setState({
                                  parcelId: null,
                                });
                                this.selectedLandsT.push(res);
                                this.DrawGraph();

                                //this.state.selectedLands.pop();
                              });
                            });
                          }
                        }
                      }
                    },
                  });
                }
              }
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_11___default()(
              this,
              "setToStore",
              (r) => {
                return new Promise((resolve, reject) => {
                  var _value$parcels;
                  const {
                    input: { value },
                  } = this.props;
                  if (
                    value !== null &&
                    value !== void 0 &&
                    (_value$parcels = value.parcels) !== null &&
                    _value$parcels !== void 0 &&
                    _value$parcels.find(
                      (x) =>
                        x.attributes["OBJECTID"] ==
                        (r && r[0].attributes["OBJECTID"])
                    )
                  ) {
                    window.notifySystem(
                      "warning",
                      "هذة الأرض تم اختيارها من قبل"
                    );
                  } else {
                    this.state.landsData = {
                      ...value,
                      mapGraphics: [],
                      conditions: this.state.conditions,
                      parcelData: {
                        ...this.state.parcelData,
                      },
                      temp: {
                        //map: this.map,
                        // ...value,
                        mun: this.state.munval,
                        plan: this.state.planeval,
                        subTypeval: this.state.subTypeval,
                        subNameval: this.state.subNameval,
                        subname: this.state.subName_name,
                        parcelDis: this.RolBackParcelNum,
                        block_no: this.state.block_no,
                        blockval: this.state.blockval,
                        parcelval: this.state.parcelval,
                        city_name: this.state.city_name,
                      },
                      domainLists: {
                        ...this.state.domainLists,
                      },
                      lists: {
                        firstParcels: [...this.state.parcelNum],
                        subDivNames: [...this.state.subDivNames],
                        MunicipalityNames: [...this.state.MunicipalityNames],
                        subDivType: [...this.state.subDivType],
                        PlanNum: [...this.state.PlanNum],
                        blockNum: [...this.state.blockNum],
                      },
                    };
                    if (r) {
                      //r[0].attributes.PARCEL_AREA = "";

                      let geometry = new esri.geometry.Polygon(r[0].geometry);
                      let pt = geometry.getExtent().getCenter();
                      Object(
                        _common_common_func__WEBPACK_IMPORTED_MODULE_16__[
                          "project"
                        ]
                      )([pt], 4326, (res) => {
                        //

                        r[0].attributes.X = pt.x;
                        r[0].attributes.Y = pt.y;
                        r[0].attributes.lat = res[0].y;
                        r[0].attributes.long = res[0].x;
                        r[0].attributes.googleLink =
                          "https://maps.google.com/?q=" +
                          res[0].y +
                          "," +
                          res[0].x;
                        this.state.selectedLands.push({
                          geometry: r[0].geometry,
                          attributes: r[0].attributes,
                          id:
                            this.state.parcelId ||
                            r[0].attributes.PARCEL_SPATIAL_ID,
                        });
                        Object(
                          _common_common_func__WEBPACK_IMPORTED_MODULE_16__[
                            "map_object"
                          ]
                        )(this.state.selectedLands);
                        this[
                          "edit_PARCEL_AREA" +
                            (this.state.selectedLands.length - 1)
                        ] = r[0].attributes.PARCEL_AREA;
                        this[
                          "edit_PARCEL_BLOCK_NO" +
                            (this.state.selectedLands.length - 1)
                        ] =
                          r[0].attributes.PARCEL_BLOCK_NO ||
                          r[0].attributes.BLOCK_NO;
                        this[
                          "edit_DISTRICT_NAME" +
                            (this.state.selectedLands.length - 1)
                        ] = r[0].attributes.DISTRICT_NAME;
                        this[
                          "edit_SUBDIVISION_TYPE" +
                            (this.state.selectedLands.length - 1)
                        ] = r[0].attributes.SUBDIVISION_TYPE;
                        this[
                          "edit_SUBDIVISION_DESCRIPTION" +
                            (this.state.selectedLands.length - 1)
                        ] = r[0].attributes.SUBDIVISION_DESCRIPTION;
                        this.updateSelectParcels();
                        resolve();
                      });
                    } else {
                      this.updateSelectParcels();
                      resolve();
                    }
                  }
                });
              }
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_11___default()(
              this,
              "updateSelectParcels",
              () => {
                var _this$props11,
                  _this$props11$current,
                  _this$props11$current2,
                  _this$props12,
                  _this$props12$current,
                  _this$props12$current2,
                  _this$props13,
                  _this$props13$current,
                  _this$props13$current2,
                  _this$props14,
                  _this$props14$current,
                  _this$props14$current2;
                this.state.landsData["parcels"] = [...this.state.selectedLands];
                this.state.landsData["selectedRequestType"] =
                  (([22, 23].indexOf(this.props.currentModule.id) != -1 ||
                    [1928].indexOf(
                      (_this$props11 = this.props) === null ||
                        _this$props11 === void 0
                        ? void 0
                        : (_this$props11$current =
                            _this$props11.currentModule) === null ||
                          _this$props11$current === void 0
                        ? void 0
                        : (_this$props11$current2 =
                            _this$props11$current.record) === null ||
                          _this$props11$current2 === void 0
                        ? void 0
                        : _this$props11$current2.workflow_id
                    ) != -1) &&
                    [2190, 2191].indexOf(
                      (_this$props12 = this.props) === null ||
                        _this$props12 === void 0
                        ? void 0
                        : (_this$props12$current =
                            _this$props12.currentModule) === null ||
                          _this$props12$current === void 0
                        ? void 0
                        : (_this$props12$current2 =
                            _this$props12$current.record) === null ||
                          _this$props12$current2 === void 0
                        ? void 0
                        : _this$props12$current2.workflow_id
                    ) == -1 &&
                    this.state.selectedRequestType) ||
                  ([2190].indexOf(
                    (_this$props13 = this.props) === null ||
                      _this$props13 === void 0
                      ? void 0
                      : (_this$props13$current =
                          _this$props13.currentModule) === null ||
                        _this$props13$current === void 0
                      ? void 0
                      : (_this$props13$current2 =
                          _this$props13$current.record) === null ||
                        _this$props13$current2 === void 0
                      ? void 0
                      : _this$props13$current2.workflow_id
                  ) != -1 &&
                    "فرد") ||
                  ([2191].indexOf(
                    (_this$props14 = this.props) === null ||
                      _this$props14 === void 0
                      ? void 0
                      : (_this$props14$current =
                          _this$props14.currentModule) === null ||
                        _this$props14$current === void 0
                      ? void 0
                      : (_this$props14$current2 =
                          _this$props14$current.record) === null ||
                        _this$props14$current2 === void 0
                      ? void 0
                      : _this$props14$current2.workflow_id
                  ) != -1 &&
                    "اصدار الكروكي (المواطن)") ||
                  3;
                this.props.input.onChange({
                  ...this.state.landsData,
                });
              }
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_11___default()(
              this,
              "setAdjacentToStore",
              (r) => {
                let store_value = this.props.input.value;
                store_value.temp.parcelDis = r;
                this.props.input.onChange(store_value);
              }
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_11___default()(
              this,
              "LandHoverOn",
              (f) => {
                if (this.state.selectedLands.length) {
                  var fitleredGraphics = this.map
                    .getLayer("SelectGraphicLayer")
                    .graphics.filter((graphic) => {
                      return (
                        graphic.attributes.OBJECTID != f.attributes.OBJECTID
                      );
                    });
                  fitleredGraphics = [
                    ...new Map(
                      fitleredGraphics.map((item) => [
                        item["attributes"]["OBJECTID"],
                        item,
                      ])
                    ).values(),
                  ];
                  Object(
                    _common_common_func__WEBPACK_IMPORTED_MODULE_16__[
                      "clearGraphicFromLayer"
                    ]
                  )(this.map, "SelectGraphicLayer");
                  fitleredGraphics.forEach((graphic) => {
                    this.map.getLayer("SelectGraphicLayer").add(graphic);
                  });
                  Object(
                    _common_common_func__WEBPACK_IMPORTED_MODULE_16__[
                      "highlightFeature"
                    ]
                  )([f], this.map, {
                    layerName: "SelectGraphicLayer",
                    noclear: true,
                    isZoom: false,
                    isHiglightSymbol: false,
                    attr: true,
                  });
                }
              }
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_11___default()(
              this,
              "LandHoverOff",
              (f) => {
                if (
                  f &&
                  this.state.selectedLands.length &&
                  f.attributes.PARCEL_SPATIAL_ID != this.state.parcelId
                ) {
                  Object(
                    _common_common_func__WEBPACK_IMPORTED_MODULE_16__[
                      "highlightFeature"
                    ]
                  )([f], this.map, {
                    layerName: "SelectGraphicLayer",
                    noclear: true,
                    isZoom: false,
                    isHiglightSymbol: true,
                    highlighColor: [0, 255, 0, 0.5],
                    attr: true,
                  });
                }
              }
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_11___default()(
              this,
              "remove",
              (item) => {
                let { mainObject } = this.props;
                if (mainObject && mainObject.waseka) {
                  delete mainObject.waseka;
                }
                this.state.parcelData = {};
                //this.state.selectedLands.pop(item);

                let filterField = "SITE_GEOSPATIAL_ID";
                if (!item.attributes["SITE_GEOSPATIAL_ID"]) {
                  filterField = "PARCEL_SPATIAL_ID";
                }
                this.state.selectedLands = this.state.selectedLands.filter(
                  (x) =>
                    x.attributes[filterField] != item.attributes[filterField]
                );
                //this.props.input.value.parcels = slice(this.props.input.value.parcels, 0, -1)
                // this.props.input.onChange([...values])
                if (this.state.selectedLandsT) {
                  this.state.selectedLandsT.filter(
                    (x) =>
                      x.attributes[filterField] != item.attributes[filterField]
                  );

                  //this.state.selectedLandsT.pop(item);
                }
                this.DrawGraph();
                this.UpdateSubmissionDataObject();
              }
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_11___default()(
              this,
              "openPopup",
              (scope) => {
                var fields = this.parcelDataFields;
                this.props.setMain("Popup", {
                  popup: {
                    type: "create",
                    childProps: {
                      fields,
                      initialValues: {
                        ...scope.state.parcelData,
                      },
                      ok(values) {
                        scope.state["parcelData"] = values;
                        scope.UpdateSubmissionDataObject();
                        return Promise.resolve(true);
                      },
                    },
                  },
                });
              }
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_11___default()(
              this,
              "myChangeHandler",
              (name, i, e, event) => {
                this["edit_" + name + i] = event.target.value;
                e.attributes[name] = event.target.value;
                //e.attributes['PARCEL_AREA'] = event.target.value;
                this.setState({
                  [name + "_isEdit_" + i]: true,
                });
              }
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_11___default()(
              this,
              "selectOnchange",
              (name, i, e, value) => {
                this["edit_" + name + i] = value;
                e.attributes[name] = value;
                if (name == investSugges) {
                  e.attributes[name + "_Code"] = this.parcel_fields
                    .find((x) => x.name == investSugges)
                    .options.find((x) => x.name == value).code;
                }

                //e.attributes['PARCEL_AREA'] = event.target.value;
                this.setState({
                  [name + "_isEdit_" + i]: true,
                });
              }
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_11___default()(
              this,
              "showEditBtn",
              (name, value) => {
                if (name == "USING_SYMBOL") {
                  return value == null;
                } else {
                  return (
                    [
                      "PARCEL_AREA",
                      "PARCEL_BLOCK_NO",
                      "DISTRICT_NAME",
                      "SUBDIVISION_TYPE",
                      "SUBDIVISION_DESCRIPTION",
                      investSugges,
                    ].indexOf(name) > -1
                  );
                }
              }
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_11___default()(
              this,
              "enableEdit",
              (name, i) => {
                this.setState({
                  [name + "_isEdit_" + i]: true,
                });
              }
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_11___default()(
              this,
              "exportCad",
              () => {
                console.log(this.state.selectedLands);
                var polygons = this.state.selectedLands;
                var cadPolygons = [];
                polygons.forEach((polygon) => {
                  delete polygon.geometry.cache;
                  var jsonParcel = {
                    geometry: polygon.geometry,
                    attributes: {
                      Layer: "floor",
                      Color: 1,
                      LyrColor: 1,
                    },
                  };
                  cadPolygons.push(jsonParcel);
                });
                var jsonParcel = {
                  attributes: {
                    Layer: "plus",
                    Color: 2,
                    LyrColor: 2,
                  },
                };
                Object(
                  _common_common_func__WEBPACK_IMPORTED_MODULE_16__[
                    "uploadGISFile"
                  ]
                )(
                  `${window.restServicesPath}/ExportGeoDataToCAD/GPServer/ExportGeoDataToCAD`,
                  {
                    ParcelsToExport: JSON.stringify(cadPolygons), //`[${featuresList.join(", ")}]` ,
                  },
                  (data) => {
                    //store.dispatch({ type: "Show_Loading_new", loading: false });
                    data.value.split(",").forEach((item) => {
                      //setTimeout(() => {

                      var file_path =
                        window.filesHost +
                        "/" +
                        item.replaceAll(/\s/g, "").replaceAll("\\", "/");
                      var a = document.createElement("A");
                      a.href = file_path;
                      a.download = file_path.substr(
                        file_path.lastIndexOf("/") + 1
                      );
                      document.body.appendChild(a);
                      a.click();
                      document.body.removeChild(a);
                      //}, 1000);
                    });
                  }
                );
              }
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_11___default()(
              this,
              "setSelectMapLayer",
              (layer) => {
                this.props.setSelectMapLayer(layer);
              }
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_11___default()(
              this,
              "onPublicUserDegreesSubmit",
              (values) => {
                // convert (deg, min, sec) to value of (lat,lng)
                this.zoomToDegreePoint(values);
              }
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_11___default()(
              this,
              "zoomToDegreePoint",
              (values) => {
                let latitudeResult =
                  +values.latitudeDeg +
                  +values.latitudeMinutes / 60 +
                  +values.latitudeSeconds / 3600;
                let longitudeResult =
                  +values.longitudeDeg +
                  +values.longitudeMinutes / 60 +
                  +values.longitudeSeconds / 3600;
                this.zoomToLatLng(latitudeResult, longitudeResult);
              }
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_11___default()(
              this,
              "zoomToLatLng",
              (lat, lng) => {
                let point = new esri.geometry.Point({
                  latitude: lat,
                  longitude: lng,
                });
                this.checkPointInAmana(point);
              }
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_11___default()(
              this,
              "checkPointInAmana",
              (point) => {
                Object(
                  _common_common_func__WEBPACK_IMPORTED_MODULE_16__["project"]
                )([point], this.map.spatialReference.wkid, (res) => {
                  Object(
                    _common_common_func__WEBPACK_IMPORTED_MODULE_16__[
                      "highlightFeature"
                    ]
                  )(res[0], this.map, {
                    layerName: "ZoomGraphicLayer",
                    isZoom: true,
                    pointZoomFactor: 10,
                    isZoomOnly: true,
                    isLocation: true,
                  });
                });

                /*project([point], this.map.spatialReference.wkid, (res) => {
        queryTask({
          url: investMapUrl + "/" + this.LayerID["Province_Boundary"],
          geometry: res[0],
          outFields: ["OBJECTID"],
          returnGeometry: false,
          callbackResult: ({ features }) => {
            if (!features.length) {
              message.warning("هذة النقطة خارج حدود الأمانة");
            } else {
              highlightFeature(res[0], this.map, {
                layerName: "ZoomGraphicLayer",
                isZoom: true,
                pointZoomFactor: 10,
                isZoomOnly: true,
                isLocation: true,
              });
            }
          },
        });
      });*/
              }
            );
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_11___default()(
              this,
              "onPublicUserDecimalSubmit",
              (values) => {
                if (values.latitude && values.longitude) {
                  let point = new esri.geometry.Point({
                    latitude: +values.latitude,
                    longitude: +values.longitude,
                  });
                  this.checkPointInAmana(point);
                }
              }
            );
            this.PlanNum = [];
            this.planId = null;
            this.parcelTs = [];
            this.selectedLandsT = [];
            this.selectedLands = [];
            this.selectionMode = false;
            this.parcel_fields_headers = this.props.parcel_fields_headers || [
              "البلدية",
              "البلدية الفرعية",
              "الحي",
              "رقم المخطط",
              "رقم الأرض",
              "المساحة التقريبية (م۲)",
              "اسم التقسيم",
              "وصف التقسيم",
              "رمز الإستخدام",
              "النشاط الرئيسي",
              "النشاط المقترح",
              "الإحداثي السيني",
              "الإحداثي الصادي",
              "رابط الوصول بخرائط جوجل",
            ];
            this.parcel_fields = this.props.parcel_fields || [
              {
                name: "MUNICIPALITY_NAME",
                editable:
                  ((!this.props.isView && true) || false) &&
                  !(
                    (_this$props15 = this.props) !== null &&
                    _this$props15 !== void 0 &&
                    (_this$props15$current = _this$props15.currentModule) !==
                      null &&
                    _this$props15$current !== void 0 &&
                    (_this$props15$current2 = _this$props15$current.record) !==
                      null &&
                    _this$props15$current2 !== void 0 &&
                    _this$props15$current2.is_returned
                  ),
                type: "select",
              },
              {
                name: "SUB_MUNICIPALITY_NAME",
                editable:
                  ((!this.props.isView && true) || false) &&
                  !(
                    (_this$props16 = this.props) !== null &&
                    _this$props16 !== void 0 &&
                    (_this$props16$current = _this$props16.currentModule) !==
                      null &&
                    _this$props16$current !== void 0 &&
                    (_this$props16$current2 = _this$props16$current.record) !==
                      null &&
                    _this$props16$current2 !== void 0 &&
                    _this$props16$current2.is_returned
                  ),
                type: "select",
              },
              {
                name: "DISTRICT_NAME",
                editable:
                  ((!this.props.isView && true) || false) &&
                  !(
                    (_this$props17 = this.props) !== null &&
                    _this$props17 !== void 0 &&
                    (_this$props17$current = _this$props17.currentModule) !==
                      null &&
                    _this$props17$current !== void 0 &&
                    (_this$props17$current2 = _this$props17$current.record) !==
                      null &&
                    _this$props17$current2 !== void 0 &&
                    _this$props17$current2.is_returned
                  ),
                type: "text",
              },
              {
                name: "PLAN_NO",
                editable:
                  ((!this.props.isView && true) || false) &&
                  !(
                    (_this$props18 = this.props) !== null &&
                    _this$props18 !== void 0 &&
                    (_this$props18$current = _this$props18.currentModule) !==
                      null &&
                    _this$props18$current !== void 0 &&
                    (_this$props18$current2 = _this$props18$current.record) !==
                      null &&
                    _this$props18$current2 !== void 0 &&
                    _this$props18$current2.is_returned
                  ),
                type: "text",
              },
              {
                name: "PARCEL_PLAN_NO",
                editable: false,
                type: "text",
              },
              {
                name: "PARCEL_AREA",
                editable:
                  ((!this.props.isView && true) || false) &&
                  !(
                    (_this$props19 = this.props) !== null &&
                    _this$props19 !== void 0 &&
                    (_this$props19$current = _this$props19.currentModule) !==
                      null &&
                    _this$props19$current !== void 0 &&
                    (_this$props19$current2 = _this$props19$current.record) !==
                      null &&
                    _this$props19$current2 !== void 0 &&
                    _this$props19$current2.is_returned
                  ),
                type: "number",
              },
              {
                name: "SUBDIVISION_TYPE",
                editable: false,
              },
              {
                name: "SUBDIVISION_DESCRIPTION",
                editable: false,
              },
              {
                name: "USING_SYMBOL",
                editable: false,
              },
              {
                name: "PARCEL_MAIN_LUSE",
                editable:
                  ((!this.props.isView &&
                    this.props.mainObject.investType.invest_type
                      .SelectedLayer == "Landbase_Parcel") ||
                    false) &&
                  !(
                    (_this$props20 = this.props) !== null &&
                    _this$props20 !== void 0 &&
                    (_this$props20$current = _this$props20.currentModule) !==
                      null &&
                    _this$props20$current !== void 0 &&
                    (_this$props20$current2 = _this$props20$current.record) !==
                      null &&
                    _this$props20$current2 !== void 0 &&
                    _this$props20$current2.is_returned
                  ),
                type: "select",
              },
              {
                name: investSugges,
                editable:
                  (!this.props.isView && true) ||
                  false ||
                  ((_this$props21 = this.props) === null ||
                  _this$props21 === void 0
                    ? void 0
                    : (_this$props21$current = _this$props21.currentModule) ===
                        null || _this$props21$current === void 0
                    ? void 0
                    : (_this$props21$current2 =
                        _this$props21$current.record) === null ||
                      _this$props21$current2 === void 0
                    ? void 0
                    : _this$props21$current2.is_returned),
                type: "select",
              },
              {
                name: "X",
                editable: false,
                type: "text",
              },
              {
                name: "Y",
                editable: false,
                type: "text",
              },
              {
                name: "googleLink",
                editable: false,
                type: "button",
              },
            ];
            this.parcelDataFields = {};
            if (
              ([22, 23].indexOf(props.currentModule.id) != -1 ||
                [1928].indexOf(props.currentModule.record.workflow_id) != -1) &&
              props.is_parcel_type
            ) {
              this.parcelDataFields["parcel_type"] = {
                label: "عبارة عن",
                placeholder: "من فضلك اخل نوع الأرض",
                type: "text",
                name: "parcel_type",
                required: true,
              };
            }
            this.parcelDataFields["north_length"] = {
              label: "طول الحد الشمالي (م)",
              placeholder: "من فضلك ادخل طول الحد الشمالي (م)",
              field: "inputNumber",
              name: "north_length",
              required: true,
            };
            this.parcelDataFields["north_desc"] = {
              label: "وصف الحد الشمالي",
              placeholder: "من فضلك ادخل وصف الحد الشمالي",
              type: "text",
              name: "north_desc",
              maxLength: 200,
              required: true,
            };
            this.parcelDataFields["south_length"] = {
              label: "طول الحد الجنوبي (م)",
              placeholder: "من فضلك ادخل طول الحد الجنوبي (م)",
              field: "inputNumber",
              name: "south_length",
              required: true,
            };
            (this.parcelDataFields["south_desc"] = {
              label: "وصف الحد الجنوبي",
              placeholder: "من فضلك ادخل وصف الحد الجنوبي",
              type: "text",
              name: "south_desc",
              maxLength: 200,
              required: true,
            }),
              (this.parcelDataFields["east_length"] = {
                label: "طول الحد الشرقي (م)",
                placeholder: "من فضلك ادخل طول الحد الشرقي (م)",
                field: "inputNumber",
                name: "east_length",
                required: true,
              });
            this.parcelDataFields["east_desc"] = {
              label: "وصف الحد الشرقي",
              placeholder: "من فضلك ادخل وصف الحد الشرقي",
              type: "text",
              name: "east_desc",
              maxLength: 200,
              required: true,
            };
            this.parcelDataFields["west_length"] = {
              label: "طول الحد الغربي (م)",
              placeholder: "من فضلك ادخل طول الحد الغربي (م)",
              field: "inputNumber",
              name: "west_length",
              required: true,
            };
            this.parcelDataFields["west_desc"] = {
              label: "وصف الحد الغربي",
              placeholder: "من فضلك ادخل وصف الحد الغربي",
              type: "text",
              name: "west_desc",
              maxLength: 200,
              required: true,
            };
            Object(
              _common_common_func__WEBPACK_IMPORTED_MODULE_16__["map_object"]
            )(props.input && props.input.value.parcels);
            this.state = {
              formValues: {},
              boundariesBtnIsVisible:
                this.props.boundariesBtnIsVisible != undefined
                  ? this.props.boundariesBtnIsVisible
                  : true,
              mapLoaded: false,
              munval:
                (props.input &&
                  props.input.value.temp &&
                  props.input.value.temp.mun) ||
                undefined,
              planeval:
                (props.input &&
                  props.input.value.temp &&
                  props.input.value.temp.plan) ||
                undefined,
              subTypeval:
                (props.input &&
                  props.input.value.temp &&
                  props.input.value.temp.subTypeval) ||
                undefined,
              subNameval:
                (props.input &&
                  props.input.value.temp &&
                  props.input.value.temp.subNameval) ||
                undefined,
              blockval:
                (props.input &&
                  props.input.value.temp &&
                  props.input.value.temp.blockval) ||
                undefined,
              selectedLands: (props.input && props.input.value.parcels) || [],
              parcelval:
                (props.input &&
                  props.input.value.temp &&
                  props.input.value.temp.parcelval) ||
                undefined,
              blockNum:
                (props.input.value.lists && props.input.value.lists.blockNum) ||
                [],
              conditions:
                (props.input && props.input.value.conditions) || undefined,
              planSersh: null,
              subDivNames:
                (props.input.value.lists &&
                  props.input.value.lists.subDivNames) ||
                [],
              subDivType:
                (props.input.value.lists &&
                  props.input.value.lists.subDivType) ||
                [],
              parcelNum: [],
              parcelNumS: [],
              MunicipalityNames:
                (props.input.value.lists &&
                  props.input.value.lists.MunicipalityNames) ||
                [],
              requestTypes: [
                {
                  code: 1,
                  name: "فرز",
                  key: "",
                },
                {
                  code: 2,
                  name: "دمج",
                  key: "",
                },
                {
                  code: 3,
                  name: "تقسيم",
                  key: "",
                },
              ],
              PlanNum:
                (props.input.value.lists && props.input.value.lists.PlanNum) ||
                [],
              parcelId: null,
              mapExtend: null,
              parcelSearch: null,
              poly: null,
              selectedRequestType:
                (props === null || props === void 0
                  ? void 0
                  : (_props$input = props.input) === null ||
                    _props$input === void 0
                  ? void 0
                  : (_props$input$value = _props$input.value) === null ||
                    _props$input$value === void 0
                  ? void 0
                  : _props$input$value.selectedRequestType) ||
                ([2190, 2191].indexOf(
                  (_this$props22 = this.props) === null ||
                    _this$props22 === void 0
                    ? void 0
                    : (_this$props22$current = _this$props22.currentModule) ===
                        null || _this$props22$current === void 0
                    ? void 0
                    : (_this$props22$current2 =
                        _this$props22$current.record) === null ||
                      _this$props22$current2 === void 0
                    ? void 0
                    : _this$props22$current2.workflow_id
                ) == -1 &&
                  1) ||
                (props === null || props === void 0
                  ? void 0
                  : (_props$mainObject = props.mainObject) === null ||
                    _props$mainObject === void 0
                  ? void 0
                  : (_props$mainObject$lan = _props$mainObject.landData) ===
                      null || _props$mainObject$lan === void 0
                  ? void 0
                  : _props$mainObject$lan.requestType) ||
                "",
              parcelData: props.input.value.parcelData || {},
              landsData: {},
              domainLists: props.input.value.domainLists || {},
            };
            this.isloaded = true;
          }
          componentDidMount() {
            if (
              this.props.mainObject.investType.invest_type.SelectedLayer ==
              "Invest_Site_Polygon"
            ) {
              this.parcel_fields_headers[7] = "النشاط المستثمر";
            } else {
              this.parcel_fields_headers[7] = "النشاط الرئيسي";
            }
            Object(
              _common_common_func__WEBPACK_IMPORTED_MODULE_16__["getInfo"]
            )(
              _mapviewer_config_map__WEBPACK_IMPORTED_MODULE_19__[
                "investMapUrl"
              ]
            ).then((res) => {
              //
              this.LayerID = res;
              this.mapUrl =
                _mapviewer_config_map__WEBPACK_IMPORTED_MODULE_19__[
                  "investMapUrl"
                ];
              Object(_common__WEBPACK_IMPORTED_MODULE_35__["getParcels"])(
                this,
                null,
                "",
                {
                  returnDistinctValues: true,
                },
                ["MUNICIPALITY_NAME"]
              ).then((features) => {
                Object(
                  _common_common_func__WEBPACK_IMPORTED_MODULE_16__[
                    "getFeatureDomainName"
                  ]
                )(
                  features,
                  this.LayerID.Landbase_Parcel,
                  false,
                  _mapviewer_config_map__WEBPACK_IMPORTED_MODULE_19__[
                    "investMapUrl"
                  ]
                ).then((features) => {
                  let fcs = features
                    .filter((r) => r.attributes.MUNICIPALITY_NAME)
                    .map((r) => {
                      return {
                        code: r.attributes.MUNICIPALITY_NAME_Code,
                        name: r.attributes.MUNICIPALITY_NAME,
                      };
                    });
                  this.setState(
                    {
                      MunicipalityNames: fcs.filter(
                        (x) =>
                          _mapviewer_config__WEBPACK_IMPORTED_MODULE_34__[
                            "InvestMunicpality"
                          ].indexOf(x.code) > -1
                      ),
                      allParcels: features,
                    },
                    () => {
                      this.loadLists = true;
                      window.filterUrl =
                        _mapviewer_config_map__WEBPACK_IMPORTED_MODULE_19__[
                          "investMapUrl"
                        ];
                      if (this.state.munval) {
                        Object(
                          _common__WEBPACK_IMPORTED_MODULE_35__["onMunChange"]
                        )(this, this.state.munval, () => {
                          Object(
                            _common__WEBPACK_IMPORTED_MODULE_35__[
                              "onPlaneChange"
                            ]
                          )(this, this.state.planeval, () => {
                            Object(
                              _common__WEBPACK_IMPORTED_MODULE_35__[
                                "onSubTypeChange"
                              ]
                            )(this, this.state.subTypeval, () => {
                              Object(
                                _common__WEBPACK_IMPORTED_MODULE_35__[
                                  "onSubNameChange"
                                ]
                              )(this, this.state.subNameval, () => {
                                Object(
                                  _common__WEBPACK_IMPORTED_MODULE_35__[
                                    "onBlockChange"
                                  ]
                                )(this, this.state.blockval, () => {
                                  Object(
                                    _common__WEBPACK_IMPORTED_MODULE_35__[
                                      "onLandParcelChange"
                                    ]
                                  )(this, this.state.parcelval, () => {});
                                });
                              });
                            });
                          });
                        });
                      }
                      this.loadLists = false;
                    }
                  );
                });
              });
              // esriRequest(investMapUrl + "/" + this.LayerID.Municipality_Boundary).then(
              //   (response) => {
              //     //
              //     this.setState({
              //       MunicipalityNames:
              //         response.types[0].domains.MUNICIPALITY_NAME.codedValues.filter(
              //           (x) => InvestMunicpality.indexOf(x.code) > -1
              //         ),
              //     });
              //   }
              // );
              /*esriRequest(mapUrl + "/" + this.LayerID.Subdivision).then((response) => {
        this.setState({ subDivType: response.fields[7].domain.codedValues });
        if (this.parcel_fields[4]) {
          this.parcel_fields[4].options = response.fields[7].domain.codedValues;
        }
      });*/
              //
              Object(
                _common_esri_request__WEBPACK_IMPORTED_MODULE_15__[
                  "esriRequest"
                ]
              )(
                _mapviewer_config_map__WEBPACK_IMPORTED_MODULE_19__[
                  "investMapUrl"
                ] +
                  "/" +
                  this.LayerID.Invest_Site_Polygon
              ).then((response) => {
                //
                if (this.parcel_fields.find((x) => x.name == investSugges)) {
                  this.parcel_fields.find(
                    (x) => x.name == investSugges
                  ).options = response.fields.find(
                    (x) => x.name == investSugges
                  ).domain.codedValues;
                }
              });
              //
              // let i = 0;
              // this.props.mainObject?.landData?.landData?.lands?.parcels.forEach(
              //   (parcel) => {
              //     i++;
              //     this.addParcelToSelect(parcel).then((res) => {
              //       this.selectedLandsT.push(res);
              //
              //       if (
              //         this.props.mainObject?.landData?.landData?.lands?.parcels.length == i
              //       ) {
              //         this.DrawGraph();
              //       }
              //     });
              //   }
              // );
            });
            if (
              this.props.mainObject &&
              this.props.mainObject.landData &&
              this.isloaded
            ) {
              this.isloaded = false;
              //this.DrawGraph();

              this.UpdateSubmissionDataObject();
            }
          }
          replaceAll(str, find, replace) {
            return str.replace(new RegExp(find, "g"), replace);
          }
          zoomToFeature(feature) {
            var _feature$geometry;
            var opacity = 1;
            if (
              (feature === null || feature === void 0
                ? void 0
                : (_feature$geometry = feature.geometry) === null ||
                  _feature$geometry === void 0
                ? void 0
                : _feature$geometry.type) == "polygon"
            ) {
              opacity = 0.5;
            }
            Object(
              _common_common_func__WEBPACK_IMPORTED_MODULE_16__[
                "highlightFeature"
              ]
            )(feature, this.map, {
              layerName: "highlightGraphicLayer",
              isZoom: true,
              zoomFactor: 20,
              isHiglightSymbol: true,
              highlighColor: [0, 255, 255, opacity],
            });
          }
          saveEdit(id, name, i) {
            var _this$props23,
              _this$props23$current,
              _this$props23$current2,
              _this$props24,
              _this$props24$current,
              _this$props24$current2,
              _this$props25,
              _this$props25$current,
              _this$props25$current2,
              _this$props26,
              _this$props26$current,
              _this$props26$current2;
            let filterField = "PARCEL_SPATIAL_ID";
            if (
              this.props.mainObject.investType.invest_type.SelectedLayer ==
              "Invest_Site_Polygon"
            ) {
              filterField = "SITE_GEOSPATIAL_ID";
            }
            let findParcel = this.props.input.value.parcels.find((p) => {
              return (
                [
                  p === null || p === void 0 ? void 0 : p.id,
                  p === null || p === void 0
                    ? void 0
                    : p.attributes[filterField],
                ].indexOf(id) != -1
              );
            });
            findParcel.attributes[name] =
              this["edit_" + name + i] || findParcel.attributes[name];
            let selectLand = this.state.selectedLands.find((p) => {
              return (
                [
                  p === null || p === void 0 ? void 0 : p.id,
                  p === null || p === void 0
                    ? void 0
                    : p.attributes[filterField],
                ].indexOf(id) != -1
              );
            });
            selectLand.attributes[name] =
              this["edit_" + name + i] || selectLand.attributes[name];
            this.state.landsData = {
              ...this.props.input.value,
              parcels: [...this.state.selectedLands],
              parcelData: {
                ...this.state.parcelData,
              },
              domainLists: {
                ...this.state.domainLists,
              },
              lists: {
                firstParcels: [...this.state.parcelNum],
                subDivNames: [...this.state.subDivNames],
                MunicipalityNames: [...this.state.MunicipalityNames],
                subDivType: [...this.state.subDivType],
                PlanNum: [...this.state.PlanNum],
                blockNum: [...this.state.blockNum],
              },
            };
            this.state.landsData["selectedRequestType"] =
              (([22, 23].indexOf(this.props.currentModule.id) != -1 ||
                [1928].indexOf(
                  (_this$props23 = this.props) === null ||
                    _this$props23 === void 0
                    ? void 0
                    : (_this$props23$current = _this$props23.currentModule) ===
                        null || _this$props23$current === void 0
                    ? void 0
                    : (_this$props23$current2 =
                        _this$props23$current.record) === null ||
                      _this$props23$current2 === void 0
                    ? void 0
                    : _this$props23$current2.workflow_id
                ) != -1) &&
                [2190, 2191].indexOf(
                  (_this$props24 = this.props) === null ||
                    _this$props24 === void 0
                    ? void 0
                    : (_this$props24$current = _this$props24.currentModule) ===
                        null || _this$props24$current === void 0
                    ? void 0
                    : (_this$props24$current2 =
                        _this$props24$current.record) === null ||
                      _this$props24$current2 === void 0
                    ? void 0
                    : _this$props24$current2.workflow_id
                ) == -1 &&
                this.state.selectedRequestType) ||
              ([2190].indexOf(
                (_this$props25 = this.props) === null ||
                  _this$props25 === void 0
                  ? void 0
                  : (_this$props25$current = _this$props25.currentModule) ===
                      null || _this$props25$current === void 0
                  ? void 0
                  : (_this$props25$current2 = _this$props25$current.record) ===
                      null || _this$props25$current2 === void 0
                  ? void 0
                  : _this$props25$current2.workflow_id
              ) != -1 &&
                "فرد") ||
              ([2191].indexOf(
                (_this$props26 = this.props) === null ||
                  _this$props26 === void 0
                  ? void 0
                  : (_this$props26$current = _this$props26.currentModule) ===
                      null || _this$props26$current === void 0
                  ? void 0
                  : (_this$props26$current2 = _this$props26$current.record) ===
                      null || _this$props26$current2 === void 0
                  ? void 0
                  : _this$props26$current2.workflow_id
              ) != -1 &&
                "اصدار الكروكي (المواطن)") ||
              3;
            this.props.input.onChange({
              ...this.state.landsData,
            });
            this.setState({
              [name + "_isEdit_" + i]: false,
              selectedLands: [...this.state.selectedLands],
            });
          }
          render() {
            var _this$props27,
              _this$props27$current,
              _this$props27$current2,
              _this$props28,
              _this$props28$current,
              _this$props28$current2;
            const {
              parcelData,
              selectedLands,
              MunicipalityNames,
              subDivType,
              subDivNames,
              subNameval,
              blockNum,
              blockval,
              PlanNum,
              mapLoaded,
              planeval,
              parcelSearch,
              parcelNum,
              parcelval,
              conditions,
              requestTypes,
              selectedRequestType,
              boundariesBtnIsVisible,
              formValues,
            } = this.state;
            const { t, fullMapWidth, selectedFeaturesOnMap, mainObject } =
              this.props;
            var parcelBtnDisabled = false; // this.props?.currentModule?.record?.workflow_id
            if (
              ([22, 23].indexOf(this.props.currentModule.id) != -1 ||
                [1928].indexOf(
                  (_this$props27 = this.props) === null ||
                    _this$props27 === void 0
                    ? void 0
                    : (_this$props27$current = _this$props27.currentModule) ===
                        null || _this$props27$current === void 0
                    ? void 0
                    : (_this$props27$current2 =
                        _this$props27$current.record) === null ||
                      _this$props27$current2 === void 0
                    ? void 0
                    : _this$props27$current2.workflow_id
                ) != -1) &&
              [2190, 2191].indexOf(
                (_this$props28 = this.props) === null ||
                  _this$props28 === void 0
                  ? void 0
                  : (_this$props28$current = _this$props28.currentModule) ===
                      null || _this$props28$current === void 0
                  ? void 0
                  : (_this$props28$current2 = _this$props28$current.record) ===
                      null || _this$props28$current2 === void 0
                  ? void 0
                  : _this$props28$current2.workflow_id
              ) == -1 &&
              selectedRequestType == 1 &&
              selectedLands.length > 0
            ) {
              parcelBtnDisabled = true;
            }
            return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
              "div",
              null,
              /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                "div",
                {
                  className: !fullMapWidth
                    ? "content-section implementation"
                    : "",
                },
                /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                  "div",
                  {
                    style: (!this.props.isView && {
                      display: "flex",
                      marginTop: "35px",
                    }) || {
                      display: "flex",
                      alignItems: "center",
                      justifyContent: "center",
                    },
                    className: "removeActive",
                  },
                  (mapLoaded &&
                    !this.props.isView &&
                    /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                      "div",
                      {
                        style: {
                          direction: "ltr",
                          width: "95%",
                        },
                      },
                      /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                        react_bootstrap__WEBPACK_IMPORTED_MODULE_20__["Tabs"],
                        {
                          defaultActiveKey: "searchLands",
                          style: {
                            direction: "rtl",
                          },
                        },
                        /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                          react_bootstrap__WEBPACK_IMPORTED_MODULE_20__["Tab"],
                          {
                            className: "tabsPaddingLand",
                            eventKey: "searchLands",
                            title:
                              "\u0628\u062D\u062B \u0639\u0646 \u0623\u0631\u0636",
                            style: {
                              paddingTop: "10px",
                              padding: "10px",
                            },
                          },
                          mainObject.investType.invest_type.SelectedLayer ==
                            "Landbase_Parcel"
                            ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                react__WEBPACK_IMPORTED_MODULE_14___default.a
                                  .Fragment,
                                null,
                                /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                  antd_lib_select__WEBPACK_IMPORTED_MODULE_13___default.a,
                                  {
                                    getPopupContainer: (trigger) =>
                                      trigger.parentNode,
                                    autoFocus: true,
                                    onChange: (val) => {
                                      Object(
                                        _common__WEBPACK_IMPORTED_MODULE_35__[
                                          "onMunChange"
                                        ]
                                      )(this, val);
                                    },
                                    showSearch: true,
                                    value: this.state.munval,
                                    placeholder:
                                      "\u0627\u062E\u062A\u0631 \u0627\u0633\u0645 \u0627\u0644\u0628\u0644\u062F\u064A\u0647",
                                    disabled:
                                      !this.state.MunicipalityNames.length,
                                    optionFilterProp: "children",
                                    filterOption: (input, option) => {
                                      if (option.props.children) {
                                        return (
                                          option.props.children.find((i) => {
                                            return (
                                              i.indexOf(
                                                input.trim().toLowerCase()
                                              ) >= 0
                                            );
                                          }) != null
                                        );
                                      } else {
                                        return false;
                                      }
                                    },
                                  },
                                  MunicipalityNames.map((e) =>
                                    /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                      Option,
                                      {
                                        key: e.code,
                                        value: e.code,
                                      },
                                      e.name,
                                      " "
                                    )
                                  )
                                ),
                                /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                  antd_lib_select__WEBPACK_IMPORTED_MODULE_13___default.a,
                                  {
                                    onChange: (val) => {
                                      Object(
                                        _common__WEBPACK_IMPORTED_MODULE_35__[
                                          "onPlaneChange"
                                        ]
                                      )(this, val);
                                    },
                                    showSearch: true,
                                    getPopupContainer: (trigger) =>
                                      trigger.parentNode,
                                    autoFocus: true,
                                    disabled: !PlanNum.length,
                                    optionFilterProp: "children",
                                    filterOption: (input, option) => {
                                      if (option.props.children) {
                                        var _option$props$childre,
                                          _option$props$childre2;
                                        return (
                                          ((_option$props$childre =
                                            option.props.children) === null ||
                                          _option$props$childre === void 0
                                            ? void 0
                                            : (_option$props$childre2 =
                                                _option$props$childre.toLowerCase()) ===
                                                null ||
                                              _option$props$childre2 === void 0
                                            ? void 0
                                            : _option$props$childre2.indexOf(
                                                Object(
                                                  _common_common_func__WEBPACK_IMPORTED_MODULE_16__[
                                                    "convertToArabic"
                                                  ]
                                                )(input.toLowerCase())
                                              )) != -1
                                        );
                                      } else {
                                        return false;
                                      }
                                    },
                                    value: planeval,
                                    placeholder:
                                      "\u0631\u0642\u0645 \u0627\u0644\u0645\u062E\u0637\u0637",
                                    notFoundContent: "not found",
                                  },
                                  PlanNum
                                    //.slice(0, 100)
                                    .map((d, i) => {
                                      return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                        Option,
                                        {
                                          key: i,
                                          value: d.i,
                                        },
                                        Object(
                                          _common_common_func__WEBPACK_IMPORTED_MODULE_16__[
                                            "convertToArabic"
                                          ]
                                        )(d.attributes.PLAN_NO)
                                      );
                                    })
                                ),
                                /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                  antd_lib_select__WEBPACK_IMPORTED_MODULE_13___default.a,
                                  {
                                    getPopupContainer: (trigger) =>
                                      trigger.parentNode,
                                    autoFocus: true,
                                    onChange: (val) => {
                                      Object(
                                        _common__WEBPACK_IMPORTED_MODULE_35__[
                                          "onSubTypeChange"
                                        ]
                                      )(this, val);
                                    },
                                    showSearch: true,
                                    disabled: !subDivType.length,
                                    value: this.state.subTypeval,
                                    placeholder: "نوع التقسيم",
                                    optionFilterProp: "children",
                                    filterOption: (input, option) => {
                                      if (option.props.children) {
                                        var _option$props$childre3,
                                          _option$props$childre4;
                                        return (
                                          ((_option$props$childre3 =
                                            option.props.children) === null ||
                                          _option$props$childre3 === void 0
                                            ? void 0
                                            : (_option$props$childre4 =
                                                _option$props$childre3.toLowerCase()) ===
                                                null ||
                                              _option$props$childre4 === void 0
                                            ? void 0
                                            : _option$props$childre4.indexOf(
                                                Object(
                                                  _common_common_func__WEBPACK_IMPORTED_MODULE_16__[
                                                    "convertToArabic"
                                                  ]
                                                )(input.toLowerCase())
                                              )) != -1
                                        );
                                      } else {
                                        return false;
                                      }
                                    },
                                  },
                                  subDivType
                                    //.slice(0, 100)
                                    .map((e, i) =>
                                      /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                        Option,
                                        {
                                          key: i,
                                          value: e.code,
                                        },
                                        " ",
                                        e.name,
                                        " "
                                      )
                                    )
                                ),
                                /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                  antd_lib_select__WEBPACK_IMPORTED_MODULE_13___default.a,
                                  {
                                    getPopupContainer: (trigger) =>
                                      trigger.parentNode,
                                    autoFocus: true,
                                    onChange: (val) => {
                                      Object(
                                        _common__WEBPACK_IMPORTED_MODULE_35__[
                                          "onSubNameChange"
                                        ]
                                      )(this, val);
                                    },
                                    showSearch: true,
                                    disabled: !subDivNames.length,
                                    placeholder:
                                      "\u0627\u0633\u0645 \u0627\u0644\u062A\u0642\u0633\u064A\u0645",
                                    value: subNameval,
                                    optionFilterProp: "children",
                                    filterOption: (input, option) => {
                                      if (option.props.children) {
                                        var _option$props$childre5,
                                          _option$props$childre6;
                                        return (
                                          ((_option$props$childre5 =
                                            option.props.children) === null ||
                                          _option$props$childre5 === void 0
                                            ? void 0
                                            : (_option$props$childre6 =
                                                _option$props$childre5.toLowerCase()) ===
                                                null ||
                                              _option$props$childre6 === void 0
                                            ? void 0
                                            : _option$props$childre6.indexOf(
                                                Object(
                                                  _common_common_func__WEBPACK_IMPORTED_MODULE_16__[
                                                    "convertToArabic"
                                                  ]
                                                )(input.toLowerCase())
                                              )) != -1
                                        );
                                      } else {
                                        return false;
                                      }
                                    },
                                  },
                                  subDivNames
                                    //.slice(0, 100)
                                    .map((e, i) =>
                                      /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                        Option,
                                        {
                                          key: i,
                                          value:
                                            e.attributes.SUBDIVISION_SPATIAL_ID,
                                        },
                                        " ",
                                        e.attributes.SUBDIVISION_DESCRIPTION
                                      )
                                    )
                                ),
                                /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                  antd_lib_select__WEBPACK_IMPORTED_MODULE_13___default.a,
                                  {
                                    getPopupContainer: (trigger) =>
                                      trigger.parentNode,
                                    autoFocus: true,
                                    onChange: (val) => {
                                      Object(
                                        _common__WEBPACK_IMPORTED_MODULE_35__[
                                          "onBlockChange"
                                        ]
                                      )(this, val);
                                    },
                                    showSearch: true,
                                    disabled: !blockNum.length,
                                    value: blockval,
                                    placeholder:
                                      "\u0631\u0642\u0645 \u0627\u0644\u0628\u0644\u0643",
                                    optionFilterProp: "children",
                                    filterOption: (input, option) => {
                                      if (option.props.children) {
                                        var _option$props$childre7,
                                          _option$props$childre8;
                                        return (
                                          ((_option$props$childre7 =
                                            option.props.children) === null ||
                                          _option$props$childre7 === void 0
                                            ? void 0
                                            : (_option$props$childre8 =
                                                _option$props$childre7.toLowerCase()) ===
                                                null ||
                                              _option$props$childre8 === void 0
                                            ? void 0
                                            : _option$props$childre8.indexOf(
                                                Object(
                                                  _common_common_func__WEBPACK_IMPORTED_MODULE_16__[
                                                    "convertToArabic"
                                                  ]
                                                )(input.toLowerCase())
                                              )) != -1
                                        );
                                      } else {
                                        return false;
                                      }
                                    },
                                  },
                                  blockNum
                                    //.slice(0, 100)
                                    .map((e, i) =>
                                      /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                        Option,
                                        {
                                          key: i,
                                          value: e.attributes.BLOCK_SPATIAL_ID,
                                        },
                                        Object(
                                          _common_common_func__WEBPACK_IMPORTED_MODULE_16__[
                                            "convertToArabic"
                                          ]
                                        )(e.attributes.BLOCK_NO)
                                      )
                                    )
                                ),
                                /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                  antd_lib_select__WEBPACK_IMPORTED_MODULE_13___default.a,
                                  {
                                    // onBlur={() => {
                                    //   clearGraphicFromLayer(this.map, "SelectGraphicLayer");
                                    // }}
                                    getPopupContainer: (trigger) =>
                                      trigger.parentNode,
                                    autoFocus: true,
                                    onFocus: () => {
                                      //clearGraphicFromLayer(this.map, "SelectLandsGraphicLayer");
                                      if (!this.state["parcelId"]) {
                                        Object(
                                          _common_common_func__WEBPACK_IMPORTED_MODULE_16__[
                                            "highlightFeature"
                                          ]
                                        )(
                                          parcelNum.filter((e, i) => {
                                            if (parcelSearch) {
                                              if (
                                                this.state.selectedLands.length
                                              ) {
                                                return !this.state.selectedLands.find(
                                                  (tt) =>
                                                    tt.attributes
                                                      .PARCEL_SPATIAL_ID ==
                                                    e.attributes
                                                      .PARCEL_SPATIAL_ID
                                                );
                                              } else {
                                                return (
                                                  e.attributes.PARCEL_PLAN_NO &&
                                                  e.attributes.PARCEL_PLAN_NO.toLowerCase().indexOf(
                                                    parcelSearch.toLowerCase()
                                                  ) >= 0
                                                );
                                              }
                                            } else {
                                              if (selectedLands.length) {
                                                return (
                                                  !selectedLands.find(
                                                    (tt) =>
                                                      tt.attributes
                                                        .PARCEL_PLAN_NO ==
                                                      e.attributes
                                                        .PARCEL_PLAN_NO
                                                  ) &&
                                                  e.attributes.PARCEL_PLAN_NO
                                                );
                                              } else {
                                                return e.attributes
                                                  .PARCEL_PLAN_NO;
                                              }
                                            }
                                          }),
                                          // .slice(0, 100),
                                          this.map,
                                          {
                                            layerName: "SelectGraphicLayer",
                                            noclear: false,
                                            isZoom: false,
                                            isHiglightSymbol: true,
                                            highlighColor: [0, 255, 0, 0.5],
                                            attr: true,
                                          }
                                        );
                                      }
                                    },
                                    onChange: (val) => {
                                      Object(
                                        _common__WEBPACK_IMPORTED_MODULE_35__[
                                          "onLandParcelChange"
                                        ]
                                      )(this, val);
                                    },
                                    showSearch: true,
                                    disabled: parcelNum && !parcelNum.length,
                                    onSearch: (e) => {
                                      this.setState({
                                        parcelSearch: e,
                                      });
                                      Object(
                                        _common__WEBPACK_IMPORTED_MODULE_35__[
                                          "onSearch"
                                        ]
                                      )(this, e);
                                    },
                                    filterOption: (input, option) => {
                                      if (option.props.children) {
                                        var _option$props$childre9,
                                          _option$props$childre10;
                                        return (
                                          ((_option$props$childre9 =
                                            option.props.children) === null ||
                                          _option$props$childre9 === void 0
                                            ? void 0
                                            : (_option$props$childre10 =
                                                _option$props$childre9.toLowerCase()) ===
                                                null ||
                                              _option$props$childre10 === void 0
                                            ? void 0
                                            : _option$props$childre10.indexOf(
                                                Object(
                                                  _common_common_func__WEBPACK_IMPORTED_MODULE_16__[
                                                    "convertToArabic"
                                                  ]
                                                )(input.toLowerCase())
                                              )) != -1
                                        );
                                      } else {
                                        return false;
                                      }
                                    },
                                    value: parcelval,
                                    placeholder:
                                      "\u0631\u0642\u0645 \u0642\u0637\u0639\u0629 \u0627\u0644\u0627\u0631\u0636",
                                  },
                                  parcelNum &&
                                    parcelNum
                                      .filter((e, i) => {
                                        if (parcelSearch) {
                                          if (this.state.selectedLands.length) {
                                            return !this.state.selectedLands.find(
                                              (tt) =>
                                                tt.attributes
                                                  .PARCEL_SPATIAL_ID ==
                                                e.attributes.PARCEL_SPATIAL_ID
                                            );
                                          } else {
                                            return (
                                              e.attributes.PARCEL_PLAN_NO &&
                                              e.attributes.PARCEL_PLAN_NO.toLowerCase().indexOf(
                                                parcelSearch.toLowerCase()
                                              ) >= 0
                                            );
                                          }
                                        } else {
                                          if (selectedLands.length) {
                                            return (
                                              !selectedLands.find(
                                                (tt) =>
                                                  tt.attributes
                                                    .PARCEL_PLAN_NO ==
                                                  e.attributes.PARCEL_PLAN_NO
                                              ) && e.attributes.PARCEL_PLAN_NO
                                            );
                                          } else {
                                            return e.attributes.PARCEL_PLAN_NO;
                                          }
                                        }
                                      })
                                      .slice(0, 100)
                                      .map((e, i) => {
                                        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                          Option,
                                          {
                                            onMouseEnter: this.LandHoverOn.bind(
                                              this,
                                              e
                                            ),
                                            onMouseLeave:
                                              this.LandHoverOff.bind(this, e),
                                            key: e.attributes.PARCEL_SPATIAL_ID,
                                            value: e.i,
                                          },
                                          Object(
                                            _common_common_func__WEBPACK_IMPORTED_MODULE_16__[
                                              "localizeNumber"
                                            ]
                                          )(e.attributes.PARCEL_PLAN_NO)
                                        );
                                      })
                                ),
                                /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                  antd_lib_button__WEBPACK_IMPORTED_MODULE_10___default.a,
                                  {
                                    className: "add-gis",
                                    disabled:
                                      !this.state.parcelId || parcelBtnDisabled,
                                    onClick: this.OnParcelSelect,
                                  },
                                  "\u0625\u0636\u0627\u0641\u0629 \u0627\u0644\u0623\u0631\u0636"
                                )
                              )
                            : /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                react__WEBPACK_IMPORTED_MODULE_14___default.a
                                  .Fragment,
                                null,
                                /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                  _FilterComponentInvest__WEBPACK_IMPORTED_MODULE_32__[
                                    "default"
                                  ],
                                  {
                                    map: this.map,
                                    setSelectMapLayer: this.setSelectMapLayer,
                                    searchLayer:
                                      mainObject.investType.invest_type
                                        .SelectedLayer,
                                    addFeature: this.addFeature,
                                  }
                                )
                              )
                        ),
                        /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                          react_bootstrap__WEBPACK_IMPORTED_MODULE_20__["Tab"],
                          {
                            eventKey: "coords",
                            title:
                              "\u0628\u062D\u062B \u0628\u0627\u0644\u0625\u062D\u062F\u0627\u062B\u064A\u0627\u062A",
                            style: {
                              marginTop: "30px",
                            },
                          },
                          /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                            react_bootstrap__WEBPACK_IMPORTED_MODULE_20__[
                              "Tabs"
                            ],
                            {
                              defaultActiveKey: "decimal",
                              className: "",
                            },
                            /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                              react_bootstrap__WEBPACK_IMPORTED_MODULE_20__[
                                "Tab"
                              ],
                              {
                                eventKey: "deg",
                                title:
                                  "\u062F\u0631\u062C\u0627\u062A-\u062F\u0642\u0627\u0626\u0642-\u062B\u0648\u0627\u0646\u064A",
                              },
                              /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                antd_lib_form__WEBPACK_IMPORTED_MODULE_6___default.a,
                                {
                                  onFinish: this.onPublicUserDegreesSubmit,
                                  className: "coordinateForm",
                                  layout: "vertical",
                                  name: "validate_other",
                                },
                                /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                  react_bootstrap__WEBPACK_IMPORTED_MODULE_20__[
                                    "Container"
                                  ],
                                  {
                                    fluid: true,
                                  },
                                  /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                    "h5",
                                    {
                                      className: "mt-4 mr-1",
                                    },
                                    "\u062F\u0648\u0627\u0626\u0631 \u0627\u0644\u0639\u0631\u0636"
                                  ),
                                  /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                    antd_lib_row__WEBPACK_IMPORTED_MODULE_2___default.a,
                                    null,
                                    /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                      antd_lib_col__WEBPACK_IMPORTED_MODULE_4___default.a,
                                      {
                                        span: 7,
                                        className: "mr-1 ml-2",
                                      },
                                      /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                        antd_lib_form__WEBPACK_IMPORTED_MODULE_6___default
                                          .a.Item,
                                        {
                                          rules: [
                                            {
                                              message: "اختر الدرجة",
                                              required: true,
                                            },
                                          ],
                                          name: "latitudeDeg",

                                          // help="Should be combination of numbers & alphabets"
                                        },
                                        /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                          antd_lib_input__WEBPACK_IMPORTED_MODULE_8___default.a,
                                          {
                                            // type="number"
                                            name: "latitudeDeg",
                                            onChange: this.handleChange,
                                            value: formValues.latitudeDeg,
                                            placeholder:
                                              "\u062F\u0631\u062C\u0627\u062A",
                                          }
                                        )
                                      )
                                    ),
                                    /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                      antd_lib_col__WEBPACK_IMPORTED_MODULE_4___default.a,
                                      {
                                        span: 7,
                                        className: "mr-1",
                                      },
                                      /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                        antd_lib_form__WEBPACK_IMPORTED_MODULE_6___default
                                          .a.Item,
                                        {
                                          rules: [
                                            {
                                              message: "اختر الدقيقة",
                                              required: true,
                                            },
                                          ],
                                          name: "latitudeMinutes",

                                          // help="Should be combination of numbers & alphabets"
                                        },
                                        /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                          antd_lib_input__WEBPACK_IMPORTED_MODULE_8___default.a,
                                          {
                                            // type="number"
                                            name: "latitudeMinutes",
                                            onChange: this.handleChange,
                                            value: formValues.latitudeMinutes,
                                            placeholder:
                                              "\u062F\u0642\u0627\u0626\u0642",
                                          }
                                        )
                                      )
                                    ),
                                    /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                      antd_lib_col__WEBPACK_IMPORTED_MODULE_4___default.a,
                                      {
                                        span: 8,
                                      },
                                      /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                        antd_lib_form__WEBPACK_IMPORTED_MODULE_6___default
                                          .a.Item,
                                        {
                                          name: "latitudeSeconds",
                                          rules: [
                                            {
                                              message: "إختر الثانية",
                                              required: true,
                                            },
                                          ],
                                          // help="Should be combination of numbers & alphabets"
                                        },
                                        /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                          antd_lib_input__WEBPACK_IMPORTED_MODULE_8___default.a,
                                          {
                                            // type="number"
                                            name: "latitudeSeconds",
                                            onChange: this.handleChange,
                                            value: formValues.latitudeSeconds,
                                            placeholder:
                                              "\u062B\u0648\u0627\u0646\u064A",
                                          }
                                        )
                                      )
                                    )
                                  ),
                                  /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                    "h5",
                                    {
                                      className: "mt-4 mr-1",
                                    },
                                    "\u062E\u0637 \u0627\u0644\u0637\u0648\u0644"
                                  ),
                                  /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                    antd_lib_row__WEBPACK_IMPORTED_MODULE_2___default.a,
                                    null,
                                    /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                      antd_lib_col__WEBPACK_IMPORTED_MODULE_4___default.a,
                                      {
                                        span: 7,
                                        className: "mr-1 ml-2",
                                      },
                                      /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                        antd_lib_form__WEBPACK_IMPORTED_MODULE_6___default
                                          .a.Item,
                                        {
                                          name: "longitudeDeg",
                                          rules: [
                                            {
                                              message: "اختر الدرجة",
                                              required: true,
                                            },
                                          ],
                                        },
                                        /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                          antd_lib_input__WEBPACK_IMPORTED_MODULE_8___default.a,
                                          {
                                            // type="number"
                                            name: "longitudeDeg",
                                            onChange: this.handleChange,
                                            value: formValues.longitudeDeg,
                                            placeholder:
                                              "\u062F\u0631\u062C\u0627\u062A",
                                          }
                                        )
                                      )
                                    ),
                                    /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                      antd_lib_col__WEBPACK_IMPORTED_MODULE_4___default.a,
                                      {
                                        span: 7,
                                        className: "mr-1",
                                      },
                                      /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                        antd_lib_form__WEBPACK_IMPORTED_MODULE_6___default
                                          .a.Item,
                                        {
                                          name: "longitudeMinutes",
                                          rules: [
                                            {
                                              message: "اختر الدقيقة",
                                              required: true,
                                            },
                                          ],
                                          // help="Should be combination of numbers & alphabets"
                                        },
                                        /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                          antd_lib_input__WEBPACK_IMPORTED_MODULE_8___default.a,
                                          {
                                            // type="number"
                                            name: "longitudeMinutes",
                                            onChange: this.handleChange,
                                            value: formValues.longitudeMinutes,
                                            placeholder:
                                              "\u062F\u0642\u0627\u0626\u0642",
                                          }
                                        )
                                      )
                                    ),
                                    /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                      antd_lib_col__WEBPACK_IMPORTED_MODULE_4___default.a,
                                      {
                                        span: 8,
                                      },
                                      /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                        antd_lib_form__WEBPACK_IMPORTED_MODULE_6___default
                                          .a.Item,
                                        {
                                          name: "longitudeSeconds",
                                          rules: [
                                            {
                                              message: "اختر الثواني",
                                              required: true,
                                            },
                                          ],

                                          // help="Should be combination of numbers & alphabets"
                                        },
                                        /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                          antd_lib_input__WEBPACK_IMPORTED_MODULE_8___default.a,
                                          {
                                            // type="number"
                                            name: "longitudeSeconds",
                                            onChange: this.handleChange,
                                            value: formValues.longitudeSeconds,
                                            placeholder:
                                              "\u062B\u0648\u0627\u0646\u064A",
                                          }
                                        )
                                      )
                                    )
                                  ),
                                  /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                    "div",
                                    {
                                      style: {
                                        textAlign: "center",
                                      },
                                    },
                                    /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                      antd_lib_button__WEBPACK_IMPORTED_MODULE_10___default.a,
                                      {
                                        style: {
                                          float: "inherit",
                                          width: "60%",
                                        },
                                        className: "add-gis",
                                        size: "large",
                                        htmlType: "submit",
                                        onClick: this.degSearch,
                                      },
                                      "\u0628\u062D\u062B"
                                    )
                                  )
                                )
                              )
                            ),
                            /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                              react_bootstrap__WEBPACK_IMPORTED_MODULE_20__[
                                "Tab"
                              ],
                              {
                                eventKey: "decimal",
                                title:
                                  "\u0625\u062D\u062F\u0627\u062B\u064A\u0627\u062A \u0639\u0634\u0631\u064A\u0629",
                              },
                              /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                antd_lib_form__WEBPACK_IMPORTED_MODULE_6___default.a,
                                {
                                  onFinish: this.onPublicUserDecimalSubmit,
                                  className: "coordinateForm",
                                  layout: "vertical",
                                  name: "validate_other",
                                },
                                /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                  react_bootstrap__WEBPACK_IMPORTED_MODULE_20__[
                                    "Container"
                                  ],
                                  null,
                                  /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                    antd_lib_row__WEBPACK_IMPORTED_MODULE_2___default.a,
                                    null,
                                    /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                      antd_lib_col__WEBPACK_IMPORTED_MODULE_4___default.a,
                                      {
                                        span: 24,
                                        className: "",
                                      },
                                      /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                        "h5",
                                        {
                                          className: "mt-4 ",
                                        },
                                        "\u062F\u0648\u0627\u0626\u0631 \u0627\u0644\u0639\u0631\u0636"
                                      ),
                                      /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                        antd_lib_form__WEBPACK_IMPORTED_MODULE_6___default
                                          .a.Item,
                                        {
                                          name: "latitude",
                                          rules: [
                                            {
                                              message: "اختر دوائر العرض",
                                              required: true,
                                            },
                                          ],
                                        },
                                        /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                          antd_lib_input__WEBPACK_IMPORTED_MODULE_8___default.a,
                                          {
                                            // type="number"
                                            name: "latitude",
                                            onChange: this.handleChange,
                                            value: formValues.latitude,
                                            placeholder: "ex: 26.xxxxxx",
                                          }
                                        )
                                      )
                                    ),
                                    /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                      antd_lib_col__WEBPACK_IMPORTED_MODULE_4___default.a,
                                      {
                                        span: 24,
                                        className: "",
                                      },
                                      /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                        "h5",
                                        {
                                          className: "mt-2",
                                        },
                                        "\u062E\u0637 \u0627\u0644\u0637\u0648\u0644"
                                      ),
                                      /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                        antd_lib_form__WEBPACK_IMPORTED_MODULE_6___default
                                          .a.Item,
                                        {
                                          rules: [
                                            {
                                              message: "اختر خط الطول",
                                              required: true,
                                            },
                                          ],
                                          name: "longitude",
                                        },
                                        /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                          antd_lib_input__WEBPACK_IMPORTED_MODULE_8___default.a,
                                          {
                                            // type="number"
                                            name: "longitude",
                                            onChange: this.handleChange,
                                            value: formValues.longitude,
                                            placeholder: "ex: 50.xxxxxx",
                                          }
                                        )
                                      )
                                    )
                                  ),
                                  /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                    "div",
                                    {
                                      style: {
                                        textAlign: "center",
                                      },
                                    },
                                    /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                      antd_lib_button__WEBPACK_IMPORTED_MODULE_10___default.a,
                                      {
                                        style: {
                                          float: "inherit",
                                          width: "60%",
                                        },
                                        onClick: this.CoordinateSearch,
                                        className: "add-gis",
                                        size: "large",
                                        htmlType: "submit",
                                      },
                                      "\u0628\u062D\u062B"
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )) ||
                    /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                      "div",
                      {
                        style: {
                          direction: "ltr",
                        },
                      },
                      /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                        antd_lib_button__WEBPACK_IMPORTED_MODULE_10___default.a,
                        {
                          className: "add-gis",
                          onClick: this.exportCad,
                        },
                        "\u0627\u0633\u062A\u062E\u0631\u0627\u062C \u0645\u0644\u0641 \u0643\u0627\u062F"
                      )
                    )
                ),
                /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                  "div",
                  null,
                  /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                    react_sticky__WEBPACK_IMPORTED_MODULE_27__[
                      "StickyContainer"
                    ],
                    {
                      style: {
                        direction: "ltr",
                      },
                    },
                    /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                      react_sticky__WEBPACK_IMPORTED_MODULE_27__["Sticky"],
                      {
                        bottomOffset: 80,
                      },
                      ({ style }) =>
                        /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                          _MapBtnsComponent__WEBPACK_IMPORTED_MODULE_22__[
                            "default"
                          ],
                          _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default()(
                            {
                              style: style,
                            },
                            this.props
                          )
                        )
                    )
                  ),
                  /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                    "div",
                    null,
                    /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                      _MapComponent_MapComponent__WEBPACK_IMPORTED_MODULE_21__[
                        "default"
                      ],
                      _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default()(
                        {
                          mapload: this.mapLoaded.bind(this),
                        },
                        this.props
                      )
                    )
                  )
                )
              ),
              mapLoaded &&
                /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                  "div",
                  {
                    style: {
                      gridColumn: "1/3",
                    },
                  },
                  /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                    "div",
                    {
                      style: {
                        textAlign: "end",
                        marginTop: "10px",
                      },
                    },
                    selectedFeaturesOnMap && selectedFeaturesOnMap.length
                      ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                          antd_lib_button__WEBPACK_IMPORTED_MODULE_10___default.a,
                          {
                            onClick: this.addSelectedFeaturesFromMap.bind(this),
                            className: "add_mktab toolsBtnStyle addFromMapbtn",
                            type: "primary",
                            icon: "plus",
                          },
                          "\u0625\u0636\u0627\u0641\u0629 \u0627\u0644\u0623\u0631\u0627\u0636\u064A \u0627\u0644\u0645\u062D\u062F\u062F\u0629"
                        )
                      : /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                          "div",
                          null
                        )
                  ),
                  selectedLands &&
                    selectedLands.length > 0 &&
                    /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                      "div",
                      null,
                      /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                        "h1",
                        {
                          className: "titleSelectedParcel",
                        },
                        "\u0627\u0644\u0623\u0631\u0627\u0636\u064A \u0627\u0644\u0645\u062E\u062A\u0627\u0631\u0629"
                      ),
                      /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                        "table",
                        {
                          className: "table table-bordered",
                          style: {
                            marginTop: "1%",
                          },
                        },
                        /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                          "thead",
                          null,
                          /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                            "tr",
                            null,
                            this.parcel_fields_headers.map(
                              (field_header, k) => {
                                return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                  "th",
                                  null,
                                  field_header
                                );
                              }
                            ),
                            /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                              "th",
                              null,
                              " \u062E\u064A\u0627\u0631\u0627\u062A"
                            )
                          )
                        ),
                        /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                          "tbody",
                          null,
                          selectedLands.map((e, i) => {
                            return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                              "tr",
                              {
                                key: i,
                              },
                              this.parcel_fields.map((field, k) => {
                                return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                  "td",
                                  {
                                    key: k,
                                  },
                                  /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                    "div",
                                    null,
                                    field.editable
                                      ? !this.state[field.name + "_isEdit_" + i]
                                        ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                            "span",
                                            null,
                                            /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                              "span",
                                              null,
                                              Object(
                                                _common_common_func__WEBPACK_IMPORTED_MODULE_16__[
                                                  "localizeNumber"
                                                ]
                                              )(e.attributes[field.name] || "")
                                            ),
                                            this.showEditBtn(
                                              field.name,
                                              e.attributes[field.name]
                                            ) &&
                                              /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                                "span",
                                                null,
                                                /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                                  "button",
                                                  {
                                                    className: "btn",
                                                    style: {
                                                      marginRight: e.attributes[
                                                        field.name
                                                      ]
                                                        ? "20px"
                                                        : "0px",
                                                    },
                                                    onClick:
                                                      this.enableEdit.bind(
                                                        this,
                                                        field.name,
                                                        i
                                                      ),
                                                  },
                                                  /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                                    "i",
                                                    {
                                                      className: "fas fa-edit",
                                                    }
                                                  )
                                                )
                                              )
                                          )
                                        : /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                            "span",
                                            {
                                              style: {
                                                display: "grid",
                                                gridTemplateColumns: "1fr auto",
                                              },
                                            },
                                            field.type != "select" &&
                                              field.type != "button" &&
                                              /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                                "input",
                                                {
                                                  key: i,
                                                  className: "form-control",
                                                  type: field.type,
                                                  step: "any",
                                                  value:
                                                    e.attributes[field.name],
                                                  onChange:
                                                    this.myChangeHandler.bind(
                                                      this,
                                                      field.name,
                                                      i,
                                                      e
                                                    ),
                                                }
                                              ),
                                            field.type == "select" &&
                                              /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                                antd_lib_select__WEBPACK_IMPORTED_MODULE_13___default.a,
                                                {
                                                  getPopupContainer: (
                                                    trigger
                                                  ) => trigger.parentNode,
                                                  autoFocus: true,
                                                  value:
                                                    e.attributes[field.name],
                                                  onChange:
                                                    this.selectOnchange.bind(
                                                      this,
                                                      field.name,
                                                      i,
                                                      e
                                                    ),
                                                  placeholder:
                                                    "\u0627\u0644\u0646\u0634\u0627\u0637 \u0627\u0644\u0645\u0642\u062A\u0631\u062D",
                                                  optionFilterProp: "children",
                                                  filterOption: (
                                                    input,
                                                    option
                                                  ) => {
                                                    var _convertToEnglish,
                                                      _convertToEnglish$toL;
                                                    return (
                                                      ((_convertToEnglish =
                                                        Object(
                                                          _common_common_func__WEBPACK_IMPORTED_MODULE_16__[
                                                            "convertToEnglish"
                                                          ]
                                                        )(
                                                          option.props.children
                                                        )) === null ||
                                                      _convertToEnglish ===
                                                        void 0
                                                        ? void 0
                                                        : (_convertToEnglish$toL =
                                                            _convertToEnglish.toLowerCase()) ===
                                                            null ||
                                                          _convertToEnglish$toL ===
                                                            void 0
                                                        ? void 0
                                                        : _convertToEnglish$toL.indexOf(
                                                            input.toLowerCase()
                                                          )) >= 0
                                                    );
                                                  },
                                                },
                                                field.options.map((e, i) =>
                                                  /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                                    Option,
                                                    {
                                                      key: i,
                                                      value: e.name,
                                                    },
                                                    Object(
                                                      _common_common_func__WEBPACK_IMPORTED_MODULE_16__[
                                                        "convertToArabic"
                                                      ]
                                                    )(e.name)
                                                  )
                                                )
                                              ),
                                            /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                              "button",
                                              {
                                                className: "btn",
                                                style: {
                                                  marginRight: "20px",
                                                },
                                                onClick: this.saveEdit.bind(
                                                  this,
                                                  mainObject.investType
                                                    .invest_type
                                                    .SelectedLayer ==
                                                    "Invest_Site_Polygon"
                                                    ? e.attributes
                                                        .SITE_GEOSPATIAL_ID
                                                    : e.attributes
                                                        .PARCEL_SPATIAL_ID,
                                                  field.name,
                                                  i
                                                ),
                                              },
                                              /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                                "i",
                                                {
                                                  className: "fa fa-floppy-o",
                                                }
                                              )
                                            )
                                          )
                                      : /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                          "span",
                                          null,
                                          field.type == "button"
                                            ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                                "button",
                                                {
                                                  className: "btn btn-primary",
                                                  style: {
                                                    marginRight: "20px",
                                                  },
                                                  onClick:
                                                    this.showGoogleLink.bind(
                                                      this,
                                                      e.attributes.googleLink
                                                    ),
                                                },
                                                "\u0639\u0631\u0636"
                                              )
                                            : /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                                "span",
                                                null,
                                                Object(
                                                  _common_common_func__WEBPACK_IMPORTED_MODULE_16__[
                                                    "localizeNumber"
                                                  ]
                                                )(
                                                  e.attributes[field.name] || ""
                                                )
                                              )
                                        )
                                  )
                                );
                              }),
                              !this.props.isView
                                ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                    "td",
                                    null,
                                    /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                      "div",
                                      null,
                                      /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                        "button",
                                        {
                                          className: "btn btn-danger",
                                          onClick: this.remove.bind(this, e),
                                        },
                                        "\u062D\u0630\u0641"
                                      ),
                                      /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                        antd_lib_button__WEBPACK_IMPORTED_MODULE_10___default.a,
                                        {
                                          className: "toolsBtnStyle",
                                          style: {
                                            margin: "auto 1px",
                                          },
                                          size: "large",
                                          onClick: this.zoomToFeature.bind(
                                            this,
                                            e
                                          ),
                                        },
                                        /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                          _fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_33__[
                                            "FontAwesomeIcon"
                                          ],
                                          {
                                            icon: _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_28__[
                                              "faSearchPlus"
                                            ],
                                            className: "",
                                          }
                                        )
                                      )
                                    )
                                  )
                                : /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                    "td",
                                    null,
                                    /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                      antd_lib_button__WEBPACK_IMPORTED_MODULE_10___default.a,
                                      {
                                        className: "toolsBtnStyle",
                                        style: {
                                          margin: "auto 1px",
                                        },
                                        size: "large",
                                        onClick: this.zoomToFeature.bind(
                                          this,
                                          e
                                        ),
                                      },
                                      /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(
                                        _fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_33__[
                                          "FontAwesomeIcon"
                                        ],
                                        {
                                          icon: _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_28__[
                                            "faSearchPlus"
                                          ],
                                          className: "",
                                        }
                                      )
                                    )
                                  )
                            );
                          })
                        )
                      )
                    )
                )
            );
          }
        }
        /* harmony default export */ __webpack_exports__["default"] = Object(
          react_redux__WEBPACK_IMPORTED_MODULE_25__["connect"]
        )(
          _mapping__WEBPACK_IMPORTED_MODULE_23__["mapStateToProps"],
          appMapDispatchToProps
        )(
          Object(react_i18next__WEBPACK_IMPORTED_MODULE_18__["translate"])(
            "labels"
          )(InvestIdentifyComponnent)
        );

        /***/
      },
  },
]);
//# sourceMappingURL=53.min.js.map
