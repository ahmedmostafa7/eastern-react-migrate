(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[66],{

/***/ "./src/app/components/inputs/fields/identify/Component/IdentifyComponnent/Helpers.js":
/*!*******************************************************************************************!*\
  !*** ./src/app/components/inputs/fields/identify/Component/IdentifyComponnent/Helpers.js ***!
  \*******************************************************************************************/
/*! exports provided: selectDis, DataQuery, queryOption, querySetting, DataReqest */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectDis", function() { return selectDis; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DataQuery", function() { return DataQuery; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryOption", function() { return queryOption; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "querySetting", function() { return querySetting; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DataReqest", function() { return DataReqest; });
/* harmony import */ var esri_loader__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! esri-loader */ "./node_modules/esri-loader/dist/umd/esri-loader.js");
/* harmony import */ var esri_loader__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(esri_loader__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _mapviewer_config_map__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../mapviewer/config/map */ "./src/app/components/inputs/fields/identify/Component/mapviewer/config/map.js");


const options = {
  url: 'https://js.arcgis.com/3.13'
};
const selectDis = e => {
  var a = [];
  e.forEach(el => {
    el.features.forEach(element => {
      if (!a.find(t => t.attributes.PARCEL_SPATIAL_ID == element.attributes.PARCEL_SPATIAL_ID)) {
        a.push(element);
      }
    });
  });
  return a;
};
const DataQuery = (layerNum, QueryOptions, CallBack) => {
  Object(esri_loader__WEBPACK_IMPORTED_MODULE_0__["loadModules"])(["esri/symbols/SimpleLineSymbol", "esri/Color", "esri/layers/FeatureLayer", "esri/tasks/RelationshipQuery", "esri/tasks/QueryTask", "esri/tasks/query", "esri/request", "esri/geometry/Polygon", "esri/symbols/SimpleFillSymbol", "esri/graphic"], options).then(([SimpleLineSymbol, Color, FeatureLayer, RQuery, QueryTask, Query, request, Polygon, SimpleFillSymbol, Graphic]) => {
    var query = new Query();
    var qt = new QueryTask(_mapviewer_config_map__WEBPACK_IMPORTED_MODULE_1__["mapUrl"] + `/${layerNum}`);
    QueryOptions.forEach(e => {
      query[e.name] = e.value;
    });
    qt.execute(query, CallBack, res => {
      console.log(res);
    });
  });
};
const queryOption = (where, geo, outfields) => {
  return [{
    name: "where",
    value: where
  }, {
    name: "returnGeometry",
    value: geo
  }, {
    name: "outFields",
    value: outfields
  }];
};
const querySetting = (num, where, geo, outfields, url) => {
  return {
    url: (url || _mapviewer_config_map__WEBPACK_IMPORTED_MODULE_1__["mapUrl"]) + "/" + num,
    where,
    returnGeometry: geo,
    outFields: outfields
  };
};
const DataReqest = (url, callBack) => {
  Object(esri_loader__WEBPACK_IMPORTED_MODULE_0__["loadModules"])(["esri/request"], options).then(([request]) => {
    request({
      url: url,
      content: {
        f: "json"
      },
      handleAs: "json",
      callbackParamName: "callback"
    }).then(callBack);
  });
};

/***/ }),

/***/ "./src/app/components/inputs/fields/identify/Component/IdentifyComponnent/index.js":
/*!*****************************************************************************************!*\
  !*** ./src/app/components/inputs/fields/identify/Component/IdentifyComponnent/index.js ***!
  \*****************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var antd_lib_form_style__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antd/lib/form/style */ "./node_modules/antd/lib/form/style/index.js");
/* harmony import */ var antd_lib_form_style__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(antd_lib_form_style__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var antd_lib_form__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! antd/lib/form */ "./node_modules/antd/lib/form/index.js");
/* harmony import */ var antd_lib_form__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(antd_lib_form__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var antd_lib_button_style__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! antd/lib/button/style */ "./node_modules/antd/lib/button/style/index.js");
/* harmony import */ var antd_lib_button_style__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(antd_lib_button_style__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var antd_lib_button__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! antd/lib/button */ "./node_modules/antd/lib/button/index.js");
/* harmony import */ var antd_lib_button__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(antd_lib_button__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/extends.js");
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var antd_lib_select_style__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! antd/lib/select/style */ "./node_modules/antd/lib/select/style/index.js");
/* harmony import */ var antd_lib_select_style__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(antd_lib_select_style__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var antd_lib_select__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! antd/lib/select */ "./node_modules/antd/lib/select/index.js");
/* harmony import */ var antd_lib_select__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(antd_lib_select__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var lodash_slice__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! lodash/slice */ "./node_modules/lodash/slice.js");
/* harmony import */ var lodash_slice__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(lodash_slice__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var _common_esri_request__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../common/esri_request */ "./src/app/components/inputs/fields/identify/Component/common/esri_request.js");
/* harmony import */ var _common_common_func__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../common/common_func */ "./src/app/components/inputs/fields/identify/Component/common/common_func.js");
/* harmony import */ var _main_helpers_functions_filters__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../../../../../main_helpers/functions/filters */ "./src/main_helpers/functions/filters/index.js");
/* harmony import */ var _mapviewer_config_map__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../mapviewer/config/map */ "./src/app/components/inputs/fields/identify/Component/mapviewer/config/map.js");
/* harmony import */ var antd_dist_antd_css__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! antd/dist/antd.css */ "./node_modules/antd/dist/antd.css");
/* harmony import */ var antd_dist_antd_css__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(antd_dist_antd_css__WEBPACK_IMPORTED_MODULE_14__);
/* harmony import */ var _MapComponent_MapComponent__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../MapComponent/MapComponent */ "./src/app/components/inputs/fields/identify/Component/MapComponent/MapComponent.js");
/* harmony import */ var _MapBtnsComponent__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../MapBtnsComponent */ "./src/app/components/inputs/fields/identify/Component/MapBtnsComponent/index.js");
/* harmony import */ var _mapping__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../mapping */ "./src/app/components/inputs/fields/identify/Component/mapping.js");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var _Helpers__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./Helpers */ "./src/app/components/inputs/fields/identify/Component/IdentifyComponnent/Helpers.js");
/* harmony import */ var react_sticky__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! react-sticky */ "./node_modules/react-sticky/lib/index.js");
/* harmony import */ var react_sticky__WEBPACK_IMPORTED_MODULE_20___default = /*#__PURE__*/__webpack_require__.n(react_sticky__WEBPACK_IMPORTED_MODULE_20__);
/* harmony import */ var _common_esri_loader__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../common/esri_loader */ "./src/app/components/inputs/fields/identify/Component/common/esri_loader.js");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! axios */ "./node_modules/axios/index.js");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_22___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_22__);
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../common */ "./src/app/components/inputs/fields/identify/Component/common/index.js");




















var uniqid = __webpack_require__(/*! uniqid */ "./node_modules/uniqid/index.js");




const {
  Option
} = antd_lib_select__WEBPACK_IMPORTED_MODULE_7___default.a;
class IdentifyComponent extends react__WEBPACK_IMPORTED_MODULE_9__["Component"] {
  constructor(props) {
    var _props$input, _props$input$value, _props$input$value$su, _props$input2, _props$input2$value, _props$input2$value$s, _props$input3, _props$input3$value, _props$input3$value$s, _props$input4, _props$input4$value, _props$input4$value$s, _props$input5, _props$input5$value, _props$input5$value$s, _props$input6, _props$input6$value, _props$input6$value$s, _props$input7, _props$input7$value, _props$input7$value$s, _props$input8, _props$input8$value, _props$input8$value$s, _props$input$value$su2;
    super(props);
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_5___default()(this, "LayerID", []);
    // onMunChange = (e) => {
    //   //
    //   clearGraphicFromLayer(this.map, "SelectLandsGraphicLayer");
    //   this.setState({
    //     munval: e,
    //     planeval: undefined,
    //     subTypeval: undefined,
    //     subNameval: undefined,
    //     blockval: undefined,
    //     parcelval: undefined,
    //     selectedLands: [],
    //     selectedLandsT: [],
    //     PlanNum: [],
    //     blockNum: [],
    //     subDivNames: [],
    //     subDivType: [],
    //     parcelId: null,
    //     parcelNum: [],
    //     parcelData: this.parcelData,
    //   });
    //   this.planId = null;
    //   queryTask({
    //     ...querySetting(
    //       this.LayerID.Municipality_Boundary,
    //       `MUNICIPALITY_NAME='${e}'`,
    //       true,
    //       ["MUNICIPALITY_NAME"]
    //     ),
    //     callbackResult: (res) => {
    //       this.pol = res.features[0];
    //       highlightFeature(res.features[0], this.map, {
    //         layerName: "SelectGraphicLayer",
    //         isZoom: true,
    //         isHiglightSymbol: true,
    //         highlighColor: [0, 0, 0, 0.25],
    //       });
    //     },
    //   });
    //   queryTask({
    //     ...querySetting(
    //       this.LayerID.Plan_Data,
    //       `MUNICIPALITY_NAME='${e}'`,
    //       false,
    //       ["PLAN_SPATIAL_ID", "PLAN_NO"]
    //     ),
    //     callbackResult: (res) => {
    //       this.setState({
    //         PlanNum: res.features.map((e, i) => {
    //           return {
    //             ...e,
    //             i: uniqid(),
    //           };
    //         }),
    //       });
    //     },
    //   });
    // };
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_5___default()(this, "resetFields", () => {
      this.props.onChange([]);
      this.setState({
        selectedLands: [],
        selectedLandsT: []
      });
    });
    // onPlaneChange = (f) => {
    //   clearGraphicFromLayer(this.map, "SelectLandsGraphicLayer");
    //   var planSpatialId = this.state.PlanNum.filter((m) => m.i == f)?.[0]?.attributes
    //     ?.PLAN_SPATIAL_ID;
    //   this.setState({
    //     plan_no: this.state.PlanNum.filter((m) => m.i == f)?.[0]?.attributes?.PLAN_NO,
    //     planeval: f,
    //     subTypeval: undefined,
    //     subNameval: undefined,
    //     blockval: undefined,
    //     parcelval: undefined,
    //     blockNum: [],
    //     subDivNames: [],
    //     subDivType: [],
    //     parcelId: null,
    //     parcelNum: [],
    //     parcelData: this.parcelData,
    //   });
    //   queryTask({
    //     ...querySetting(
    //       this.LayerID.Plan_Data,
    //       `PLAN_SPATIAL_ID='${planSpatialId}'`,
    //       true,
    //       ["MUNICIPALITY_NAME"]
    //     ),
    //     callbackResult: (res) => {
    //       this.pol = res.features[0];
    //       highlightFeature(res.features[0], this.map, {
    //         layerName: "SelectGraphicLayer",
    //         isZoom: true,
    //         isHiglightSymbol: true,
    //         highlighColor: [0, 0, 0, 0.25],
    //       });
    //       this.planId = planSpatialId;
    //     },
    //   });
    //   queryTask({
    //     ...querySetting(
    //       this.LayerID.Survey_Block,
    //       `PLAN_SPATIAL_ID='${planSpatialId}'`,
    //       false,
    //       ["BLOCK_NO", "BLOCK_SPATIAL_ID"]
    //     ),
    //     callbackResult: (res) => {
    //       this.setState({ blockNum: res.features });
    //     },
    //   });
    //   queryTask({
    //     ...querySetting(
    //       this.LayerID.Landbase_Parcel,
    //       `PLAN_SPATIAL_ID='${planSpatialId}'`,
    //       false,
    //       ["PARCEL_SPATIAL_ID", "PARCEL_PLAN_NO"]
    //     ),
    //     callbackResult: (res) => {
    //       this.setState({
    //         parcelSearch: null,
    //         parcelNum: res.features.map((e, i) => {
    //           return {
    //             ...e,
    //             i,
    //           };
    //         }),
    //       });
    //     },
    //   });
    //   esriRequest(mapUrl + "/" + this.LayerID.Subdivision).then((response) => {
    //     this.setState({ subDivType: response.fields[7].domain.codedValues });
    //   });
    // };
    // onSubTypeChange = (e) => {
    //   clearGraphicFromLayer(this.map, "SelectLandsGraphicLayer");
    //   this.setState({
    //     subType_name: this.state.subDivType.filter((m) => m.code == e)[0].name,
    //     subTypeval: e,
    //     subNameval: undefined,
    //     blockval: undefined,
    //     parcelval: undefined,
    //   });
    //   queryTask({
    //     ...querySetting(
    //       this.LayerID.Subdivision,
    //       `SUBDIVISION_TYPE=${e} AND PLAN_SPATIAL_ID=${this.planId}`,
    //       false,
    //       ["SUBDIVISION_DESCRIPTION", "SUBDIVISION_SPATIAL_ID"]
    //     ),
    //     callbackResult: (res) => {
    //       this.setState({ subDivNames: res.features });
    //     },
    //   });
    // };
    // onSubNameChange = (e) => {
    //   clearGraphicFromLayer(this.map, "SelectLandsGraphicLayer");
    //   this.setState({
    //     subName_name: this.state.subDivNames.filter(
    //       (m) => m.attributes.SUBDIVISION_SPATIAL_ID == e
    //     )?.[0]?.attributes?.SUBDIVISION_DESCRIPTION,
    //     subNameval: e,
    //     blockval: undefined,
    //     parcelval: undefined,
    //     parcelNum: [],
    //     parcelId: null,
    //   });
    //   queryTask({
    //     ...querySetting(
    //       this.LayerID.Subdivision,
    //       `SUBDIVISION_SPATIAL_ID=${e}`,
    //       true,
    //       ["SUBDIVISION_SPATIAL_ID"]
    //     ),
    //     callbackResult: (res) => {
    //       this.pol = res.features[0];
    //       highlightFeature(res.features[0], this.map, {
    //         layerName: "SelectGraphicLayer",
    //         isZoom: true,
    //         isHiglightSymbol: true,
    //         highlighColor: [0, 0, 0, 0.25],
    //       });
    //     },
    //   });
    //   queryTask({
    //     ...querySetting(
    //       this.LayerID.Landbase_Parcel,
    //       `SUBDIVISION_SPATIAL_ID=${e}`,
    //       false,
    //       ["PARCEL_SPATIAL_ID", "PARCEL_PLAN_NO"]
    //     ),
    //     callbackResult: (res) => {
    //       this.setState({
    //         parcelSearch: null,
    //         parcelNum: res.features.map((e, i) => {
    //           return {
    //             ...e,
    //             i,
    //           };
    //         }),
    //       });
    //     },
    //   });
    // };
    // onBlockChange = (e) => {
    //   clearGraphicFromLayer(this.map, "SelectLandsGraphicLayer");
    //   this.setState({
    //     block_no: this.state.blockNum.filter(
    //       (m) => m.attributes.BLOCK_SPATIAL_ID == e
    //     )?.[0]?.attributes?.BLOCK_NO,
    //     blockval: e,
    //     parcelval: undefined,
    //     parcelId: null,
    //     parcelNum: [],
    //   });
    //   queryTask({
    //     ...querySetting(
    //       this.LayerID.Survey_Block,
    //       `BLOCK_SPATIAL_ID=${e}`,
    //       true,
    //       ["BLOCK_SPATIAL_ID"]
    //     ),
    //     callbackResult: (res) => {
    //       this.pol = res.features[0];
    //       highlightFeature(res.features[0], this.map, {
    //         layerName: "SelectGraphicLayer",
    //         isZoom: true,
    //         isHiglightSymbol: true,
    //         highlighColor: [0, 0, 0, 0.25],
    //       });
    //     },
    //   });
    //   queryTask({
    //     ...querySetting(
    //       this.LayerID.Landbase_Parcel,
    //       `BLOCK_SPATIAL_ID=${e}`,
    //       false,
    //       ["PARCEL_SPATIAL_ID", "PARCEL_PLAN_NO"]
    //     ),
    //     callbackResult: (res) => {
    //       this.setState({
    //         parcelSearch: null,
    //         parcelNum: res.features.map((e, i) => {
    //           return {
    //             ...e,
    //             i,
    //           };
    //         }),
    //       });
    //     },
    //   });
    // };
    // onLandParcelChange = (f) => {
    //   if (!this.state.selectedLands.length) {
    //     var e = this.state.parcelNum.filter((m) => m.i === f)?.[0]?.attributes
    //       ?.PARCEL_SPATIAL_ID;
    //     this.setState({ parcelId: e, parcelval: f });
    //     this.RolBackPol = this.pol;
    //     this.RolBackParcelNum = this.state.parcelNum;
    //     queryTask({
    //       ...querySetting(
    //         this.LayerID.Landbase_Parcel,
    //         `PARCEL_SPATIAL_ID='${e}'`,
    //         true,
    //         ["PARCEL_SPATIAL_ID"]
    //       ),
    //       callbackResult: (res) => {
    //         this.selectedLandsT = [];
    //         highlightFeature(res.features[0], this.map, {
    //           layerName: "SelectGraphicLayer",
    //           strokeColor: [0, 0, 0],
    //           highlightWidth: 3,
    //           isHighlighPolygonBorder: true,
    //           isZoom: true,
    //           zoomFactor: 50,
    //         });
    //       },
    //     });
    //   } else {
    //     var g = this.state.parcelNum.filter((m) => m.i == f)[0];
    //     this.setState({ parcelId: g.attributes.PARCEL_SPATIAL_ID });
    //     highlightFeature(g, this.map, {
    //       layerName: "SelectGraphicLayer",
    //       strokeColor: [0, 0, 0],
    //       isHighlighPolygonBorder: true,
    //       highlightWidth: 3,
    //     });
    //     this.setState({ parcelval: f });
    //   }
    // };
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_5___default()(this, "addParcelToSelect", () => {
      if (this.state.selectedLands && this.state.selectedLands.length > 0) {
        this.setState({
          parcelId: this.state.selectedLands[this.state.selectedLands.length - 1].id
        });
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_11__["intersectQueryTask"])({
          outFields: ["MUNICIPALITY_NAME", "PARCEL_AREA", "PARCEL_LAT_COORD", "PARCEL_LONG_COORD", "PARCEL_MAIN_LUSE", "PLAN_NO", "PARCEL_PLAN_NO", "USING_SYMBOL", "PARCEL_SPATIAL_ID"],
          geometry: this.state.selectedLands[this.state.selectedLands.length - 1].geometry,
          url: _mapviewer_config_map__WEBPACK_IMPORTED_MODULE_13__["mapUrl"] + "/" + this.LayerID.Landbase_Parcel,
          where: "PARCEL_PLAN_NO is not null",
          callbackResult: res => {
            Object(_common_common_func__WEBPACK_IMPORTED_MODULE_11__["getFeatureDomainName"])(res.features, this.LayerID.Landbase_Parcel).then(r => {
              res.features = res.features.map((e, i) => {
                return {
                  ...e,
                  i: uniqid()
                };
              });
              this.selectedLandsT.push(res);
              this.DrawGraph();
            });
          }
        });
      }
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_5___default()(this, "DrawGraph", () => {
      if (!this.state.selectedLands.length) {
        this.map.graphics.clear();
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_11__["clearGraphicFromLayer"])(this.map, "SelectLandsGraphicLayer");
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_11__["highlightFeature"])(this.RolBackPol, this.map, {
          layerName: "SelectGraphicLayer",
          isZoom: true,
          isHiglightSymbol: true,
          highlighColor: [255, 0, 0, 0.25]
        });
        this.setState({
          parcelSearch: null,
          parcelNum: this.RolBackParcelNum,
          parcelval: undefined
        });
      } else {
        this.parcelDis = Object(_Helpers__WEBPACK_IMPORTED_MODULE_19__["selectDis"])(this.selectedLandsT);
        console.log(this.parcelDis);
        this.setAdjacentToStore(this.parcelDis);
        this.setState({
          parcelSearch: null,
          parcelNum: this.parcelDis
        });
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_11__["clearGraphicFromLayer"])(this.map, "SelectLandsGraphicLayer");
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_11__["clearGraphicFromLayer"])(this.map, "SelectGraphicLayer");
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_11__["clearGraphicFromLayer"])(this.map, "ParcelPlanNoGraphicLayer");
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_11__["highlightFeature"])(this.parcelDis.filter(element => !this.state.selectedLands.find(i => i.id === element.attributes.PARCEL_SPATIAL_ID)), this.map, {
          layerName: "SelectLandsGraphicLayer",
          noclear: false,
          isZoom: false,
          isHiglightSymbol: true,
          highlighColor: [0, 255, 0, 0.5],
          zoomFactor: 50
        });
        this.parcelDis.filter(element => !this.state.selectedLands.find(i => i.id === element.attributes.PARCEL_SPATIAL_ID)).forEach(f => {
          Object(_common_common_func__WEBPACK_IMPORTED_MODULE_11__["addParcelNo"])(f.geometry.getExtent().getCenter(), this.map, f.attributes.PARCEL_PLAN_NO + "", "ParcelPlanNoGraphicLayer", 14, [0, 0, 0]);
        });
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_11__["highlightFeature"])(this.parcelDis.filter(element => this.state.selectedLands.find(i => i.id === element.attributes.PARCEL_SPATIAL_ID)), this.map, {
          layerName: "SelectLandsGraphicLayer",
          noclear: true,
          attr: {
            isParcel: true
          },
          isZoom: true,
          isHighlighPolygonBorder: true,
          zoomFactor: 50
        });
        this.parcelDis.filter(element => this.state.selectedLands.find(i => i.id === element.attributes.PARCEL_SPATIAL_ID)).forEach(f => {
          Object(_common_common_func__WEBPACK_IMPORTED_MODULE_11__["addParcelNo"])(f.geometry.getExtent().getCenter(), this.map, f.attributes.PARCEL_PLAN_NO + "", "ParcelPlanNoGraphicLayer", 14, [0, 0, 0]);
        });
      }
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_5___default()(this, "mapLoaded", map => {
      var _this$state, _value$temp, _value$temp2, _value$temp3, _value$temp4, _value$temp5, _value$temp6, _value$temp7, _value$temp8;
      this.map = map;
      if (this.props.input && this.props.input.value && this.props.input.value.parcels) {
        var _this$props$input$val, _this$props$input$val2, _this$props$input$val3, _this$props$input$val4, _this$props$input$val5, _this$props$input$val6, _this$props$input$val7;
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_11__["highlightFeature"])(this.props.input.value.parcels, this.map, {
          layerName: "SelectGraphicLayer",
          noclear: true,
          isZoom: true,
          attr: {
            isParcel: true
          },
          isHighlighPolygonBorder: true,
          zoomFactor: 50
        });

        //setTimeout(() => {
        this.props.input.value.parcels.forEach(f => {
          f.geometry = new esri.geometry.Polygon(f.geometry);
          Object(_common_common_func__WEBPACK_IMPORTED_MODULE_11__["addParcelNo"])(f.geometry.getExtent().getCenter(), this.map, f.attributes.PARCEL_PLAN_NO + "", "ParcelPlanNoGraphicLayer", 14, [0, 0, 0]);
        });
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_11__["highlightFeature"])((_this$props$input$val = this.props.input.value) === null || _this$props$input$val === void 0 ? void 0 : (_this$props$input$val2 = _this$props$input$val.temp) === null || _this$props$input$val2 === void 0 ? void 0 : (_this$props$input$val3 = _this$props$input$val2.parcelDis) === null || _this$props$input$val3 === void 0 ? void 0 : _this$props$input$val3.filter(element => !this.props.input.value.parcels.find(i => i.attributes.PARCEL_SPATIAL_ID === element.attributes.PARCEL_SPATIAL_ID)), this.map, {
          layerName: "SelectLandsGraphicLayer",
          noclear: false,
          isZoom: false,
          isHiglightSymbol: true,
          highlighColor: [0, 255, 0, 0.5],
          zoomFactor: 50
        });
        (_this$props$input$val4 = this.props.input.value) === null || _this$props$input$val4 === void 0 ? void 0 : (_this$props$input$val5 = _this$props$input$val4.temp) === null || _this$props$input$val5 === void 0 ? void 0 : (_this$props$input$val6 = _this$props$input$val5.parcelDis) === null || _this$props$input$val6 === void 0 ? void 0 : (_this$props$input$val7 = _this$props$input$val6.filter(element => !this.props.input.value.parcels.find(i => i.attributes.PARCEL_SPATIAL_ID === element.attributes.PARCEL_SPATIAL_ID))) === null || _this$props$input$val7 === void 0 ? void 0 : _this$props$input$val7.forEach(f => {
          if (!f.geometry.getExtent) {
            f.geometry = new esri.geometry.Polygon(f.geometry);
          }
          Object(_common_common_func__WEBPACK_IMPORTED_MODULE_11__["addParcelNo"])(f.geometry.getExtent().getCenter(), this.map, f.attributes.PARCEL_PLAN_NO + "", "ParcelPlanNoGraphicLayer", 14, [0, 0, 0]);
        });
      }
      this.map.on("click", geo => {
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_11__["intersectQueryTask"])({
          outFields: ["MUNICIPALITY_NAME", "PARCEL_MAIN_LUSE", "PARCEL_AREA", "PARCEL_LAT_COORD", "PARCEL_LONG_COORD", "PLAN_NO", "PARCEL_PLAN_NO", "USING_SYMBOL", "PARCEL_SPATIAL_ID"],
          geometry: geo.mapPoint,
          url: _mapviewer_config_map__WEBPACK_IMPORTED_MODULE_13__["mapUrl"] + "/" + this.LayerID.Landbase_Parcel,
          where: "PARCEL_PLAN_NO is not null",
          callbackResult: res => {
            if (res.features.length > 0) {
              this.setState({
                munval: res.features[0].attributes.MUNICIPALITY_NAME
              });
              Object(_common_common_func__WEBPACK_IMPORTED_MODULE_11__["getFeatureDomainName"])(res.features, this.LayerID.Landbase_Parcel).then(r => {
                this.setState({
                  parcelSearch: null,
                  parcelNum: res.features.map((e, i) => {
                    return {
                      ...e,
                      i
                    };
                  })
                });
                res.features = res.features.map((e, i) => {
                  return {
                    ...e,
                    i
                  };
                });
                this.RolBackParcelNum = res.features.map((e, i) => {
                  return {
                    ...e,
                    i
                  };
                });

                //setTimeout(() => {
                if (this.selectedLandsT.length == 0 || this.selectedLands.length == 0) {
                  this.selectedLandsT.push(res);
                  this.DrawGraph(true);
                  this.onLandParcelChange(0);
                }
                //}, 500);
              });
            }
          }
        });
      });
      this.props.setCurrentMap(map);
      const {
        input: {
          value,
          onChange
        }
      } = this.props;
      let landsData = {
        ...value,
        conditions: (_this$state = this.state) === null || _this$state === void 0 ? void 0 : _this$state.conditions,
        temp: {
          map: this.map,
          mun: value === null || value === void 0 ? void 0 : (_value$temp = value.temp) === null || _value$temp === void 0 ? void 0 : _value$temp.mun,
          plan: value === null || value === void 0 ? void 0 : (_value$temp2 = value.temp) === null || _value$temp2 === void 0 ? void 0 : _value$temp2.plan,
          subtype: value === null || value === void 0 ? void 0 : (_value$temp3 = value.temp) === null || _value$temp3 === void 0 ? void 0 : _value$temp3.subtype,
          subname: value === null || value === void 0 ? void 0 : (_value$temp4 = value.temp) === null || _value$temp4 === void 0 ? void 0 : _value$temp4.subname,
          parcelDis: value === null || value === void 0 ? void 0 : (_value$temp5 = value.temp) === null || _value$temp5 === void 0 ? void 0 : _value$temp5.parcelDis,
          block: value === null || value === void 0 ? void 0 : (_value$temp6 = value.temp) === null || _value$temp6 === void 0 ? void 0 : _value$temp6.block,
          parcel: value === null || value === void 0 ? void 0 : (_value$temp7 = value.temp) === null || _value$temp7 === void 0 ? void 0 : _value$temp7.parcel
        },
        parcels: [...(value === null || value === void 0 ? void 0 : value.parcels)],
        submission_data: {
          ...(value === null || value === void 0 ? void 0 : value.submission_data)
        }
      };
      this.setState({
        parcelSearch: null,
        parcelNum: value === null || value === void 0 ? void 0 : (_value$temp8 = value.temp) === null || _value$temp8 === void 0 ? void 0 : _value$temp8.parcelDis,
        mapLoaded: true,
        landsData: {
          ...landsData
        }
      });
      onChange({
        ...landsData
      });
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_5___default()(this, "myChangeHandler", (name, event) => {
      this["edit_" + name] = event.target.value;
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_5___default()(this, "UpdateSubmissionDataObject", () => {
      const {
        submission_data = {},
        parcelData,
        parcelSideLengths
      } = this.state;
      var fields = {
        ...parcelData.fields
      };
      const values = Object(_main_helpers_functions_filters__WEBPACK_IMPORTED_MODULE_12__["default"])({
        key: "FormValues",
        form: "stepForm"
      });
      Object.keys(fields).map((key, index) => {
        var _fields$key;
        submission_data[key] =
        // (values.submission_data && values.submission_data[key]) ||
        // (this.props.input?.value?.submission_data &&
        //   this.props.input.value?.submission_data[key]) ||
        ((_fields$key = fields[key]) === null || _fields$key === void 0 ? void 0 : _fields$key.value) || "";
      });
      submission_data["parcelsSidesInDetails"] = parcelSideLengths;
      submission_data["parcel_data"] = {
        ...parcelData
      };
      let landsData = {
        ...this.props.input.value,
        parcels: [...this.state.selectedLands],
        submission_data: {
          ...submission_data
        }
      };
      this.props.input.onChange({
        ...landsData
      });
      this.setState({
        ...landsData
      });
      this.props.change("submission_data", submission_data);
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_5___default()(this, "setValue", (item, event) => {
      item.value = event.target.value;
      this.UpdateSubmissionDataObject();
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_5___default()(this, "OnParcelSelect", () => {
      this.setState({
        parcelval: undefined
      });
      Object(_common_common_func__WEBPACK_IMPORTED_MODULE_11__["clearGraphicFromLayer"])(this.map, "SelectGraphicLayer");
      Object(_common_common_func__WEBPACK_IMPORTED_MODULE_11__["clearGraphicFromLayer"])(this.map, "SelectLandsGraphicLayer");
      if (!this.state.selectedLands.filter(e => e.id === this.state.parcelId).length) {
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_11__["queryTask"])({
          ...Object(_Helpers__WEBPACK_IMPORTED_MODULE_19__["querySetting"])(this.LayerID.Landbase_Parcel, `PARCEL_SPATIAL_ID =${this.state.parcelId}`, true, ["PARCEL_AREA", "PARCEL_MAIN_LUSE", "PARCEL_LAT_COORD", "PARCEL_LONG_COORD", "PLAN_NO", "PARCEL_PLAN_NO", "USING_SYMBOL", "PARCEL_BLOCK_NO", "DISTRICT_NAME", "SUBDIVISION_DESCRIPTION", "SUBDIVISION_TYPE", "PARCEL_SPATIAL_ID", "MUNICIPALITY_NAME"]),
          callbackResult: res => {
            var _this$state2, _this$state2$parcelSi, _this$state2$parcelSi2;
            if (!((_this$state2 = this.state) !== null && _this$state2 !== void 0 && (_this$state2$parcelSi = _this$state2.parcelSideLengths) !== null && _this$state2$parcelSi !== void 0 && (_this$state2$parcelSi2 = _this$state2$parcelSi.filter((item, index) => {
              return item.parcelId === this.state.parcelId;
            })) !== null && _this$state2$parcelSi2 !== void 0 && _this$state2$parcelSi2.length)) {
              var _this$state3, _this$state3$parcelSi;
              (_this$state3 = this.state) === null || _this$state3 === void 0 ? void 0 : (_this$state3$parcelSi = _this$state3.parcelSideLengths) === null || _this$state3$parcelSi === void 0 ? void 0 : _this$state3$parcelSi.push({
                parcelId: this.state.parcelId,
                lengths: {
                  north: 0,
                  south: 0,
                  east: 0,
                  west: 0
                }
              });
            }
            if (this.state.selectedLands && this.state.selectedLands.length == 0) {
              this.setParcelLengths(res.features[0]);

              ///

              // if (
              //   this.state.selectedLands &&
              //   this.state.selectedLands.length == 0
              // ) {
              Object(_common_common_func__WEBPACK_IMPORTED_MODULE_11__["queryTask"])({
                ...Object(_Helpers__WEBPACK_IMPORTED_MODULE_19__["querySetting"])(this.LayerID.Tbl_Parcel_Conditions, `USING_SYMBOL_CODE ='${res.features[0].attributes.USING_SYMBOL}'`, false, ["SLIDE_AREA", "MIN_FROT_OFFSET", "BUILDING_RATIO", "FRONT_OFFSET", "SIDE_OFFSET", "BACK_OFFSET", "FLOORS", "FLOOR_HEIGHT", "FAR", "ADD_FLOOR"]),
                callbackResult: condition => {
                  this.setState({
                    conditions: condition.features
                  });
                  Object(_common_common_func__WEBPACK_IMPORTED_MODULE_11__["getFeatureDomainName"])(res.features, this.LayerID.Landbase_Parcel).then(r => {
                    this.setToStore(r);
                    this.addParcelToSelect();
                  });
                }
              });
            } else {
              this.state.parcelData.fields.north_length.value = "";
              this.state.parcelData.fields.south_length.value = "";
              this.state.parcelData.fields.east_length.value = "";
              this.state.parcelData.fields.west_length.value = "";
              this.UpdateSubmissionDataObject();
              Object(_common_common_func__WEBPACK_IMPORTED_MODULE_11__["getFeatureDomainName"])(res.features, this.LayerID.Landbase_Parcel).then(r => {
                this.setToStore(r);
                this.addParcelToSelect();
              });
            }
          }
        });
      }
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_5___default()(this, "setParcelLengths", parcel => {
      Object(_common_esri_loader__WEBPACK_IMPORTED_MODULE_21__["LoadModules"])(["esri/geometry/Point", "esri/geometry/Polyline", "esri/geometry/Polygon", "esri/tasks/LengthsParameters", "esri/tasks/GeometryService", "esri/geometry/mathUtils"]).then(([Point, Polyline, Polygon, LengthsParameters, GeometryService, mathUtils]) => {
        let maxPoint, minPoint;
        let max = 0,
          min;
        //

        for (let j = 0; j < parcel.geometry.rings[0].length - 1; j++) {
          let point1 = new esri.geometry.Point(parcel.geometry.rings[0][j][0], parcel.geometry.rings[0][j][1]);
          let point2 = new esri.geometry.Point(parcel.geometry.rings[0][j + 1][0], parcel.geometry.rings[0][j + 1][1]);
          if (point1.x > max) {
            max = point1.x;
            maxPoint = point1;
          }
          if (!min || point1.x < min) {
            min = point1.x;
            minPoint = point1;
          }
          if (point2.x > max) {
            max = point2.x;
            maxPoint = point2;
          }
          if (!min || point2.x < min) {
            min = point2.x;
            minPoint = point2;
          }
        }
        let arr = [...parcel.geometry.rings[0]];
        for (let i = arr.length - 1; i > 0; i--) {
          let pnt1 = new Point(arr[i], parcel.geometry.spatialReference);
          let pnt2 = new Point(arr[i - 1], parcel.geometry.spatialReference);
          let length = mathUtils.getLength(pnt1, pnt2);
          length = Number(parseFloat(length).toFixed(2));
          let path = {
            paths: [[arr[i], arr[i - 1]]],
            text: length,
            spatialReference: parcel.geometry.spatialReference
          };
          let geometryServiceLength = new GeometryService(_mapviewer_config_map__WEBPACK_IMPORTED_MODULE_13__["geometryServiceUrl"]);
          let polyline = new Polyline(path);
          let lengthParams = new LengthsParameters();
          lengthParams.polylines = [polyline];
          lengthParams.lengthUnit = GeometryService.UNIT_METER;
          lengthParams.geodesic = true;
          geometryServiceLength.lengths(lengthParams, result => {
            var _this$state4, _this$state4$parcelSi;
            let polygonCenterPoint = parcel.geometry.getCentroid();
            let polylineCenterPoint = polyline.getExtent().getCenter();
            let parcelSideLength = (_this$state4 = this.state) === null || _this$state4 === void 0 ? void 0 : (_this$state4$parcelSi = _this$state4.parcelSideLengths) === null || _this$state4$parcelSi === void 0 ? void 0 : _this$state4$parcelSi.filter((item, index) => {
              return item.parcelId === this.state.parcelId;
            })[0];
            if (parcelSideLength) {
              let maxPolgonPoint = maxPoint;
              let minPolygonPoint = minPoint;
              let diffrenceInXWithMaxPoint = Math.abs(polylineCenterPoint.x - maxPolgonPoint.x);
              let diffrenceWithPolygonCenterPoint = Math.abs(polylineCenterPoint.x - polygonCenterPoint.x);
              //east
              if (diffrenceInXWithMaxPoint < diffrenceWithPolygonCenterPoint) {
                var _result$lengths, _result$lengths2;
                this.state.parcelData.fields.east_length.value = (parseFloat(this.state.parcelData.fields.east_length.value || 0) + ((result === null || result === void 0 ? void 0 : (_result$lengths = result.lengths) === null || _result$lengths === void 0 ? void 0 : _result$lengths[0]) || 0)).toFixed(2);
                parcelSideLength.lengths.east = (parseFloat(parcelSideLength.lengths.east) + ((result === null || result === void 0 ? void 0 : (_result$lengths2 = result.lengths) === null || _result$lengths2 === void 0 ? void 0 : _result$lengths2[0]) || 0)).toFixed(2);
              } else {
                let diffrenceInXWithMinPoint = Math.abs(polylineCenterPoint.x - minPolygonPoint.x);
                if (diffrenceInXWithMinPoint < diffrenceWithPolygonCenterPoint) {
                  var _result$lengths3, _result$lengths4;
                  this.state.parcelData.fields.west_length.value = (parseFloat(this.state.parcelData.fields.west_length.value || 0) + ((result === null || result === void 0 ? void 0 : (_result$lengths3 = result.lengths) === null || _result$lengths3 === void 0 ? void 0 : _result$lengths3[0]) || 0)).toFixed(2);
                  parcelSideLength.lengths.west = (parseFloat(parcelSideLength.lengths.west) + ((result === null || result === void 0 ? void 0 : (_result$lengths4 = result.lengths) === null || _result$lengths4 === void 0 ? void 0 : _result$lengths4[0]) || 0)).toFixed(2);
                } else if (polylineCenterPoint.y > polygonCenterPoint.y) {
                  var _result$lengths5, _result$lengths6;
                  this.state.parcelData.fields.north_length.value = (parseFloat(this.state.parcelData.fields.north_length.value || 0) + ((result === null || result === void 0 ? void 0 : (_result$lengths5 = result.lengths) === null || _result$lengths5 === void 0 ? void 0 : _result$lengths5[0]) || 0)).toFixed(2);
                  parcelSideLength.lengths.north = (parseFloat(parcelSideLength.lengths.north) + ((result === null || result === void 0 ? void 0 : (_result$lengths6 = result.lengths) === null || _result$lengths6 === void 0 ? void 0 : _result$lengths6[0]) || 0)).toFixed(2);
                } else {
                  var _result$lengths7, _result$lengths8;
                  this.state.parcelData.fields.south_length.value = (parseFloat(this.state.parcelData.fields.south_length.value || 0) + ((result === null || result === void 0 ? void 0 : (_result$lengths7 = result.lengths) === null || _result$lengths7 === void 0 ? void 0 : _result$lengths7[0]) || 0)).toFixed(2);
                  parcelSideLength.lengths.south = (parseFloat(parcelSideLength.lengths.south) + ((result === null || result === void 0 ? void 0 : (_result$lengths8 = result.lengths) === null || _result$lengths8 === void 0 ? void 0 : _result$lengths8[0]) || 0)).toFixed(2);
                }
              }
            }
            this.UpdateSubmissionDataObject();
          });
        }
      });
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_5___default()(this, "setToStore", r => {
      if (r) {
        const {
          input: {
            value
          }
        } = this.props;
        this.state.landsData = {
          ...value,
          mapGraphics: [],
          conditions: this.state.conditions,
          submission_data: {
            ...this.state.submission_data
          },
          temp: {
            map: this.map,
            mun: this.state.munval,
            plan: this.state.plan_no,
            subtype: this.state.subType_name,
            subname: this.state.subName_name,
            parcelDis: this.RolBackParcelNum,
            block: this.state.block_no,
            parcel: this.state.parcelval
          },
          parcels: [...this.state.selectedLands, {
            attributes: r[0].attributes,
            id: this.state.parcelId,
            geometry: JSON.parse(JSON.stringify(r[0].geometry))
          }]
        };
        this.props.input.onChange({
          ...this.state.landsData
        });
        this.state.selectedLands.push({
          geometry: r[0].geometry,
          attributes: r[0].attributes,
          id: this.state.parcelId
        });
      }
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_5___default()(this, "setAdjacentToStore", r => {
      let store = this.props.input.value;
      store.temp.parcelDis = r;
      this.props.input.onChange(store);
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_5___default()(this, "LandHoverOn", f => {
      if (this.state.selectedLands.length) {
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_11__["clearGraphicFromLayer"])(this.map, "SelectGraphicLayer");
        var parcel = this.state.parcelNum.filter(m => m.i == f.key)[0];
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_11__["highlightFeature"])(parcel, this.map, {
          layerName: "SelectGraphicLayer",
          strokeColor: [0, 0, 0],
          isHighlighPolygonBorder: true,
          highlightWidth: 3
        });
      }
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_5___default()(this, "LandHoverOff", f => {
      if (this.state.selectedLands.length) {
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_11__["clearGraphicFromLayer"])(this.map, "SelectGraphicLayer");
      }
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_5___default()(this, "remove", item => {
      this.state.selectedLands.pop(item);
      const values = lodash_slice__WEBPACK_IMPORTED_MODULE_8___default()(this.props.input.value.parcels, 0, -1);
      this.props.input.onChange([...values]);
      if (this.state.selectedLandsT) {
        this.state.selectedLandsT.pop(item);
      }
      this.DrawGraph();
      if (this.state.selectedLands.length == 1) {
        this.addParcelToSelect();
        this.state.parcelData.fields.north_length.value = "0";
        this.state.parcelData.fields.south_length.value = "0";
        this.state.parcelData.fields.east_length.value = "0";
        this.state.parcelData.fields.west_length.value = "0";
        this.setParcelLengths(this.state.selectedLands[0]);
      }
      if (!this.state.selectedLands.length) {
        Object(_common__WEBPACK_IMPORTED_MODULE_23__["onMunChange"])(this, this.state.munval);
      }
      this.setState({
        selectedLands: [...this.state.selectedLands]
      });
    });
    this.PlanNum = [];
    this.planId = null;
    this.parcelTs = [];
    this.selectedLandsT = [];
    this.selectedLands = [];
    this.selectionMode = false;
    this.parcel_fields = ["PARCEL_PLAN_NO", "PARCEL_AREA", "PARCEL_BLOCK_NO", "DISTRICT_NAME", "SUBDIVISION_TYPE", "SUBDIVISION_DESCRIPTION", "USING_SYMBOL", "Natural_Area"];
    this.parcelData = {
      label: "حدود الموقع حسب الصك",
      className: "parcelInfo",
      type: "inputs",
      required: true,
      fields: {
        north_length: {
          label: "طول الحد الشمالي",
          value: props === null || props === void 0 ? void 0 : (_props$input = props.input) === null || _props$input === void 0 ? void 0 : (_props$input$value = _props$input.value) === null || _props$input$value === void 0 ? void 0 : (_props$input$value$su = _props$input$value.submission_data) === null || _props$input$value$su === void 0 ? void 0 : _props$input$value$su.north_length
        },
        north_desc: {
          label: "وصف الحد الشمالي",
          value: props === null || props === void 0 ? void 0 : (_props$input2 = props.input) === null || _props$input2 === void 0 ? void 0 : (_props$input2$value = _props$input2.value) === null || _props$input2$value === void 0 ? void 0 : (_props$input2$value$s = _props$input2$value.submission_data) === null || _props$input2$value$s === void 0 ? void 0 : _props$input2$value$s.north_desc
        },
        south_length: {
          label: "طول الحد الجنوبي",
          value: props === null || props === void 0 ? void 0 : (_props$input3 = props.input) === null || _props$input3 === void 0 ? void 0 : (_props$input3$value = _props$input3.value) === null || _props$input3$value === void 0 ? void 0 : (_props$input3$value$s = _props$input3$value.submission_data) === null || _props$input3$value$s === void 0 ? void 0 : _props$input3$value$s.south_length
        },
        south_desc: {
          label: "وصف الحد الجنوبي",
          value: props === null || props === void 0 ? void 0 : (_props$input4 = props.input) === null || _props$input4 === void 0 ? void 0 : (_props$input4$value = _props$input4.value) === null || _props$input4$value === void 0 ? void 0 : (_props$input4$value$s = _props$input4$value.submission_data) === null || _props$input4$value$s === void 0 ? void 0 : _props$input4$value$s.south_desc
        },
        east_length: {
          label: "طول الحد الشرقي",
          value: props === null || props === void 0 ? void 0 : (_props$input5 = props.input) === null || _props$input5 === void 0 ? void 0 : (_props$input5$value = _props$input5.value) === null || _props$input5$value === void 0 ? void 0 : (_props$input5$value$s = _props$input5$value.submission_data) === null || _props$input5$value$s === void 0 ? void 0 : _props$input5$value$s.east_length
        },
        east_desc: {
          label: "وصف الحد الشرقي",
          value: props === null || props === void 0 ? void 0 : (_props$input6 = props.input) === null || _props$input6 === void 0 ? void 0 : (_props$input6$value = _props$input6.value) === null || _props$input6$value === void 0 ? void 0 : (_props$input6$value$s = _props$input6$value.submission_data) === null || _props$input6$value$s === void 0 ? void 0 : _props$input6$value$s.east_desc
        },
        west_length: {
          label: "طول الحد الغربي",
          value: props === null || props === void 0 ? void 0 : (_props$input7 = props.input) === null || _props$input7 === void 0 ? void 0 : (_props$input7$value = _props$input7.value) === null || _props$input7$value === void 0 ? void 0 : (_props$input7$value$s = _props$input7$value.submission_data) === null || _props$input7$value$s === void 0 ? void 0 : _props$input7$value$s.west_length
        },
        west_desc: {
          label: "وصف الحد الغربي",
          value: props === null || props === void 0 ? void 0 : (_props$input8 = props.input) === null || _props$input8 === void 0 ? void 0 : (_props$input8$value = _props$input8.value) === null || _props$input8$value === void 0 ? void 0 : (_props$input8$value$s = _props$input8$value.submission_data) === null || _props$input8$value$s === void 0 ? void 0 : _props$input8$value$s.west_desc
        }
      }
    };
    this.state = {
      mapLoaded: false,
      munval: props.input && props.input.value.temp && props.input.value.temp.mun || undefined,
      planeval: props.input && props.input.value.temp && props.input.value.temp.plan || undefined,
      subTypeval: props.input && props.input.value.temp && props.input.value.temp.subtype || undefined,
      subNameval: props.input && props.input.value.temp && props.input.value.temp.subname || undefined,
      blockval: props.input && props.input.value.temp && props.input.value.temp.block || undefined,
      selectedLands: props.input && props.input.value.parcels || [],
      parcelval: props.input && props.input.value.temp && props.input.value.temp.parcel || undefined,
      blockNum: [],
      conditions: props.input && props.input.value.conditions || undefined,
      planSersh: null,
      subDivNames: [],
      subDivType: [],
      parcelNum: [],
      parcelNumS: [],
      MunicipalityNames: [],
      PlanNum: [],
      parcelId: null,
      mapExtend: null,
      parcelSearch: null,
      poly: null,
      parcelData: this.parcelData,
      parcelSideLengths: props.input && ((_props$input$value$su2 = props.input.value.submission_data) === null || _props$input$value$su2 === void 0 ? void 0 : _props$input$value$su2.parcelsSidesInDetails) || [],
      // submission_data:
      //   values.submission_data ||
      //   (props.input && props.input.value.submission_data) ||
      //   {},
      landsData: {}
    };
    this.UpdateSubmissionDataObject();
  }
  convertToArabic(num) {
    if (num) {
      var id = ["۰", "۱", "۲", "۳", "٤", "٥", "٦", "۷", "۸", "۹"];
      return num.replace(/[0-9]/g, function (w) {
        return id[+w];
      });
    } else {
      return "";
    }
  }
  replaceAll(str, find, replace) {
    return str.replace(new RegExp(find, "g"), replace);
  }
  componentDidMount() {
    if (window.isAkarApp) {
      console.log("window", window);
      this.parcel_fields = ["PARCEL_PLAN_NO", "PARCEL_AREA", "PARCEL_BLOCK_NO", "DISTRICT_NAME", "SUBDIVISION_TYPE", "SUBDIVISION_DESCRIPTION", "USING_SYMBOL"];
    }
    Object(_common_common_func__WEBPACK_IMPORTED_MODULE_11__["getInfo"])().then(res => {
      this.LayerID = res;
      Object(_common__WEBPACK_IMPORTED_MODULE_23__["getParcels"])(this, null, "", {
        returnDistinctValues: true
      }, ["MUNICIPALITY_NAME"]).then(features => {
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_11__["getFeatureDomainName"])(features, this.LayerID.Landbase_Parcel).then(features => {
          let fcs = features.filter(r => r.attributes.MUNICIPALITY_NAME).map(r => {
            return {
              code: r.attributes.MUNICIPALITY_NAME_Code,
              name: r.attributes.MUNICIPALITY_NAME
            };
          });
          this.setState({
            MunicipalityNames: [2188].indexOf(this.props.currentModule.record.workflow_id) == -1 ? fcs : fcs.filter(codeValue => {
              if (this.props.currentModule.record.workflow_id == 2188 && codeValue.code == 10506) {
                return codeValue;
              }
            }),
            allParcels: features
          }, () => {
            this.loadLists = true;
            if (this.state.munval) {
              Object(_common__WEBPACK_IMPORTED_MODULE_23__["onMunChange"])(this, this.state.munval, () => {
                Object(_common__WEBPACK_IMPORTED_MODULE_23__["onPlaneChange"])(this, this.state.planeval, () => {
                  Object(_common__WEBPACK_IMPORTED_MODULE_23__["onSubTypeChange"])(this, this.state.subTypeval, () => {
                    Object(_common__WEBPACK_IMPORTED_MODULE_23__["onSubNameChange"])(this, this.state.subNameval, () => {
                      Object(_common__WEBPACK_IMPORTED_MODULE_23__["onBlockChange"])(this, this.state.blockval, () => {
                        Object(_common__WEBPACK_IMPORTED_MODULE_23__["onLandParcelChange"])(this, this.state.parcelval, () => {});
                      });
                    });
                  });
                });
              });
            }
            this.loadLists = false;
          });
        });
      });
      // esriRequest(mapUrl + "/" + this.LayerID.Municipality_Boundary).then(
      //   (response) => {
      //     this.setState({
      //       // MunicipalityNames:
      //       //   response.types[0].domains.MUNICIPALITY_NAME.codedValues,
      //       MunicipalityNames:
      //         [2188].indexOf(this.props.currentModule.record.workflow_id) == -1
      //           ? response.types[0].domains.MUNICIPALITY_NAME.codedValues
      //           : response.types[0].domains.MUNICIPALITY_NAME.codedValues.filter(
      //               (codeValue) => {
      //                 if (
      //                   this.props.currentModule.record.workflow_id == 2188 &&
      //                   codeValue.code == 10506
      //                 ) {
      //                   return codeValue;
      //                 }
      //               }
      //             ),
      //     });
      //   }
      // );
    });
  }
  enableEdit(name, i) {
    this.setState({
      [name + "_isEdit_" + i]: true
    });
  }
  showEditBtn(name, value) {
    if (name == "USING_SYMBOL") {
      return value == null;
    } else {
      return ["PARCEL_AREA", "PARCEL_BLOCK_NO", "DISTRICT_NAME", "SUBDIVISION_TYPE", "SUBDIVISION_DESCRIPTION", "Natural_Area"].indexOf(name) > -1;
    }
  }
  saveEdit(id, name, i) {
    let findParcel = this.props.input.value.parcels.find(p => {
      var _p$attributes;
      return [p === null || p === void 0 ? void 0 : p.id, p === null || p === void 0 ? void 0 : (_p$attributes = p.attributes) === null || _p$attributes === void 0 ? void 0 : _p$attributes.PARCEL_SPATIAL_ID].indexOf(id) != -1;
    });
    findParcel.attributes[name] = this["edit_" + name] || findParcel.attributes[name];
    let selectLand = this.state.selectedLands.find(p => {
      var _p$attributes2;
      return [p === null || p === void 0 ? void 0 : p.id, p === null || p === void 0 ? void 0 : (_p$attributes2 = p.attributes) === null || _p$attributes2 === void 0 ? void 0 : _p$attributes2.PARCEL_SPATIAL_ID].indexOf(id) != -1;
    });
    selectLand.attributes[name] = this["edit_" + name] || selectLand.attributes[name];
    this.state.landsData = {
      ...this.props.input.value,
      parcels: [...this.state.selectedLands],
      submission_data: {
        ...this.state.submission_data
      }
    };
    this.props.input.onChange({
      ...this.state.landsData
    });
    this.setState({
      [name + "_isEdit_" + i]: false,
      selectedLands: [...this.state.selectedLands]
    });
  }
  render() {
    var _this$state$Municipal;
    const {
      parcelData,
      selectedLands,
      MunicipalityNames,
      subDivType,
      subDivNames,
      subNameval,
      blockNum,
      blockval,
      PlanNum,
      mapLoaded,
      planeval,
      parcelSearch,
      parcelNum,
      parcelval,
      conditions
    } = this.state;
    const {
      fullMapWidth
    } = this.props;
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("div", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement(react_sticky__WEBPACK_IMPORTED_MODULE_20__["StickyContainer"], {
      style: {
        direction: "ltr"
      }
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement(react_sticky__WEBPACK_IMPORTED_MODULE_20__["Sticky"], {
      bottomOffset: 80
    }, ({
      style
    }) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement(_MapBtnsComponent__WEBPACK_IMPORTED_MODULE_16__["default"], _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_4___default()({
      style: style
    }, this.props)))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("div", {
      className: !fullMapWidth ? "content-section implementation" : ""
    }, mapLoaded && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("div", {
      style: {
        padding: "10px"
      }
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement(antd_lib_select__WEBPACK_IMPORTED_MODULE_7___default.a, {
      getPopupContainer: trigger => trigger.parentNode,
      autoFocus: true,
      onChange: val => {
        Object(_common__WEBPACK_IMPORTED_MODULE_23__["onMunChange"])(this, val);
      },
      showSearch: true,
      value: this.state.munval,
      placeholder: "\u0627\u062E\u062A\u0631 \u0627\u0633\u0645 \u0627\u0644\u0628\u0644\u062F\u064A\u0647",
      disabled: !((_this$state$Municipal = this.state.MunicipalityNames) !== null && _this$state$Municipal !== void 0 && _this$state$Municipal.length),
      optionFilterProp: "children",
      filterOption: (input, option) => {
        if (option.props.children) {
          return option.props.children.find(i => {
            return i && i.indexOf(input.trim().toLowerCase()) >= 0;
          }) != null;
        } else {
          return false;
        }
      }
    }, MunicipalityNames === null || MunicipalityNames === void 0 ? void 0 : MunicipalityNames.map(e => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement(Option, {
      key: e.code,
      value: e.code
    }, e.name, " "))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement(antd_lib_select__WEBPACK_IMPORTED_MODULE_7___default.a, {
      getPopupContainer: trigger => trigger.parentNode,
      onChange: val => {
        Object(_common__WEBPACK_IMPORTED_MODULE_23__["onPlaneChange"])(this, val);
      },
      showSearch: true,
      autoFocus: true,
      disabled: !PlanNum.length,
      optionFilterProp: "children",
      filterOption: (input, option) => {
        if (option.props.children) {
          var _option$props$childre;
          return ((_option$props$childre = option.props.children) === null || _option$props$childre === void 0 ? void 0 : _option$props$childre.indexOf(Object(_common_common_func__WEBPACK_IMPORTED_MODULE_11__["convertToArabic"])(input))) != -1;
        } else {
          return false;
        }
      },
      value: planeval,
      placeholder: "\u0631\u0642\u0645 \u0627\u0644\u0645\u062E\u0637\u0637",
      notFoundContent: "not found"
    }, PlanNum
    //.slice(0, 100)
    .map((d, i) => {
      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement(Option, {
        key: i,
        value: d.i
      }, Object(_common_common_func__WEBPACK_IMPORTED_MODULE_11__["localizeNumber"])(d.attributes.PLAN_NO));
    })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement(antd_lib_select__WEBPACK_IMPORTED_MODULE_7___default.a, {
      getPopupContainer: trigger => trigger.parentNode,
      autoFocus: true,
      onChange: val => {
        Object(_common__WEBPACK_IMPORTED_MODULE_23__["onSubTypeChange"])(this, val);
      },
      showSearch: true,
      disabled: !subDivType.length,
      value: this.state.subTypeval,
      placeholder: "نوع التقسيم",
      optionFilterProp: "children",
      filterOption: (input, option) => {
        if (option.props.children) {
          var _option$props$childre2;
          return ((_option$props$childre2 = option.props.children) === null || _option$props$childre2 === void 0 ? void 0 : _option$props$childre2.indexOf(Object(_common_common_func__WEBPACK_IMPORTED_MODULE_11__["convertToArabic"])(input))) != -1;
        } else {
          return false;
        }
      }
    }, subDivType
    //.slice(0, 100)
    .map((e, i) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement(Option, {
      key: i,
      value: e.code
    }, " ", e.name, " "))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement(antd_lib_select__WEBPACK_IMPORTED_MODULE_7___default.a, {
      getPopupContainer: trigger => trigger.parentNode,
      autoFocus: true,
      onChange: val => {
        Object(_common__WEBPACK_IMPORTED_MODULE_23__["onSubNameChange"])(this, val);
      },
      showSearch: true,
      disabled: !subDivNames.length,
      placeholder: "\u0627\u0633\u0645 \u0627\u0644\u062A\u0642\u0633\u064A\u0645",
      value: subNameval,
      optionFilterProp: "children",
      filterOption: (input, option) => {
        var _option$props$childre3;
        return ((_option$props$childre3 = option.props.children) === null || _option$props$childre3 === void 0 ? void 0 : _option$props$childre3.indexOf(Object(_common_common_func__WEBPACK_IMPORTED_MODULE_11__["convertToArabic"])(input))) != -1;
      }
    }, subDivNames
    //.slice(0, 100)
    .map((e, i) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement(Option, {
      key: i,
      value: e.attributes.SUBDIVISION_SPATIAL_ID
    }, " ", e.attributes.SUBDIVISION_DESCRIPTION))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement(antd_lib_select__WEBPACK_IMPORTED_MODULE_7___default.a, {
      getPopupContainer: trigger => trigger.parentNode,
      autoFocus: true,
      onChange: val => {
        Object(_common__WEBPACK_IMPORTED_MODULE_23__["onBlockChange"])(this, val);
      },
      showSearch: true,
      disabled: !blockNum.length,
      value: blockval,
      placeholder: "\u0631\u0642\u0645 \u0627\u0644\u0628\u0644\u0643",
      optionFilterProp: "children",
      filterOption: (input, option) => {
        var _option$props$childre4;
        return ((_option$props$childre4 = option.props.children) === null || _option$props$childre4 === void 0 ? void 0 : _option$props$childre4.indexOf(Object(_common_common_func__WEBPACK_IMPORTED_MODULE_11__["convertToArabic"])(input))) != -1;
      }
    }, blockNum
    //.slice(0, 100)
    .map((e, i) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement(Option, {
      key: i,
      value: e.attributes.BLOCK_SPATIAL_ID
    }, Object(_common_common_func__WEBPACK_IMPORTED_MODULE_11__["localizeNumber"])(e.attributes.BLOCK_NO)))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement(antd_lib_select__WEBPACK_IMPORTED_MODULE_7___default.a, {
      getPopupContainer: trigger => trigger.parentNode,
      autoFocus: true,
      onChange: val => {
        Object(_common__WEBPACK_IMPORTED_MODULE_23__["onLandParcelChange"])(this, val);
      },
      showSearch: true,
      disabled: parcelNum && !parcelNum.length,
      onSearch: e => {
        this.setState({
          parcelSearch: e
        });
        Object(_common__WEBPACK_IMPORTED_MODULE_23__["onSearch"])(this, e);
      },
      filterOption: (input, option) => {
        if (option.props.children) {
          var _option$props$childre5;
          return ((_option$props$childre5 = option.props.children) === null || _option$props$childre5 === void 0 ? void 0 : _option$props$childre5.indexOf(Object(_common_common_func__WEBPACK_IMPORTED_MODULE_11__["convertToArabic"])(input))) != -1;
        } else {
          return false;
        }
      },
      value: parcelval,
      placeholder: "\u0631\u0642\u0645 \u0642\u0637\u0639\u0629 \u0627\u0644\u0627\u0631\u0636"
    }, parcelNum && parcelNum.filter((e, i) => {
      if (parcelSearch) {
        if (this.state.selectedLands.length) {
          return !this.state.selectedLands.find(tt => tt.attributes.PARCEL_SPATIAL_ID == e.attributes.PARCEL_SPATIAL_ID);
        } else {
          return e.attributes.PARCEL_PLAN_NO && e.attributes.PARCEL_PLAN_NO.toLowerCase().indexOf(parcelSearch.toLowerCase()) >= 0;
        }
      } else {
        if (selectedLands.length) {
          return !selectedLands.find(tt => tt.attributes.PARCEL_PLAN_NO == e.attributes.PARCEL_PLAN_NO) && e.attributes.PARCEL_PLAN_NO;
        } else {
          return e.attributes.PARCEL_PLAN_NO;
        }
      }
    }).slice(0, 100).map((e, i) => {
      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement(Option, {
        onMouseEnter: this.LandHoverOn,
        onMouseLeave: this.LandHoverOff,
        key: e.attributes.PARCEL_SPATIAL_ID,
        value: e.i
      }, Object(_common_common_func__WEBPACK_IMPORTED_MODULE_11__["localizeNumber"])(e.attributes.PARCEL_PLAN_NO));
    })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement(antd_lib_button__WEBPACK_IMPORTED_MODULE_3___default.a, {
      className: "add-gis",
      disabled: this.state.parcelId === null,
      onClick: this.OnParcelSelect
    }, "\u0625\u0636\u0627\u0641\u0629 \u0627\u0644\u0627\u0631\u0636")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement(_MapComponent_MapComponent__WEBPACK_IMPORTED_MODULE_15__["default"], _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_4___default()({
      mapload: this.mapLoaded.bind(this)
    }, this.props))), mapLoaded && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("div", {
      style: {
        gridColumn: "1/3"
      }
    }, selectedLands && selectedLands.length > 0 && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("div", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("h1", {
      className: "titleSelectedParcel"
    }, "\u0627\u0644\u0623\u0631\u0627\u0636\u064A \u0627\u0644\u0645\u062E\u062A\u0627\u0631\u0629"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("table", {
      className: "table table-bordered",
      style: {
        marginTop: "1%"
      }
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("thead", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("tr", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("th", null, "\u0631\u0642\u0645 \u0627\u0644\u0642\u0637\u0639\u0647"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("th", null, "\u0627\u0644\u0645\u0633\u0627\u062D\u0629 \u0645\u0646 \u0627\u0644\u0635\u0643 \u0645\u0662"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("th", null, "\u0631\u0642\u0645 \u0627\u0644\u0628\u0644\u0643"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("th", null, "\u0627\u0644\u062D\u064A"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("th", null, "\u0646\u0648\u0639 \u0627\u0644\u062A\u0642\u0633\u064A\u0645"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("th", null, "\u0627\u0633\u0645 \u0627\u0644\u062A\u0642\u0633\u064A\u0645"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("th", null, "\u0631\u0645\u0632 \u0627\u0644\u0627\u0633\u062A\u062E\u062F\u0627\u0645"), !window.isAkarApp && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("th", null, "\u0627\u0644\u0645\u0633\u0627\u062D\u0629 \u0645\u0646 \u0627\u0644\u0637\u0628\u064A\u0639\u0629 \u0645\u0662"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("th", null, " \u062E\u064A\u0627\u0631\u0627\u062A"))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("tbody", null, selectedLands.map((e, i) => {
      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("tr", {
        key: i
      }, this.parcel_fields.map((field, k) => {
        return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("td", {
          key: k
        }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("div", null, !this.state[field + "_isEdit_" + i] ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("span", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("span", null, e.attributes[field] || "غير متوفر"), this.showEditBtn(field, e.attributes[field]) && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("span", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("button", {
          className: "btn",
          style: {
            marginRight: "20px"
          },
          onClick: this.enableEdit.bind(this, field, i)
        }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("i", {
          className: "fas fa-edit"
        })))) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("span", {
          style: {
            display: "grid",
            gridTemplateColumns: "1fr auto"
          }
        }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("input", {
          key: i,
          className: "form-control",
          type: "text",
          onChange: this.myChangeHandler.bind(this, field)
        }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("button", {
          className: "btn",
          style: {
            marginRight: "20px"
          },
          onClick: this.saveEdit.bind(this, e.id, field, i)
        }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("i", {
          className: "fa fa-floppy-o"
        })))));
      }), i === selectedLands.length - 1 ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("td", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("button", {
        className: " btn btn-danger ",
        onClick: this.remove.bind(this, e)
      }, "\u062D\u0630\u0641")) : "");
    }))), window.isAkarApp && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("div", {
      className: "col-xs-12"
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("h1", {
      className: "titleSelectedParcel"
    }, "\u062D\u062F\u0648\u062F \u0627\u0644\u0645\u0648\u0642\u0639 \u062D\u0633\u0628 \u0627\u0644\u0635\u0643"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement(antd_lib_form__WEBPACK_IMPORTED_MODULE_1___default.a, {
      id: "coorForm",
      className: "top1",
      style: {
        direction: "rtl",
        padding: "5px"
      }
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("div", {
      style: {
        display: "grid",
        gridTemplateColumns: "1fr 1fr",
        gridGap: "10px"
      }
    }, ["north", "south", "east", "west"].map((side, sideIndex) => {
      return Object.keys(parcelData["fields"]).filter((fSide, fSideIndex) => {
        return fSide.indexOf(side) != -1;
      }).sort().map((obj, parentIndex) => {
        return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("div", {
          style: {
            marginTop: "20px",
            marginBottom: "20px"
          }
        }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("label", null, parcelData["fields"][obj].label), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("input", {
          type: "text",
          class: "form-control",
          value: parcelData["fields"][obj].value,
          onChange: this.setValue.bind(this, parcelData["fields"][obj])
        }));
      });
    })))), !window.isPlusApp && !window.isAkarApp && conditions && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("div", {
      className: "col-xs-12"
    }, " ", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("h1", {
      className: "titleSelectedParcel"
    }, "\u0627\u0644\u0627\u0634\u062A\u0631\u0627\u0637\u0627\u062A"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("table", {
      className: "table table-bordered",
      style: {
        marginTop: "1%"
      }
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("thead", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("tr", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("th", null, "\u0645\u0633\u0627\u062D\u0629 \u0627\u0644\u0642\u0633\u064A\u0645\u0629 (\u06452)"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("th", null, "\u0627\u0644\u062D\u062F \u0627\u0644\u0623\u062F\u0646\u0649 \u0644\u0644\u0648\u0627\u062C\u0647\u0629 (\u0645)"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("th", null, "\u0646\u0633\u0628\u0629 \u0627\u0644\u0628\u0646\u0627\u0621"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("th", null, "\u0625\u0631\u062A\u062F\u0627\u062F \u0627\u0644\u0648\u0627\u062C\u0647\u0629 (\u0645)"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("th", null, "\u0627\u0631\u062A\u062F\u0627\u062F \u0627\u0644\u062C\u0648\u0627\u0646\u0628 (\u0645)"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("th", null, "\u0627\u0631\u062A\u062F\u0627\u062F \u062E\u0644\u0641\u064A (\u0645)"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("th", null, "\u0639\u062F\u062F \u0627\u0644\u0637\u0648\u0627\u0628\u0642 (\u0645)"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("th", null, "\u0627\u0631\u062A\u0641\u0627\u0639 \u0627\u0644\u0637\u0627\u0628\u0642 (\u0645)"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("th", null, "\u0645\u0639\u0627\u0645\u0644 \u0643\u062A\u0644\u0629 \u0627\u0644\u0628\u0646\u0627\u0621 FAR"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("th", null, "\u064A\u0645\u0643\u0646 \u0627\u0636\u0627\u0641\u0629 \u062F\u0648\u0631"))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("tbody", null, conditions.map((e, i) => {
      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("tr", {
        key: i
      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("td", null, e.attributes.SLIDE_AREA), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("td", null, e.attributes.MIN_FROT_OFFSET), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("td", null, e.attributes.BUILDING_RATIO), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("td", null, e.attributes.FRONT_OFFSET), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("td", null, e.attributes.SIDE_OFFSET), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("td", null, e.attributes.BACK_OFFSET), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("td", null, e.attributes.FLOORS), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("td", null, e.attributes.FLOOR_HEIGHT), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("td", null, e.attributes.FAR), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("td", null, e.attributes.ADD_FLOOR));
    })))))));
  }
}
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_18__["connect"])(_mapping__WEBPACK_IMPORTED_MODULE_17__["mapStateToProps"], _mapping__WEBPACK_IMPORTED_MODULE_17__["mapDispatchToProps"])(IdentifyComponent));

/***/ })

}]);
//# sourceMappingURL=66.min.js.map