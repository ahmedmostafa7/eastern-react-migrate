{"version":3,"file":"80.min.js","sources":["webpack:///./src/app/components/inputs/fields/list/tableAdd/cell.js","webpack:///./src/app/components/inputs/fields/list/tableAdd/gisTableAdd.js"],"sourcesContent":["import React from 'react'\r\nexport class Cell extends React.Component {\r\n    state = {\r\n        editing: false,\r\n    };\r\n\r\n    toggleEdit = () => {\r\n        const editing = !this.state.editing;\r\n        this.setState({ editing }, () => {\r\n            if (editing) {\r\n                this.input.focus();\r\n            }\r\n        });\r\n    };\r\n\r\n    save = e => {\r\n        const { record, handleSave } = this.props;\r\n        this.form.validateFields((error, values) => {\r\n            if (error && error[e.currentTarget.id]) {\r\n                return;\r\n            }\r\n            this.toggleEdit();\r\n            handleSave({ ...record, ...values });\r\n        });\r\n    };\r\n\r\n    renderCell = form => {\r\n        this.form = form;\r\n        const { children, dataIndex, record, title } = this.props;\r\n        const { editing } = this.state;\r\n        return  (\r\n                <div\r\n                    className=\"editable-cell-value-wrap\"\r\n                    style={{ paddingRight: 24 }}\r\n                    onClick={this.toggleEdit}\r\n                >\r\n                    {children}\r\n                </div>\r\n            );\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            editable,\r\n            dataIndex,\r\n            title,\r\n            record,\r\n            index,\r\n            handleSave,\r\n            children,\r\n            ...restProps\r\n        } = this.props;\r\n        return (\r\n            <td {...restProps}>\r\n                (\r\n                        children\r\n                 )\r\n            </td>\r\n        );\r\n    }\r\n}","import React from 'react'\r\nimport {withTranslation} from 'react-i18next';\r\nimport { Button, Table } from 'antd';\r\nimport {Cell} from './cell'\r\n// import * as ActionsComponents from './actions';\r\nimport { list, connectList } from '../';\r\n\r\nclass tableListComponent extends list {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { dataTable:[]}\r\n        // this.ActionsComponents = ActionsComponents;\r\n    }\r\n    componentDidMount() {\r\n       \r\n        // this.listDiv = last(document.querySelectorAll('.ant-table-body'));\r\n        // super.componentDidMount();\r\n        \r\n        // const { po } = this.props\r\n        // const { dataTable } = this.state;\r\n        // this.setState({\r\n        //     dataTable: [...dataTable, po]\r\n        // })\r\n    }\r\n  handleChange(value){\r\n      const {input:{onChange}}=this.props\r\n      onChange(value)\r\n  }\r\n   \r\n\r\n    render() {\r\n        \r\n        const { className = '', input: { value, ...input }, coulmns, qw, dw, addResultTotable, footer, data2=[],\r\n            ux_pattern, type, class: rowClass = () => { }, t, value_key, height = 600 } = this.props;\r\n        console.log(\"da\",data2)\r\n        const columns = coulmns.map(col => {\r\n           \r\n                return col;\r\n            })\r\n  \r\n\r\nreturn(\r\n    <div>\r\n        <Button onClick={addResultTotable} type=\"primary\" style={{ marginBottom: 16 }}>\r\n            Add a row\r\n        </Button>\r\n        <Table\r\n            // components={Cell}\r\n            rowClassName={() => 'editable-row'}\r\n            bordered\r\n            // onChange={this.handleChange}\r\n            dataSource={data2}\r\n            columns={columns}\r\n        />\r\n    </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connectList(withTranslation('actions', 'messages')(tableListComponent))"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAKA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5DA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAGA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AACA;AAEA;;;;A","sourceRoot":""}