{"version":3,"file":"92.min.js","sources":["webpack:///./src/app/helpers/components/show/list/table/row/types/ImagePreview.js","webpack:///./src/app/helpers/components/show/list/table/row/types/image.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Modal } from 'antd';\r\nimport { get, last } from 'lodash';\r\n// import {host} from 'configFiles/config';\r\nimport Img from 'app/helpers/components/image';\r\nconst isObject = (val) => {\r\n    return val instanceof Object;\r\n}\r\nclass ImagePreview extends Component {\r\n    render() {\r\n        const { image, onCancel } = this.props;\r\n        const url = get(image, 'url', '')\r\n        const type = last(!isObject(url) && url.split('.') || url.data.split('.')).toLowerCase()\r\n        return (\r\n            <div className=\"eee\">\r\n                {\r\n                    <Modal visible={true} footer={null} onCancel={onCancel}>\r\n                        {\r\n                            <Img type={type} file={url} />\r\n\r\n                        }\r\n                    </Modal>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ImagePreview;","import React, { Component } from \"react\";\r\nimport {withTranslation} from \"react-i18next\";\r\nimport { last, map } from \"lodash\";\r\nimport ImagePreview from \"./ImagePreview\";\r\nimport Img from 'app/helpers/components/image';\r\n\r\nclass fileUploaderComponent extends Component {\r\n  state = { error: \"\", disabled: false, deleteVisible: false };\r\n\r\n  renderThumb = (file='', key) => {\r\n    const type = last((file || \"\").split('.')).toLowerCase()\r\n     \r\n    return (\r\n      <div onClick={this.handlePreview.bind(this, file)}>\r\n          <Img type={type} file={file} />\r\n      </div>\r\n    );\r\n  };\r\n  handleCancel() {\r\n    this.setState({ ...this.state, previewVisible: false });\r\n  }\r\n  handlePreview(file) {\r\n    this.setState({\r\n      ...this.state,\r\n      previewImage: { url: file },\r\n      previewVisible: true\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      d,\r\n      field: { multiple = true }\r\n    } = this.props;\r\n    const { previewImage, previewVisible } = this.state;\r\n    const fileList = d && (multiple ? d : [d]);\r\n    \r\n    return (\r\n      <div className=\"ss\">\r\n        {map(fileList, this.renderThumb)}\r\n        {previewVisible && (\r\n          <ImagePreview\r\n            image={previewImage}\r\n            onCancel={this.handleCancel.bind(this)}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withTranslation(\"messages\", \"labels\")(fileUploaderComponent);\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAOA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5BA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAIA;AACA;AAAA;AAKA;AACA;AACA;;;;A","sourceRoot":""}