{"version":3,"file":"22.min.js","sources":["webpack:///./node_modules/lodash/_asciiWords.js","webpack:///./node_modules/lodash/_basePullAt.js","webpack:///./node_modules/lodash/_hasUnicodeWord.js","webpack:///./node_modules/lodash/_unicodeWords.js","webpack:///./node_modules/lodash/remove.js","webpack:///./node_modules/lodash/words.js","webpack:///./src/app/helpers/components/show/fileUploader/ImagePreview.js","webpack:///./src/app/helpers/components/show/fileUploader/index.js"],"sourcesContent":["/** Used to match words composed of alphanumeric characters. */\nvar reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n/**\n * Splits an ASCII `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction asciiWords(string) {\n  return string.match(reAsciiWord) || [];\n}\n\nmodule.exports = asciiWords;\n","var baseUnset = require('./_baseUnset'),\n    isIndex = require('./_isIndex');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * The base implementation of `_.pullAt` without support for individual\n * indexes or capturing the removed elements.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {number[]} indexes The indexes of elements to remove.\n * @returns {Array} Returns `array`.\n */\nfunction basePullAt(array, indexes) {\n  var length = array ? indexes.length : 0,\n      lastIndex = length - 1;\n\n  while (length--) {\n    var index = indexes[length];\n    if (length == lastIndex || index !== previous) {\n      var previous = index;\n      if (isIndex(index)) {\n        splice.call(array, index, 1);\n      } else {\n        baseUnset(array, index);\n      }\n    }\n  }\n  return array;\n}\n\nmodule.exports = basePullAt;\n","/** Used to detect strings that need a more robust regexp to match words. */\nvar reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n/**\n * Checks if `string` contains a word composed of Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a word is found, else `false`.\n */\nfunction hasUnicodeWord(string) {\n  return reHasUnicodeWord.test(string);\n}\n\nmodule.exports = hasUnicodeWord;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsDingbatRange = '\\\\u2700-\\\\u27bf',\n    rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n    rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n    rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n    rsPunctuationRange = '\\\\u2000-\\\\u206f',\n    rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n    rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n    rsVarRange = '\\\\ufe0e\\\\ufe0f',\n    rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\",\n    rsBreak = '[' + rsBreakRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsDigits = '\\\\d+',\n    rsDingbat = '[' + rsDingbatRange + ']',\n    rsLower = '[' + rsLowerRange + ']',\n    rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsUpper = '[' + rsUpperRange + ']',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n    rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n    rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n    rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n    reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n    rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq;\n\n/** Used to match complex or compound words. */\nvar reUnicodeWord = RegExp([\n  rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n  rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n  rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n  rsUpper + '+' + rsOptContrUpper,\n  rsOrdUpper,\n  rsOrdLower,\n  rsDigits,\n  rsEmoji\n].join('|'), 'g');\n\n/**\n * Splits a Unicode `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction unicodeWords(string) {\n  return string.match(reUnicodeWord) || [];\n}\n\nmodule.exports = unicodeWords;\n","var baseIteratee = require('./_baseIteratee'),\n    basePullAt = require('./_basePullAt');\n\n/**\n * Removes all elements from `array` that `predicate` returns truthy for\n * and returns an array of the removed elements. The predicate is invoked\n * with three arguments: (value, index, array).\n *\n * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n * to pull elements from an array by value.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Array\n * @param {Array} array The array to modify.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new array of removed elements.\n * @example\n *\n * var array = [1, 2, 3, 4];\n * var evens = _.remove(array, function(n) {\n *   return n % 2 == 0;\n * });\n *\n * console.log(array);\n * // => [1, 3]\n *\n * console.log(evens);\n * // => [2, 4]\n */\nfunction remove(array, predicate) {\n  var result = [];\n  if (!(array && array.length)) {\n    return result;\n  }\n  var index = -1,\n      indexes = [],\n      length = array.length;\n\n  predicate = baseIteratee(predicate, 3);\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result.push(value);\n      indexes.push(index);\n    }\n  }\n  basePullAt(array, indexes);\n  return result;\n}\n\nmodule.exports = remove;\n","var asciiWords = require('./_asciiWords'),\n    hasUnicodeWord = require('./_hasUnicodeWord'),\n    toString = require('./toString'),\n    unicodeWords = require('./_unicodeWords');\n\n/**\n * Splits `string` into an array of its words.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {RegExp|string} [pattern] The pattern to match words.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the words of `string`.\n * @example\n *\n * _.words('fred, barney, & pebbles');\n * // => ['fred', 'barney', 'pebbles']\n *\n * _.words('fred, barney, & pebbles', /[^, ]+/g);\n * // => ['fred', 'barney', '&', 'pebbles']\n */\nfunction words(string, pattern, guard) {\n  string = toString(string);\n  pattern = guard ? undefined : pattern;\n\n  if (pattern === undefined) {\n    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n  }\n  return string.match(pattern) || [];\n}\n\nmodule.exports = words;\n","import React, { Component } from \"react\";\r\nimport { Modal } from \"antd\";\r\nimport { get, last } from \"lodash\";\r\n// import {host} from 'configFiles/config';\r\nimport ReactImageZoom from \"react-image-zooom\";\r\nimport Img from \"app/helpers/components/image\";\r\nconst isObject = (val) => {\r\n  return val instanceof Object;\r\n};\r\nclass ImagePreview extends Component {\r\n  render() {\r\n    \r\n    const { image, onCancel } = this.props;\r\n    const url = get(image, \"url\", \"\");\r\n    console.log(\"img\", image);\r\n    const type = last(\r\n      (!isObject(url) && url.split(\".\")) || url.data.split(\".\")\r\n    ).toLowerCase();\r\n    //\r\n    return (\r\n      <div className=\"eee\">\r\n        {\r\n          <Modal visible={true} footer={null} onCancel={onCancel}>\r\n            {((type.includes(\"pdf\") ||\r\n              type.includes(\"PDF\") ||\r\n              type.includes(\"dwg\") ||\r\n              type.includes(\"docx\")) && <Img type={type} file={url} />) || (\r\n              <ReactImageZoom src={filesHost + url} />\r\n            )}\r\n          </Modal>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImagePreview;\r\n","import React, { Component } from 'react'\r\nimport { Upload, Icon, Modal } from \"antd\";\r\nimport {withTranslation} from \"react-i18next\";\r\nimport { get, isEmpty, words, remove } from 'lodash';\r\nimport { host } from 'configFiles/config';\r\nimport ImagePreview from './ImagePreview';\r\n\r\nconst {confirm} = Modal\r\n\r\nclass fileUploaderComponent extends Component {\r\n    state = { error: '', disabled:false, deleteVisible:false }\r\n\r\n    uploadButton = (\r\n        <div>\r\n            <div className=\"ant-upload-text\">{this.props.label}</div>\r\n            <Icon type=\"plus\" />\r\n        </div>\r\n    );\r\n\r\n    beforeUpload(file) {\r\n        const { fileType = '' } = this.props;\r\n\r\n        const regex = new RegExp(words(fileType).join('|'));\r\n        if(fileType == '.dwg') {\r\n            let fileName = file.name.split('.')\r\n            if(!(!isEmpty(fileName) && fileName[fileName.length-1] == 'dwg')) {\r\n                this.setState({ error: 'Invalid file type' })\r\n                return false;\r\n            }\r\n        }else if (!regex.test(file.type)) {\r\n            this.setState({ error: 'Invalid file type' })\r\n            return false;\r\n\r\n        }\r\n\r\n        this.setState({ error: '' })\r\n\r\n        return true\r\n    }\r\n\r\n    handleChange({ fileList }) {\r\n        const { input: { onChange }, maxNumOfFiles} = this.props\r\n        if(fileList.length >= maxNumOfFiles) {\r\n            this.setState({disabled:true})\r\n        }else {\r\n            this.setState({disabled:false})\r\n        }\r\n        console.log(fileList)\r\n        const _fileList = fileList.slice(0 - maxNumOfFiles)\r\n            .filter(file => file.status)\r\n            .map(file =>\r\n                ({\r\n                    ...file,\r\n                    // url: `${host}/${get(file, 'response.data')}`,\r\n                    thumbUrl: window.filesHost+`${get(file, 'response[0].data')}`,\r\n                    url: `${get(file, 'response[0].data')}`,\r\n                    //thumbUrl: `${get(file, 'response.data')}`,\r\n                }));\r\n\r\n        onChange(_fileList);\r\n    }\r\n\r\n    handlePreview(file) {\r\n        if (get(file, \"type\", '').includes('image')) {\r\n            this.setState({\r\n                ...this.state,\r\n                previewImage: file,\r\n                previewVisible: true,\r\n            });\r\n        } else {\r\n            window.open(window.filesHost+`${get(file, 'url')}`)\r\n        }\r\n    }\r\n\r\n    handleCancel() {\r\n        this.setState({ ...this.state, previewVisible: false })\r\n    }\r\n\r\n    onRemove(removItem) {\r\n        const {input:{name, value},change, t} = this.props\r\n        confirm({\r\n            content: t('Are you sure you want to delete this item?'),\r\n            title: t('labels:Delete'),\r\n            onOk(){\r\n                let newVals  = remove([...value], (v) => v.uid != removItem.uid)\r\n                change(name, newVals)\r\n                return false;\r\n            },\r\n            onCancel(){\r\n                return false;\r\n            },\r\n            okText:t('labels:Yes'),\r\n            cancelText:t('labels:No')\r\n        })\r\n\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        const { val, t, fileType = '', uploadUrl, multiple = true, showUploadList = true } = this.props;\r\n        const { previewImage, previewVisible} = this.state;\r\n\r\n        const Token = localStorage.getItem('token');\r\n\r\n        return (\r\n            <div>\r\n                <Upload\r\n                    disabled = {this.state.disabled}\r\n                    multiple={multiple}\r\n                    showUploadList={showUploadList}\r\n                    action={uploadUrl}\r\n                    headers={{Authorization: `Bearer ${Token}`}}\r\n                    className=\"upload-section\"\r\n                    // onRemove={this.onRemove.bind(this)}\r\n                    beforeUpload={this.beforeUpload.bind(this)}\r\n                    accept={fileType}\r\n                    fileList={val}\r\n                    // onChange={this.handleChange.bind(this)}\r\n                    // onPreview={this.handlePreview.bind(this)}\r\n                    listType='picture-card'\r\n                    locale={{ previewFile: t('labels:Preview File') }}\r\n                >\r\n                    {/* <Button > <Icon type=\"upload\" />{label}</Button> */}\r\n                    {this.state.error && <span className='error'> {t(this.state.error)} </span>}\r\n                    {!showUploadList && val.length && <span>{t(\"Upload Successful\")} </span>}\r\n                    {this.uploadButton}\r\n                </Upload>\r\n                {previewVisible && <ImagePreview image={previewImage} onCancel={this.handleCancel.bind(this)} />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default withTranslation(\"messages\", \"labels\")(fileUploaderComponent)\r\n"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClCA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AACA;AAAA;AAMA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpCA;AAEA;AAEA;AACA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAAA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAEA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAIA;AAAA;AAAA;AAGA;AACA;AACA;;;;A","sourceRoot":""}