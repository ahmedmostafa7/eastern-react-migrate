{"version":3,"file":"79.min.js","sources":["webpack:///./src/app/components/inputs/fields/list/mapping.js","webpack:///./src/app/components/inputs/fields/list/table/row/types/actions.js"],"sourcesContent":["import { get } from \"lodash\";\r\n\r\nexport const mapStateToProps = ({ wizard: {mainObject, currentModule}, selectors }, ownProps) => {\r\n    const { moduleName, ux_pattern, pageSize: propsPageSize = 20 } = ownProps;\r\n    const { pagination = {} } = get(selectors, moduleName, {});\r\n    let { pageSize = propsPageSize, currentPage = 1, totalPages = 0, count = propsPageSize } = pagination\r\n    let allData = get(selectors, `${moduleName}.data`, ownProps.data || []);\r\n    let data = null;\r\n    let failed = false;\r\n    if (ux_pattern === 'pagination') {\r\n        const firstIndex = (currentPage - 1) * pageSize;\r\n        data = allData.slice(firstIndex, firstIndex + pageSize).filter(d => d != undefined || d != null)\r\n        let arrayLength = currentPage == totalPages ? (count - firstIndex) : pageSize\r\n        if (data.length < arrayLength && arrayLength <= pageSize) {\r\n            failed = true;\r\n        }\r\n    }\r\n    return {\r\n        selectors,\r\n        ...get(selectors, moduleName, {}),\r\n        pagination: {\r\n            ...get(selectors, `${moduleName}.links`, {}),\r\n            failed\r\n        },\r\n        data: data || allData,\r\n        mainObject,\r\n        currentModule\r\n    }\r\n}\r\n\r\nexport const mapDispatchToProps = (dispatch, { moduleName }) => {\r\n    return {\r\n        setValueLabelKeys: (label_key, value_key) => {\r\n            dispatch({\r\n                type: 'setSelectors',\r\n                path: `${moduleName}.label_key`,\r\n                data: label_key\r\n            });\r\n            dispatch({\r\n                type: 'setSelectors',\r\n                path: `${moduleName}.value_key`,\r\n                data: value_key\r\n            });\r\n        },\r\n        setSelector: (moduleName, data) => {\r\n            dispatch({\r\n                type: 'setSelectors',\r\n                path: `${moduleName}`,\r\n                data\r\n            });\r\n        },\r\n        setData: (data) => {\r\n            dispatch({\r\n                type: 'setSelectors',\r\n                path: `${moduleName}.data`,\r\n                data\r\n            })\r\n        },\r\n        editData: (index, data) => {\r\n            dispatch({\r\n                type: 'setSelectors',\r\n                path: `${moduleName}.data[${index}]`,\r\n                data\r\n            })\r\n        },\r\n        addToData: (data, index, operation) => {\r\n            dispatch({\r\n                type: 'insertInArraySelectors',\r\n                path: `${moduleName}.data`,\r\n                operation,\r\n                index,\r\n                data\r\n            })\r\n        },\r\n        removeFromData: (index) => {\r\n            dispatch({\r\n                type: 'removeSelectors',\r\n                path: `${moduleName}.data`,\r\n                index\r\n            })\r\n        },\r\n        setCurrentPage: (pageNum) => {\r\n            dispatch({\r\n                type: 'setSelectors',\r\n                path: `${moduleName}.links.currentPage`,\r\n                data: pageNum\r\n            })\r\n        },\r\n        setPageSize: (pageSize) => {\r\n            dispatch({\r\n                type: 'setSelectors',\r\n                path: `${moduleName}.links.pageSize`,\r\n                data: pageSize\r\n            })\r\n        },\r\n        setTotalPages: (totalPages) => {\r\n            dispatch({\r\n                type: 'setSelectors',\r\n                path: `${moduleName}.links.totalPages`,\r\n                data: totalPages\r\n            })\r\n        },\r\n        setItemsCount: (itemsCount) => {\r\n            dispatch({\r\n                type: 'setSelectors',\r\n                path: `${moduleName}.links.count`,\r\n                data: itemsCount\r\n            })\r\n        },\r\n        setNextUrl: (nextUrl) => {\r\n            dispatch({\r\n                type: 'setSelectors',\r\n                path: `${moduleName}.links.nextLink`,\r\n                data: nextUrl\r\n            })\r\n        },\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { map, pickBy } from \"lodash\";\r\nimport { connect } from \"react-redux\";\r\nimport mapDispatchToProps from \"main_helpers/actions/main\";\r\nimport { mapStateToProps } from \"../../../mapping\";\r\nimport {withTranslation} from \"react-i18next\";\r\nimport { apply_permissions } from \"app/helpers/functions\";\r\nclass actions extends Component {\r\n  takeActions = action => {\r\n    \r\n    action.action(this.props, this.props.row, this.props.values || this.props.mainObject);\r\n  };\r\n  render() {\r\n    const { actions } = this.props.field;\r\n    const { t } = this.props;\r\n    console.log(\"ssd\", this.props);\r\n    return (\r\n      <div\r\n\r\n      // style={{\r\n      //     display: 'grid',\r\n      //     gridTemplateColumns: '120px 120px 120px',\r\n      //     gridGap: '10px'}}\r\n      >\r\n        {map(\r\n          pickBy(actions, d =>\r\n            apply_permissions(this.props.row, d, \"permissions\", this.props)\r\n          ),\r\n          (action, key) => (\r\n            <button\r\n              className={action.className}\r\n              onClick={this.takeActions.bind(this, action)}\r\n            >\r\n              {t(action.text)}\r\n            </button>\r\n          )\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withTranslation(\"actions\")(actions));\r\n"],"mappings":";;;;;;;;;;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrHA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAcA;AACA;AAAA;AAQA;AACA;AACA;;;;A","sourceRoot":""}