{"version":3,"file":"42.min.js","sources":["webpack:///./src/app/components/wizard/components/stepContent/sections/sectionTypes/wizardSummery/components/summery.js","webpack:///./src/app/helpers/components/show/checkbox/index.js","webpack:///./src/app/helpers/components/show/select/index.js","webpack:///./src/app/helpers/components/show/show.js","webpack:///./src/app/helpers/components/show/types.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { get, isEqual, map } from \"lodash\";\r\nimport Show from \"app/helpers/components/show/show\";\r\nimport {withTranslation} from \"react-i18next\";\r\nimport { mapStateToProps, mapDispatchToProps } from \"../mapping\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  create_landsallotment,\r\n  review_landsallotment_munplan,\r\n  review_landsallotment_munsurvey,\r\n} from \"../../../../../../modulesObjects/lands_allotment/create/index\";\r\nimport {\r\n  lands_statements,\r\n  plan_statements,\r\n  municipality_statements,\r\n  approve_investmanager_investmentsites,\r\n  print_investmentsites_lagnh,\r\n} from \"../../../../../../modulesObjects/investment_sites/create/index\";\r\nimport { Create_Plan_Approval_Request } from \"../../../../../../modulesObjects/plan_approval/create/index.js\";\r\nimport ownerData from \"app/helpers/modules/owner\";\r\nimport { convertToArabic } from \"../../../../../../../inputs/fields/identify/Component/common/common_func\";\r\nimport { Collapse } from \"antd\";\r\nimport { adle_statement_propertycheck } from \"../../../../../../modulesObjects/property_check/create\";\r\nconst { Panel } = Collapse;\r\n\r\nclass summery extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  shouldComponentUpdate(nextProps) {\r\n    return (\r\n      !isEqual(\r\n        nextProps?.treeNode?.option?.label,\r\n        this.props?.treeNode?.option?.label\r\n      ) || !isEqual(nextProps.forceUpdate, this.props.forceUpdate)\r\n    );\r\n  }\r\n  renderInfo = (data, field, key) => {\r\n    const { t } = this.props;\r\n    let value = get(data, key);\r\n    if (field.field == \"list\") {\r\n      delete field.fields.actions;\r\n    } else if (field.field == \"primaryPricing\") {\r\n      field.isReadOnly = true;\r\n    } else if (field.field == \"button\") {\r\n      field.in_summery = true;\r\n    }\r\n\r\n    if (value || field.field == \"button\") {\r\n      return (\r\n        <tr>\r\n          {!field.hideLabel && (\r\n            <td style={{ width: \"50%\" }}>\r\n              <label style={{ whiteSpace: \"nowrap\" }}>{t(field.label)}</label>\r\n            </td>\r\n          )}\r\n          <td style={{ width: \"50%\" }} colSpan={\"100%\"}>\r\n            <Show\r\n              field={field}\r\n              val={\r\n                ([\"text\", \"number\", \"inputNumber\", \"hijriDatePicker\"].indexOf(\r\n                  field.field\r\n                ) != -1 &&\r\n                  convertToArabic(value)) ||\r\n                value\r\n              }\r\n              isView={true}\r\n              stepModuleId={this.props.data.module_id}\r\n            />\r\n          </td>\r\n        </tr>\r\n      );\r\n    }\r\n  };\r\n  render() {\r\n    let forms = this.props.data.forms || {\r\n      ...Create_Plan_Approval_Request.steps,\r\n      ...approve_investmanager_investmentsites.steps,\r\n      ...print_investmentsites_lagnh.steps,\r\n    };\r\n    //;\r\n    const { t } = this.props;\r\n    let label =\r\n      this.props?.treeNode?.option?.label || this.props.data.sectionName || \"\";\r\n\r\n    let sections =\r\n      (!Array.isArray(this.props.data.sectionName) && [\r\n        this.props.data.sectionName,\r\n      ]) ||\r\n      this.props.data.sectionName;\r\n    return (\r\n      <>\r\n        {(sections.length > 1 ||\r\n          this.props?.treeNode?.option?.isRequestModule) &&\r\n          map(\r\n            sections,\r\n            (section) =>\r\n              (this.props.mainObject[sections[0]][section] && (\r\n                <Collapse className=\"Collapse\" defaultActiveKey={[\"0\"]} key={0}>\r\n                  <Panel\r\n                    header={(sections.length > 1 && t(section)) || t(label)}\r\n                    forceRender={true}\r\n                    style={{ margin: \"5px\" }}\r\n                  >\r\n                    <table className=\"table table-bordered table-striped\">\r\n                      {map(\r\n                        forms?.[sections?.[0] || \"\"]?.[\"sections\"]?.[section]\r\n                          ?.fields || [],\r\n                        this.renderInfo.bind(\r\n                          this,\r\n                          this.props.mainObject[sections[0]][section]\r\n                        )\r\n                      )}\r\n                    </table>\r\n                  </Panel>\r\n                </Collapse>\r\n              )) || <></>\r\n          )}{\" \"}\r\n        {sections.length == 1 &&\r\n          !this.props?.treeNode?.option?.isRequestModule && (\r\n            <table className=\"table table-bordered table-striped\">\r\n              {map(sections, (section) =>\r\n                map(\r\n                  forms?.[sections?.[0] || \"\"]?.[\"sections\"]?.[section]\r\n                    ?.fields || [],\r\n                  this.renderInfo.bind(\r\n                    this,\r\n                    this.props.mainObject[sections[0]][section]\r\n                  )\r\n                )\r\n              )}\r\n            </table>\r\n          )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withTranslation(\"labels\")(summery));\r\n","import {lazy} from 'react'\r\nexport const boolean = lazy(()=>import('./single'));\r\n// export const multiChecks = lazy(()=>import('./multi'));\r\n// export const op = lazy(()=>import('./op'));","import {lazy} from 'react';\r\nexport const multiSelect = lazy(()=>import('./multiSelect'));\r\nexport const select = lazy(()=>import('./main'));\r\n","import React, { Component, Suspense } from \"react\";\r\nimport * as Fields from \"./types\";\r\nimport { get } from \"lodash\";\r\n\r\nexport default class ShowField extends Component {\r\n  render() {\r\n    const { field } = this.props;\r\n    const FComponent = get(Fields, (field.field || field), Fields.label);\r\n    console.log(this.props, FComponent);\r\n    return (\r\n      <Suspense fallback={<></>}>\r\n        <FComponent {...this.props} ShowField={ShowField} />\r\n      </Suspense>\r\n    );\r\n  }\r\n}\r\n","import { lazy } from \"react\";\r\nexport const fileUploader = lazy(() => import(\"./fileUploader\"));\r\nexport const simpleUploader = lazy(() => import(\"./fileUploader/simple\"));\r\n// export const hijriDatePicker = lazy(()=>import('./hijriDatePicker'));\r\nexport const radio = lazy(() => import(\"./radio\"));\r\nexport const singleSwitch = lazy(() => import(\"./switch\"));\r\n// export const timePicker = lazy(()=>import('./timepicker'));\r\n// export const datePicker = lazy(()=>import('./datePicker'));\r\n// export const slider = lazy(()=>import('./slider'));\r\n// export const mentions = lazy(()=>import('./mention'));\r\nexport const label = lazy(() => import(\"./label\"));\r\n// export const autoValue = lazy(()=>import('./autoValue'));\r\n// export const address = lazy(()=>import('./address'));\r\n// export const tableList = lazy(()=>import('./list/tableList'));\r\nexport const list = lazy(() => import(\"./list/table\"));\r\nexport const simpleModal = lazy(() => import(\"./simpleModal\"));\r\nexport const primaryPricing = lazy(() => import(\"../../../../app/components/inputs/fields/property_removal_primarypricing\"));\r\nexport const propertyRemovalIdentify = lazy(() => import ('../../../../app/components/inputs/fields/identify/Component/propertyRemovalIdentifyComponnent'));\r\n// export const Collapse = lazy(()=>import('./list/collapse'));\r\n// export const cardList = lazy(()=>import('./list/cardList'));\r\n// export const multiTableList = lazy(()=>import('./list/multiTableList'));\r\n// export const gistTable = lazy(()=>import('./list/tableAdd/gisTableAdd'));\r\n// export const gistTable2 = lazy(()=>import('./list/hob'));\r\n// export const textArea = lazy(()=>import('./textArea'));\r\n// export const table = lazy(()=>import('./table'));\r\n export const button = lazy(()=>import('../../../../app/components/inputs/fields/button'));\r\n// export const AdvancedTable = lazy(()=>import('./advanced_table'))\r\n// export const identifyWizard = lazy(()=>import('./identifyWizard'))\r\n// export * from './identify';\r\n// export * from './identify'\r\nexport * from \"./select\";\r\nexport * from \"./checkbox\";\r\n// export * from './calculator'\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AAKA;AAOA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAWA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAOA;AACA;AAAA;AAKA;AACA;AA7CA;AACA;AAAA;AACA;AAMA;AAsCA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAGA;AAKA;AAMA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAYA;AAIA;AAAA;AACA;AAAA;AAQA;AAMA;AACA;AAEA;;;;;;;;;;;;AC1IA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;ACHA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAGA;AACA;;;;;;;;;;;;ACfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}