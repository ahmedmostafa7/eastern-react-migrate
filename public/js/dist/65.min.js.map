{"version":3,"file":"65.min.js","sources":["webpack:///./src/app/components/inputs/fields/identifyWizard/fields.js","webpack:///./src/app/components/inputs/fields/identifyWizard/index.js"],"sourcesContent":["export const idtFields = [\r\n  {\r\n    name: \"municipality\",\r\n    moduleName: \"muns\",\r\n    label: \"اختر البلدية\",\r\n    field: \"select\",\r\n\r\n    required: true,\r\n    label_key: \"name\",\r\n    value_key: \"code\",\r\n  },\r\n  {\r\n    name: \"submunicipality\",\r\n    moduleName: \"muns_sec\",\r\n    label: \"اختر البلدية الفرعية\",\r\n    required: true,\r\n    field: \"select\",\r\n\r\n    label_key: \"name\",\r\n    value_key: \"code\",\r\n  },\r\n  {\r\n    name: \"district\",\r\n    label: \"اختر المنطقة\",\r\n    moduleName: \"districts\",\r\n    field: \"select\",\r\n    label_key: \"attributes.DISTRICT_NAME\",\r\n    value_key: \"attributes.DISTRICT_NAME_Code\",\r\n  },\r\n  {\r\n    name: \"checks\",\r\n    label: \"اختر الطبقات\",\r\n    field: \"multiChecks\",\r\n    required: true,\r\n  },\r\n\r\n  {\r\n    name: \"tableAdd\",\r\n    hideLabel: true,\r\n    field: \"gistTable\",\r\n\r\n    coulmns: [\r\n      {\r\n        title: \"البلدية\",\r\n        dataIndex: \"mun\",\r\n        key: \"mun\",\r\n      },\r\n      {\r\n        title: \"البلدية الفرعية\",\r\n        dataIndex: \"sub_mun\",\r\n        key: \"sub_mun\",\r\n      },\r\n      {\r\n        title: \"الحي\",\r\n        dataIndex: \"district\",\r\n        key: \"district\",\r\n      },\r\n      {\r\n        title: \"الطبقات\",\r\n        dataIndex: \"floors\",\r\n        key: \"floors\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    name: \"requested_file_type\",\r\n    moduleName: \"requested_file_type\",\r\n    label: \"اختر البلدية الفرعية\",\r\n    required: true,\r\n    field: \"select\",\r\n    data: [\r\n      {\r\n        label: \"Shape\",\r\n        value: \"Shape\",\r\n      },\r\n      {\r\n        label: \"CAD\",\r\n        value: \"CAD\",\r\n      },\r\n      {\r\n        label: \"KML\",\r\n        value: \"KML\",\r\n      },\r\n    ],\r\n  },\r\n];\r\n","import React, { Component } from 'react'\r\nimport { serverFieldMapper } from 'app/helpers/functions';\r\nimport { Field } from 'redux-form';\r\nimport { esriRequest } from '../identify/Component/common/esri_request'\r\nimport { queryTask, getFeatureDomainName, getInfo } from '../identify/Component/common/common_func'\r\nimport { mapUrl } from \"../identify/Component/mapviewer/config/map\"\r\nimport { Form } from 'antd';\r\nimport 'antd/dist/reset.css';\r\nimport { querySetting } from '../identify/Component/ThirdIdentifier/Helpers'\r\nimport { idtFields } from './fields';\r\nimport RenderField from 'app/components/inputs';\r\n\r\nimport { reduxForm } from 'redux-form';\r\nconst layerAlias = {\r\n  \"حدود البلديه\": \"Municipality_Boundary\"\r\n  , \"حدود البلدية الفرعية\": \"Sub_Municipality_Boundary\"\r\n  , \"حدود التقسيم\": \"Subdivision\"\r\n  , \"حدود المخططات\": \"Plan_Data\"\r\n  , \"حدود االحياء\": \"District_Boundary\"\r\n  , \"حدود البلكات\": \"Survey_Block\"\r\n  , \"الراضي\": \"Landbase_Parcel\"\r\n  , \"الشوارع\": \"Street_Naming\"\r\n};\r\n class IdentifyWizerd extends Component {\r\n\r\n\r\n  constructor() {\r\n    super()\r\n    this.tableData = []\r\n    this.MUNS_SEC=[]\r\n    this.districtsNames=[]\r\n    this.floors=[]\r\n    this.MUNICIPALITY_NAME = null\r\n    this.MUNICIPALITY_code = null\r\n    this.SUB_MUNICIPALITY_NAME = null\r\n    this.SUB_MUNICIPALITY_code = null\r\n    this.distrectname = null\r\n    this.distrectcode = null\r\n    this.LayersName = []\r\n    this.layersid = []\r\n    this.PlanNum = [];\r\n    this.datatype = null\r\n    this.state = {\r\n      fields: [],\r\n      one: false,\r\n      TableEle: [],\r\n      munval: undefined,\r\n      planeval: undefined,\r\n      subTypeval: undefined,\r\n      subNameval: undefined,\r\n      subDivNames: [],\r\n      MunicipalityNames: [],\r\n      PlanNum: [],\r\n    }\r\n\r\n    this.fields = idtFields.map(f => serverFieldMapper(f));\r\n    getInfo().then((res) => {\r\n      this.LayerID = res;\r\n      esriRequest(mapUrl + \"/\" + this.LayerID.Municipality_Boundary).then((response) => {\r\n        console.log(response)\r\n        this.fields[3].LayerID = this.LayerID\r\n        this.fields[0].data = response.types[0].domains.MUNICIPALITY_NAME.codedValues\r\n        this.fields[0].onChange = this.onMunChange\r\n        this.fields[2].onChange = this.onDisChange\r\n        this.fields[3].act = this.LayerBox\r\n        this.fields[4].addResultTotable = this.addResultTotable\r\n\r\n        // this.fields[4].qw=this.state.TableEle\r\n        // this.fields[3].options = this.plainOptions\r\n        this.setState({\r\n          fields: this.fields,\r\n          MunicipalityNames: response.types[0].domains.MUNICIPALITY_NAME.codedValues\r\n        })\r\n\r\n        //this.setState({ MunicipalityNames: response.types[0].domains.MUNICIPALITY_NAME.codedValues })\r\n      })\r\n    })\r\n\r\n\r\n  }\r\n  addResultTotable = () => {\r\n      const floors=localStorage.getItem('floors')\r\n    \r\n    this.tableData = this.tableData || [];\r\n    this.tableData.push({ 'mun': this.MUNICIPALITY_NAME, 'sub_mun': this.subMun||'', 'district': this.distrectname || '',floors:floors});\r\n\r\n    this.fields[4].data2 = [...this.tableData];\r\n\r\n   const {change}=this.props\r\n    change(\"identify.tableAdd\",[...this.tableData])\r\n   console.log(\"this\",change)\r\n    this.setState({ fields: this.fields })\r\n\r\n\r\n  }\r\n  Del = (index) => {\r\n    let b = this.state.TableEle.filter((e, i) => i !== index)\r\n    this.setState({ TableEle: b })\r\n    this.fields[4].del = b\r\n    this.setState({ fields: this.fields })\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n\r\n    getInfo().then((res) => {\r\n      this.LayerID = res;\r\n      this.fields[3].LayerID = this.LayerID\r\n      // this.setState({ fields: this.fields })\r\n      esriRequest(mapUrl + \"/\" + this.LayerID.Municipality_Boundary).then((response) => {\r\n        console.log(response)\r\n        this.setState({ MunicipalityNames: response.types[0].domains.MUNICIPALITY_NAME.codedValues })\r\n      })\r\n    })\r\n    localStorage.clear();\r\n  }\r\n\r\n  onMunChange = (e) => {\r\n\r\n    this.SUB_MUNICIPALITY_NAME = null\r\n    this.SUB_MUNICIPALITY_code = null\r\n    this.distrectname = null\r\n    this.distrectcode = null\r\n    this.MUNICIPALITY_code = e\r\n    this.MUNICIPALITY_NAME = this.state.MunicipalityNames?.find(m => m.code == e).name\r\n\r\n    \r\n    esriRequest(mapUrl + \"/\" + this.LayerID.Sub_Municipality_Boundary).then((response) => {\r\n      \r\n      let subtypes = response.types.find(ele => ele.id === e).domains.SUB_MUNICIPALITY_NAME.codedValues\r\n      this.fields[1].data = subtypes\r\n      this.fields[1].onChange = this.onSubNameChange\r\n      this.MUNS_SEC=subtypes\r\n\r\n      this.setState({ fields: this.fields });\r\n\r\n    })\r\n    queryTask({\r\n      returnDistinctValues: true,\r\n      ...querySetting(this.LayerID.Landbase_Parcel, `MUNICIPALITY_NAME=\"${e}\"`, false, [\"DISTRICT_NAME\"]),\r\n      callbackResult: (res) => {\r\n        \r\n        getFeatureDomainName(res.features, this.LayerID.Landbase_Parcel).then(() => {\r\n          this.setState({ fields: this.fields });\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  LayerBox = (e) => {\r\n    \r\n    const {change}=this.props;\r\n    change('checks',e)\r\n    this.LayersName = e\r\n    this.floors = e\r\n    this.layersid = e.map(h => this.LayerID[layerAlias[h]])\r\n  }\r\n\r\n\r\n  DataTypeChange = (e) => {\r\n    this.datatype = e\r\n  }\r\n  onSubNameChange = (e) => {\r\n    \r\n    this.subMun = this.MUNS_SEC.find(d => d.code == e).name\r\n    queryTask({\r\n      returnDistinctValues: true,\r\n      ...querySetting(this.LayerID.Landbase_Parcel, `SUB_MUNICIPALITY_NAME=\"${e}\"`, false, [\"DISTRICT_NAME\"]),\r\n      callbackResult: (res) => {\r\n        \r\n        getFeatureDomainName(res.features, this.LayerID.Landbase_Parcel).then(result => {\r\n          this.fields[2].data = result;\r\n          this.districtsNames=result\r\n          this.fields[2].onChange = this.onDistrictChange\r\n          // this.distrectname=result\r\n\r\n\r\n\r\n\r\n          this.setState({ fields: this.fields });\r\n        })\r\n      }\r\n    })\r\n\r\n\r\n  }\r\n   onDistrictChange=(e)=>{\r\n     \r\n     this.distrectname = this.districtsNames.find(d => d.attributes.DISTRICT_NAME_Code == e).attributes.DISTRICT_NAME\r\n    //  let dis = this.fields[2].data.find(m => m.code == e).name\r\n      //  this.distrectname=names.DISTRICT_NAME\r\n   }\r\n\r\n  render() {\r\n    const { fields } = this.state\r\n    console.log(fields)\r\n    return (\r\n\r\n      <Form>\r\n        {\r\n          fields && fields.map(field => {\r\n            console.log(\"field\",field)\r\n            return (<Field key={field.name} name={field.name} component={RenderField} {...field}></Field>)\r\n          })\r\n        }\r\n      </Form>\r\n\r\n    )\r\n  }\r\n}\r\nexport default IdentifyWizerd\r\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpFA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAsDA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAiBA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAIA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAGA;AAAA;AAGA;AACA;AACA;AACA;AAnKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAwBA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AA8EA;AACA;AAAA;AAAA;AACA;AACA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;;;;A","sourceRoot":""}