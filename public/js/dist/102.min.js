(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[102],{

/***/ "./src/app/components/inputs/fields/identify/Component/IdentifyComponnentCoord/index.js":
/*!**********************************************************************************************!*\
  !*** ./src/app/components/inputs/fields/identify/Component/IdentifyComponnentCoord/index.js ***!
  \**********************************************************************************************/
/*! exports provided: appMapDispatchToProps, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "appMapDispatchToProps", function() { return appMapDispatchToProps; });
/* harmony import */ var antd_lib_button_style__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antd/lib/button/style */ "./node_modules/antd/lib/button/style/index.js");
/* harmony import */ var antd_lib_button_style__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(antd_lib_button_style__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var antd_lib_button__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! antd/lib/button */ "./node_modules/antd/lib/button/index.js");
/* harmony import */ var antd_lib_button__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(antd_lib_button__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var antd_lib_form_style__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! antd/lib/form/style */ "./node_modules/antd/lib/form/style/index.js");
/* harmony import */ var antd_lib_form_style__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(antd_lib_form_style__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var antd_lib_form__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! antd/lib/form */ "./node_modules/antd/lib/form/index.js");
/* harmony import */ var antd_lib_form__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(antd_lib_form__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/extends.js");
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var antd_lib_message_style__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! antd/lib/message/style */ "./node_modules/antd/lib/message/style/index.js");
/* harmony import */ var antd_lib_message_style__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(antd_lib_message_style__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var antd_lib_message__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! antd/lib/message */ "./node_modules/antd/lib/message/index.js");
/* harmony import */ var antd_lib_message__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(antd_lib_message__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var antd_lib_select_style__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! antd/lib/select/style */ "./node_modules/antd/lib/select/style/index.js");
/* harmony import */ var antd_lib_select_style__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(antd_lib_select_style__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var antd_lib_select__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! antd/lib/select */ "./node_modules/antd/lib/select/index.js");
/* harmony import */ var antd_lib_select__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(antd_lib_select__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var lodash_isEqual__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! lodash/isEqual */ "./node_modules/lodash/isEqual.js");
/* harmony import */ var lodash_isEqual__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(lodash_isEqual__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var _common_esri_request__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../common/esri_request */ "./src/app/components/inputs/fields/identify/Component/common/esri_request.js");
/* harmony import */ var _common_common_func__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../common/common_func */ "./src/app/components/inputs/fields/identify/Component/common/common_func.js");
/* harmony import */ var _main_helpers_functions_filters__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../../../../../main_helpers/functions/filters */ "./src/main_helpers/functions/filters/index.js");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! axios */ "./node_modules/axios/index.js");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_15__);
/* harmony import */ var _common_esri_loader__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../common/esri_loader */ "./src/app/components/inputs/fields/identify/Component/common/esri_loader.js");
/* harmony import */ var _mapviewer_config_map__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../mapviewer/config/map */ "./src/app/components/inputs/fields/identify/Component/mapviewer/config/map.js");
/* harmony import */ var antd_dist_antd_css__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! antd/dist/antd.css */ "./node_modules/antd/dist/antd.css");
/* harmony import */ var antd_dist_antd_css__WEBPACK_IMPORTED_MODULE_18___default = /*#__PURE__*/__webpack_require__.n(antd_dist_antd_css__WEBPACK_IMPORTED_MODULE_18__);
/* harmony import */ var _MapComponent_MapComponent__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../MapComponent/MapComponent */ "./src/app/components/inputs/fields/identify/Component/MapComponent/MapComponent.js");
/* harmony import */ var _MapBtnsComponent__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../MapBtnsComponent */ "./src/app/components/inputs/fields/identify/Component/MapBtnsComponent/index.js");
/* harmony import */ var _mapping__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../mapping */ "./src/app/components/inputs/fields/identify/Component/mapping.js");
/* harmony import */ var _main_helpers_actions_main__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../../../../../../../main_helpers/actions/main */ "./src/main_helpers/actions/main/index.js");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var _Helpers__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./Helpers */ "./src/app/components/inputs/fields/identify/Component/IdentifyComponnentCoord/Helpers.js");
/* harmony import */ var react_sticky__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! react-sticky */ "./node_modules/react-sticky/lib/index.js");
/* harmony import */ var react_sticky__WEBPACK_IMPORTED_MODULE_25___default = /*#__PURE__*/__webpack_require__.n(react_sticky__WEBPACK_IMPORTED_MODULE_25__);
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ../common */ "./src/app/components/inputs/fields/identify/Component/common/index.js");

























var uniqid = __webpack_require__(/*! uniqid */ "./node_modules/uniqid/index.js");


const {
  Option
} = antd_lib_select__WEBPACK_IMPORTED_MODULE_9___default.a;
const appMapDispatchToProps = dispatch => {
  return {
    ...Object(_mapping__WEBPACK_IMPORTED_MODULE_21__["mapDispatchToProps"])(dispatch, "lands"),
    ...Object(_main_helpers_actions_main__WEBPACK_IMPORTED_MODULE_22__["default"])(dispatch)
  };
};
class IdentifyComponnentCoord extends react__WEBPACK_IMPORTED_MODULE_11__["Component"] {
  constructor(props) {
    var _props$input$value, _props$input$value$te, _props$input$value2, _props$input$value2$t, _props$input$value3, _props$input$value3$t, _props$input$value4, _props$input$value4$t, _props$input$value5, _props$input$value5$t, _props$input$value6, _props$input$value6$t, _props$input$value7, _props$input$value7$t, _props$input$value8, _props$input$value8$t, _props$input$value9;
    super(props);
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default()(this, "LayerID", []);
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default()(this, "openPopup", scope => {
      var fields = this.parcelDataFields;
      this.props.setMain("Popup", {
        popup: {
          type: "create",
          childProps: {
            fields,
            initialValues: {
              ...scope.state.parcelData
            },
            ok(values) {
              scope.state["parcelData"] = values;
              scope.setToStore();
              return Promise.resolve(true);
            }
          }
        }
      });
    });
    // onMunChange = (e) => {
    //   //
    //   clearGraphicFromLayer(this.map, "SelectLandsGraphicLayer");
    //   this.setState({
    //     munval: e,
    //     requiredMun: true,
    //     planeval: undefined,
    //     subTypeval: undefined,
    //     subNameval: undefined,
    //     blockval: undefined,
    //     parcelval: undefined,
    //     selectedLands: [],
    //     parcelData: {},
    //     selectedLandsT: [],
    //     PlanNum: [],
    //     blockNum: [],
    //     subDivNames: [],
    //     subDivType: [],
    //     parcelId: null,
    //     parcelNum: [],
    //   });
    //   this.planId = null;
    //   axios
    //     .get(
    //       window.workFlowUrl +
    //         "/utilityType/" +
    //         this.props.mainObject.serviceSubmissionType.submission
    //           .utilitytype_id +
    //         "/utilityClass?municipalityCode=" +
    //         e
    //     )
    //     .then((response) => {
    //       this.cateogry = response.data;
    //     });
    //   queryTask({
    //     ...querySetting(
    //       this.LayerID.Municipality_Boundary,
    //       `MUNICIPALITY_NAME='${e}'`,
    //       true,
    //       ["MUNICIPALITY_NAME"]
    //     ),
    //     callbackResult: (res) => {
    //       this.pol = res.features[0];
    //       highlightFeature(res.features[0], this.map, {
    //         layerName: "SelectGraphicLayer",
    //         isZoom: true,
    //         isHiglightSymbol: true,
    //         highlighColor: [0, 0, 0, 0.25],
    //       });
    //     },
    //   });
    //   queryTask({
    //     ...querySetting(
    //       this.LayerID.Plan_Data,
    //       `MUNICIPALITY_NAME='${e}'`,
    //       false,
    //       ["PLAN_SPATIAL_ID", "PLAN_NO"]
    //     ),
    //     callbackResult: (res) => {
    //       this.setState({
    //         PlanNum: res.features.map((e, i) => {
    //           return {
    //             ...e,
    //             i: uniqid(),
    //           };
    //         }),
    //       });
    //     },
    //   });
    // };
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default()(this, "resetFields", () => {
      Object(_common_common_func__WEBPACK_IMPORTED_MODULE_13__["resetMapData"])(this.map);
      Object(_common__WEBPACK_IMPORTED_MODULE_26__["onMunChange"])(this, undefined);
      this.props.input.onChange({});
      this.setState({
        selectedLands: [],
        selectedLandsT: [],
        parcelData: {},
        polygonPoints: [],
        x: "",
        y: "",
        parcel_area: "",
        parcel_desc: "",
        coordinateParcel: null,
        conditions: []
      });
    });
    // onPlaneChange = (f) => {
    //   clearGraphicFromLayer(this.map, "SelectLandsGraphicLayer");
    //   var planSpatialId = this.state.PlanNum.filter((m) => m.i == f)?.[0]?.attributes
    //     ?.PLAN_SPATIAL_ID;
    //   this.setState({
    //     plan_no: this.state.PlanNum.filter((m) => m.i == f)?.[0]?.attributes?.PLAN_NO,
    //     planeval: f,
    //     subTypeval: undefined,
    //     subNameval: undefined,
    //     blockval: undefined,
    //     parcelval: undefined,
    //     blockNum: [],
    //     subDivNames: [],
    //     subDivType: [],
    //     parcelId: null,
    //     parcelNum: [],
    //   });
    //   queryTask({
    //     ...querySetting(
    //       this.LayerID.Plan_Data,
    //       `PLAN_SPATIAL_ID='${planSpatialId}'`,
    //       true,
    //       ["MUNICIPALITY_NAME"]
    //     ),
    //     callbackResult: (res) => {
    //       this.pol = res.features[0];
    //       highlightFeature(res.features[0], this.map, {
    //         layerName: "SelectGraphicLayer",
    //         isZoom: true,
    //         isHiglightSymbol: true,
    //         highlighColor: [0, 0, 0, 0.25],
    //       });
    //       this.planId = planSpatialId;
    //     },
    //   });
    //   queryTask({
    //     ...querySetting(
    //       this.LayerID.Survey_Block,
    //       `PLAN_SPATIAL_ID='${planSpatialId}'`,
    //       false,
    //       ["BLOCK_NO", "BLOCK_SPATIAL_ID"]
    //     ),
    //     callbackResult: (res) => {
    //       this.setState({ blockNum: res.features });
    //     },
    //   });
    //   queryTask({
    //     ...querySetting(
    //       this.LayerID.Landbase_Parcel,
    //       `PLAN_SPATIAL_ID='${planSpatialId}'`,
    //       false,
    //       ["PARCEL_MAIN_LUSE", "PARCEL_SPATIAL_ID", "PARCEL_PLAN_NO"]
    //     ),
    //     callbackResult: (res) => {
    //       this.setState({
    //         parcelSearch: null,
    //         parcelNum: res.features.map((e, i) => {
    //           return {
    //             ...e,
    //             i,
    //           };
    //         }),
    //       });
    //     },
    //   });
    //   esriRequest(mapUrl + "/" + this.LayerID.Subdivision).then((response) => {
    //     this.setState({ subDivType: response.fields[7].domain.codedValues });
    //   });
    // };
    // onSubTypeChange = (e) => {
    //   clearGraphicFromLayer(this.map, "SelectLandsGraphicLayer");
    //   this.setState({
    //     subType_name: this.state.subDivType.filter((m) => m.code == e)[0].name,
    //     subTypeval: e,
    //     subNameval: undefined,
    //     blockval: undefined,
    //     parcelval: undefined,
    //   });
    //   queryTask({
    //     ...querySetting(
    //       this.LayerID.Subdivision,
    //       `SUBDIVISION_TYPE=${e} AND PLAN_SPATIAL_ID=${this.planId}`,
    //       false,
    //       ["SUBDIVISION_DESCRIPTION", "SUBDIVISION_SPATIAL_ID"]
    //     ),
    //     callbackResult: (res) => {
    //       this.setState({ subDivNames: res.features });
    //     },
    //   });
    // };
    // onSubNameChange = (e) => {
    //   clearGraphicFromLayer(this.map, "SelectLandsGraphicLayer");
    //   this.setState({
    //     subName_name: this.state.subDivNames.filter(
    //       (m) => m.attributes.SUBDIVISION_SPATIAL_ID == e
    //     )?.[0]?.attributes?.SUBDIVISION_DESCRIPTION,
    //     subNameval: e,
    //     blockval: undefined,
    //     parcelval: undefined,
    //     parcelNum: [],
    //     parcelId: null,
    //   });
    //   queryTask({
    //     ...querySetting(
    //       this.LayerID.Subdivision,
    //       `SUBDIVISION_SPATIAL_ID=${e}`,
    //       true,
    //       ["SUBDIVISION_SPATIAL_ID"]
    //     ),
    //     callbackResult: (res) => {
    //       this.pol = res.features[0];
    //       highlightFeature(res.features[0], this.map, {
    //         layerName: "SelectGraphicLayer",
    //         isZoom: true,
    //         isHiglightSymbol: true,
    //         highlighColor: [0, 0, 0, 0.25],
    //       });
    //     },
    //   });
    //   queryTask({
    //     ...querySetting(
    //       this.LayerID.Landbase_Parcel,
    //       `SUBDIVISION_SPATIAL_ID=${e}`,
    //       false,
    //       ["PARCEL_MAIN_LUSE", "PARCEL_SPATIAL_ID", "PARCEL_PLAN_NO"]
    //     ),
    //     callbackResult: (res) => {
    //       this.setState({
    //         parcelSearch: null,
    //         parcelNum: res.features.map((e, i) => {
    //           return {
    //             ...e,
    //             i,
    //           };
    //         }),
    //       });
    //     },
    //   });
    // };
    // onBlockChange = (e) => {
    //   clearGraphicFromLayer(this.map, "SelectLandsGraphicLayer");
    //   this.setState({
    //     block_no: this.state.blockNum.filter(
    //       (m) => m.attributes.BLOCK_SPATIAL_ID == e
    //     )?.[0]?.attributes?.BLOCK_NO,
    //     blockval: e,
    //     parcelval: undefined,
    //     parcelId: null,
    //     parcelNum: [],
    //   });
    //   queryTask({
    //     ...querySetting(
    //       this.LayerID.Survey_Block,
    //       `BLOCK_SPATIAL_ID=${e}`,
    //       true,
    //       ["BLOCK_SPATIAL_ID"]
    //     ),
    //     callbackResult: (res) => {
    //       this.pol = res.features[0];
    //       highlightFeature(res.features[0], this.map, {
    //         layerName: "SelectGraphicLayer",
    //         isZoom: true,
    //         isHiglightSymbol: true,
    //         highlighColor: [0, 0, 0, 0.25],
    //       });
    //     },
    //   });
    //   queryTask({
    //     ...querySetting(
    //       this.LayerID.Landbase_Parcel,
    //       `BLOCK_SPATIAL_ID=${e}`,
    //       false,
    //       ["PARCEL_SPATIAL_ID", "PARCEL_PLAN_NO"]
    //     ),
    //     callbackResult: (res) => {
    //       this.setState({
    //         parcelSearch: null,
    //         parcelNum: res.features.map((e, i) => {
    //           return {
    //             ...e,
    //             i,
    //           };
    //         }),
    //       });
    //     },
    //   });
    // };
    // onLandParcelChange = (f) => {
    //   if (!this.state.selectedLands.length) {
    //     var e = this.state.parcelNum.filter((m) => m.i === f)?.[0]?.attributes
    //       ?.PARCEL_SPATIAL_ID;
    //     this.setState({ parcelId: e, parcelval: f });
    //     this.RolBackPol = this.pol;
    //     this.RolBackParcelNum = this.state.parcelNum;
    //     queryTask({
    //       ...querySetting(
    //         this.LayerID.Landbase_Parcel,
    //         `PARCEL_SPATIAL_ID='${e}'`,
    //         true,
    //         ["PARCEL_SPATIAL_ID"]
    //       ),
    //       callbackResult: (res) => {
    //         this.selectedLandsT = [];
    //         highlightFeature(res.features[0], this.map, {
    //           layerName: "SelectGraphicLayer",
    //           strokeColor: [0, 0, 0],
    //           highlightWidth: 3,
    //           isHighlighPolygonBorder: true,
    //           isZoom: true,
    //           zoomFactor: 50,
    //         });
    //       },
    //     });
    //   } else {
    //     var g = this.state.parcelNum.filter((m) => m.i == f)[0];
    //     this.setState({ parcelId: g.attributes.PARCEL_SPATIAL_ID });
    //     highlightFeature(g, this.map, {
    //       layerName: "SelectGraphicLayer",
    //       strokeColor: [0, 0, 0],
    //       isHighlighPolygonBorder: true,
    //       highlightWidth: 3,
    //     });
    //     this.setState({ parcelval: f });
    //   }
    // };
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default()(this, "addParcelToSelect", () => {
      if (this.state.selectedLands && this.state.selectedLands.length > 0) {
        this.setState({
          parcelId: this.state.selectedLands[this.state.selectedLands.length - 1].id
        });
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_13__["intersectQueryTask"])({
          outFields: ["MUNICIPALITY_NAME", "PARCEL_MAIN_LUSE", "PARCEL_AREA", "PARCEL_LAT_COORD", "PARCEL_LONG_COORD", "PLAN_NO", "PARCEL_PLAN_NO", "USING_SYMBOL", "PARCEL_SPATIAL_ID"],
          geometry: this.state.selectedLands[this.state.selectedLands.length - 1].geometry,
          url: _mapviewer_config_map__WEBPACK_IMPORTED_MODULE_17__["mapUrl"] + "/" + this.LayerID.Landbase_Parcel,
          where: "PARCEL_PLAN_NO is not null",
          callbackResult: res => {
            Object(_common_common_func__WEBPACK_IMPORTED_MODULE_13__["getFeatureDomainName"])(res.features, this.LayerID.Landbase_Parcel).then(r => {
              res.features = res.features.map((e, i) => {
                return {
                  ...e,
                  i: uniqid()
                };
              });
              this.selectedLandsT.push(res);
              this.DrawGraph();
            });
          }
        });
      }
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default()(this, "DrawGraph", isclick => {
      if (!this.state.selectedLands.length && !isclick) {
        this.map.graphics.clear();
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_13__["clearGraphicFromLayer"])(this.map, "SelectLandsGraphicLayer");
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_13__["highlightFeature"])(this.RolBackPol, this.map, {
          layerName: "SelectGraphicLayer",
          isZoom: true,
          isHiglightSymbol: true,
          highlighColor: [255, 0, 0, 0.25]
        });
        this.setState({
          parcelSearch: null,
          parcelNum: this.RolBackParcelNum,
          parcelval: undefined
        });
      } else {
        this.parcelDis = Object(_Helpers__WEBPACK_IMPORTED_MODULE_24__["selectDis"])(this.selectedLandsT);
        this.setState({
          parcelSearch: null,
          parcelNum: this.parcelDis
        });
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_13__["clearGraphicFromLayer"])(this.map, "SelectLandsGraphicLayer");
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_13__["clearGraphicFromLayer"])(this.map, "SelectGraphicLayer");
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_13__["clearGraphicFromLayer"])(this.map, "ParcelPlanNoGraphicLayer");
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_13__["highlightFeature"])(this.parcelDis.filter(element => !this.state.selectedLands.find(i => i.id === element.attributes.PARCEL_SPATIAL_ID)), this.map, {
          layerName: "SelectLandsGraphicLayer",
          noclear: false,
          isZoom: false,
          isHiglightSymbol: true,
          highlighColor: [0, 255, 0, 0.5],
          zoomFactor: 50
        });

        /*this.parcelDis.filter(element => !this.state.selectedLands.find(i => i.id === element.attributes.PARCEL_SPATIAL_ID)).forEach((f)=>{
            addParcelNo( f.geometry.getExtent().getCenter() , this.map ,f.attributes.PARCEL_PLAN_NO+'', "ParcelPlanNoGraphicLayer",14,[0,0,0])
          })*/

        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_13__["highlightFeature"])(this.parcelDis.filter(element => this.state.selectedLands.find(i => i.id === element.attributes.PARCEL_SPATIAL_ID)), this.map, {
          layerName: "SelectLandsGraphicLayer",
          noclear: true,
          attr: {
            isParcel: true
          },
          isZoom: true,
          isHighlighPolygonBorder: true,
          zoomFactor: 50
        });

        /*this.parcelDis.filter(element => this.state.selectedLands.find(i => i.id === element.attributes.PARCEL_SPATIAL_ID)).forEach((f)=>{
            addParcelNo( f.geometry.getExtent().getCenter() , this.map ,f.attributes.PARCEL_PLAN_NO+'', "ParcelPlanNoGraphicLayer",14,[0,0,0])
          })*/
      }
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default()(this, "mapLoaded", map => {
      this.map = map;
      if (this.props.input && this.props.input.value && this.props.input.value.parcels) {
        var _this$props$input$val, _this$props$input$val2, _this$props$input$val3, _this$props$input$val4, _this$props$input$val5, _this$props$input$val6, _this$props$input$val7, _this$props$input$val8, _this$props$input$val9, _this$props$input$val10, _this$props$input$val11, _this$props$input$val12, _this$props$input$val13, _this$props$input$val14, _this$props$input$val15, _this$props$input$val16, _this$props$input$val17;
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_13__["highlightFeature"])(this.props.input.value.parcels, this.map, {
          layerName: "SelectLandsGraphicLayer",
          noclear: true,
          isZoom: true,
          attr: {
            isParcel: true
          },
          isHighlighPolygonBorder: true,
          zoomFactor: 50
        });
        const {
          input: {
            value
          }
        } = this.props;
        this.props.input.onChange({
          ...value,
          conditions: this.state.conditions,
          temp: {
            map: this.map,
            mun: (_this$props$input$val = this.props.input.value) === null || _this$props$input$val === void 0 ? void 0 : (_this$props$input$val2 = _this$props$input$val.temp) === null || _this$props$input$val2 === void 0 ? void 0 : _this$props$input$val2.mun,
            plan: (_this$props$input$val3 = this.props.input.value) === null || _this$props$input$val3 === void 0 ? void 0 : (_this$props$input$val4 = _this$props$input$val3.temp) === null || _this$props$input$val4 === void 0 ? void 0 : _this$props$input$val4.plan,
            subtype: (_this$props$input$val5 = this.props.input.value) === null || _this$props$input$val5 === void 0 ? void 0 : (_this$props$input$val6 = _this$props$input$val5.temp) === null || _this$props$input$val6 === void 0 ? void 0 : _this$props$input$val6.subtype,
            subname: (_this$props$input$val7 = this.props.input.value) === null || _this$props$input$val7 === void 0 ? void 0 : (_this$props$input$val8 = _this$props$input$val7.temp) === null || _this$props$input$val8 === void 0 ? void 0 : _this$props$input$val8.subname,
            block: (_this$props$input$val9 = this.props.input.value) === null || _this$props$input$val9 === void 0 ? void 0 : (_this$props$input$val10 = _this$props$input$val9.temp) === null || _this$props$input$val10 === void 0 ? void 0 : _this$props$input$val10.block,
            parcel: (_this$props$input$val11 = this.props.input.value) === null || _this$props$input$val11 === void 0 ? void 0 : (_this$props$input$val12 = _this$props$input$val11.temp) === null || _this$props$input$val12 === void 0 ? void 0 : _this$props$input$val12.parcel,
            coordinateParcel: (_this$props$input$val13 = this.props.input.value) === null || _this$props$input$val13 === void 0 ? void 0 : _this$props$input$val13.coordinateParcel,
            parcelNum: (_this$props$input$val14 = this.props.input.value) === null || _this$props$input$val14 === void 0 ? void 0 : (_this$props$input$val15 = _this$props$input$val14.temp) === null || _this$props$input$val15 === void 0 ? void 0 : _this$props$input$val15.parcelNum
          },
          parcels: [...((_this$props$input$val16 = this.props.input.value) === null || _this$props$input$val16 === void 0 ? void 0 : _this$props$input$val16.parcels)],
          parcelData: {
            ...((_this$props$input$val17 = this.props.input.value) === null || _this$props$input$val17 === void 0 ? void 0 : _this$props$input$val17.parcelData)
          }
        });
      }
      this.setState({
        mapLoaded: true
      });
      this.map.on("click", geo => {
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_13__["intersectQueryTask"])({
          outFields: ["MUNICIPALITY_NAME", "PARCEL_MAIN_LUSE", "PARCEL_AREA", "PARCEL_LAT_COORD", "PARCEL_LONG_COORD", "PLAN_NO", "PARCEL_PLAN_NO", "USING_SYMBOL", "PARCEL_SPATIAL_ID"],
          geometry: geo.mapPoint,
          url: _mapviewer_config_map__WEBPACK_IMPORTED_MODULE_17__["mapUrl"] + "/" + this.LayerID.Landbase_Parcel,
          where: "PARCEL_PLAN_NO is not null",
          callbackResult: res => {
            if (res.features.length > 0) {
              axios__WEBPACK_IMPORTED_MODULE_15___default.a.get(window.workFlowUrl + "/utilityType/" + this.props.mainObject.serviceSubmissionType.submission.utilitytype_id + "/utilityClass?municipalityCode=" + res.features[0].attributes.MUNICIPALITY_NAME).then(response => {
                this.cateogry = response.data;
              });
              this.setState({
                munval: res.features[0].attributes.MUNICIPALITY_NAME
              });
              Object(_common_common_func__WEBPACK_IMPORTED_MODULE_13__["getFeatureDomainName"])(res.features, this.LayerID.Landbase_Parcel).then(r => {
                this.setState({
                  parcelSearch: null,
                  parcelNum: res.features.map((e, i) => {
                    return {
                      ...e,
                      i
                    };
                  })
                });
                res.features = res.features.map((e, i) => {
                  return {
                    ...e,
                    i
                  };
                });
                if (this.selectedLandsT.length == 0 || this.selectedLands.length == 0) {
                  this.selectedLandsT.push(res);
                  this.DrawGraph(true);
                  this.onLandParcelChange(0);
                }
              });
            }
          }
        });
      });
      this.props.setCurrentMap(map);
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default()(this, "myChangeHandler", (name, event) => {
      this["edit_" + name] = event.target.value;
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default()(this, "OnParcelSelect", () => {
      this.setState({
        parcelval: undefined
      });
      Object(_common_common_func__WEBPACK_IMPORTED_MODULE_13__["clearGraphicFromLayer"])(this.map, "SelectGraphicLayer");
      Object(_common_common_func__WEBPACK_IMPORTED_MODULE_13__["clearGraphicFromLayer"])(this.map, "SelectLandsGraphicLayer");
      if (!this.state.selectedLands.filter(e => e.id === this.state.parcelId).length) {
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_13__["queryTask"])({
          ...Object(_Helpers__WEBPACK_IMPORTED_MODULE_24__["querySetting"])(this.LayerID.Landbase_Parcel, `PARCEL_SPATIAL_ID =${this.state.parcelId}`, true, ["PARCEL_AREA", "PARCEL_MAIN_LUSE", "PARCEL_LAT_COORD", "PARCEL_LONG_COORD", "PLAN_NO", "PARCEL_PLAN_NO", "USING_SYMBOL", "PARCEL_BLOCK_NO", "DISTRICT_NAME", "SUBDIVISION_DESCRIPTION", "PARCEL_MAIN_LUSE", "SUBDIVISION_TYPE", "MUNICIPALITY_NAME", "PARCEL_SPATIAL_ID"]),
          callbackResult: res => {
            if (this.state.selectedLands && this.state.selectedLands.length == 0) {
              Object(_common_common_func__WEBPACK_IMPORTED_MODULE_13__["queryTask"])({
                ...Object(_Helpers__WEBPACK_IMPORTED_MODULE_24__["querySetting"])(this.LayerID.Tbl_Parcel_Conditions, `USING_SYMBOL_CODE ='${res.features[0].attributes.USING_SYMBOL}'`, false, ["SLIDE_AREA", "MIN_FROT_OFFSET", "BUILDING_RATIO", "FRONT_OFFSET", "SIDE_OFFSET", "BACK_OFFSET", "FLOORS", "FLOOR_HEIGHT", "FAR", "ADD_FLOOR"]),
                callbackResult: condition => {
                  this.setState({
                    conditions: condition.features
                  });
                  Object(_common_common_func__WEBPACK_IMPORTED_MODULE_13__["getFeatureDomainName"])(res.features, this.LayerID.Landbase_Parcel).then(r => {
                    this.setToStore(r);
                    this.addParcelToSelect();
                  });
                }
              });
            } else {
              Object(_common_common_func__WEBPACK_IMPORTED_MODULE_13__["getFeatureDomainName"])(res.features, this.LayerID.Landbase_Parcel).then(r => {
                this.setToStore(r);
                this.addParcelToSelect();
                this.setState({
                  state: this.state
                });
              });
            }
          }
        });
      }
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default()(this, "setToStore", r => {
      console.log(this.state.coordinateParcel);
      let data;
      if (r) {
        r[0].attributes.category = this.cateogry;
        const {
          input: {
            value
          }
        } = this.props;
        data = {
          ...value,
          mapGraphics: [],
          conditions: this.state.conditions,
          temp: {
            map: this.map,
            mun: this.state.munval,
            plan: this.state.plan_no,
            subtype: this.state.subType_name,
            subname: this.state.subName_name,
            block: this.state.block_no,
            parcel: this.state.parcelval,
            coordinateParcel: this.state.coordinateParcel,
            parcelNum: this.parcelDis
          },
          parcels: [...this.state.selectedLands, {
            attributes: r[0].attributes,
            id: this.state.parcelId,
            geometry: JSON.parse(JSON.stringify(r[0].geometry))
          }],
          parcelData: {
            ...this.state.parcelData
          }
        };
        if (this.state.radioValue == 1) this.state.selectedLands.push({
          geometry: r[0].geometry,
          attributes: r[0].attributes,
          id: this.state.parcelId
        });
      } else {
        const {
          input: {
            value
          }
        } = this.props;
        data = {
          ...value,
          conditions: this.state.conditions,
          temp: {
            map: this.map,
            mun: this.state.munval,
            plan: this.state.plan_no,
            subtype: this.state.subType_name,
            subname: this.state.subName_name,
            block: this.state.block_no,
            parcel: this.state.parcelval,
            coordinateParcel: this.state.coordinateParcel,
            parcelNum: this.parcelDis
          },
          parcels: [...this.state.selectedLands],
          parcelData: {
            ...this.state.parcelData
          }
        };
      }
      this.props.input.onChange({
        ...data
      });
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default()(this, "LandHoverOn", f => {
      if (this.state.selectedLands.length) {
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_13__["clearGraphicFromLayer"])(this.map, "SelectGraphicLayer");
        var parcel = this.state.parcelNum.filter(m => m.i == f.key)[0];
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_13__["highlightFeature"])(parcel, this.map, {
          layerName: "SelectGraphicLayer",
          strokeColor: [0, 0, 0],
          isHighlighPolygonBorder: true,
          highlightWidth: 3
        });
      }
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default()(this, "LandHoverOff", f => {
      if (this.state.selectedLands.length) {
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_13__["clearGraphicFromLayer"])(this.map, "SelectGraphicLayer");
      }
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default()(this, "remove", item => {
      this.state.selectedLands.pop(item);
      if (this.state.selectedLands == 0) {
        this.state.parcelData = {};
      }
      this.setToStore();
      if (this.state.selectedLandsT) {
        this.state.selectedLandsT.pop(item);
      }
      this.DrawGraph();
      this.setState({
        selectedLands: [...this.state.selectedLands],
        parcelData: this.state.parcelData
      });
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default()(this, "updateDescValue", evt => {
      this.setState({
        parcel_desc: evt.target.value
      });
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default()(this, "updateareaValue", evt => {
      this.setState({
        parcel_area: evt.target.value
      });
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default()(this, "updateYValue", evt => {
      this.setState({
        y: evt.target.value
      });
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default()(this, "updateXValue", evt => {
      this.setState({
        x: evt.target.value
      });
    });
    this.PlanNum = [];
    this.cateogry = null;
    this.planId = null;
    this.parcelTs = [];
    this.selectedLandsT = [];
    this.selectedLands = [];
    this.selectionMode = false;
    this.parcel_fields = ["PARCEL_PLAN_NO", "PARCEL_AREA", "PARCEL_BLOCK_NO", "DISTRICT_NAME", "SUBDIVISION_TYPE", "SUBDIVISION_DESCRIPTION", "USING_SYMBOL"];
    this.parcelDataFields = {};
    this.parcelDataFields["north_length"] = {
      label: "طول الحد الشمالي (م)",
      placeholder: "من فضلك ادخل طول الحد الشمالي (م)",
      field: "inputNumber",
      name: "north_length",
      required: true
    };
    this.parcelDataFields["north_desc"] = {
      label: "وصف الحد الشمالي",
      placeholder: "من فضلك ادخل وصف الحد الشمالي",
      type: "text",
      name: "north_desc",
      maxLength: 200,
      required: true
    };
    this.parcelDataFields["south_length"] = {
      label: "طول الحد الجنوبي (م)",
      placeholder: "من فضلك ادخل طول الحد الجنوبي (م)",
      field: "inputNumber",
      name: "south_length",
      required: true
    };
    this.parcelDataFields["south_desc"] = {
      label: "وصف الحد الجنوبي",
      placeholder: "من فضلك ادخل وصف الحد الجنوبي",
      type: "text",
      name: "south_desc",
      maxLength: 200,
      required: true
    }, this.parcelDataFields["east_length"] = {
      label: "طول الحد الشرقي (م)",
      placeholder: "من فضلك ادخل طول الحد الشرقي (م)",
      field: "inputNumber",
      name: "east_length",
      required: true
    };
    this.parcelDataFields["east_desc"] = {
      label: "وصف الحد الشرقي",
      placeholder: "من فضلك ادخل وصف الحد الشرقي",
      type: "text",
      name: "east_desc",
      maxLength: 200,
      required: true
    };
    this.parcelDataFields["west_length"] = {
      label: "طول الحد الغربي (م)",
      placeholder: "من فضلك ادخل طول الحد الغربي (م)",
      field: "inputNumber",
      name: "west_length",
      required: true
    };
    this.parcelDataFields["west_desc"] = {
      label: "وصف الحد الغربي",
      placeholder: "من فضلك ادخل وصف الحد الغربي",
      type: "text",
      name: "west_desc",
      maxLength: 200,
      required: true
    };
    this.polygonPoints = [];
    this.state = {
      mapLoaded: false,
      radioValue: 1,
      munval: ((_props$input$value = props.input.value) === null || _props$input$value === void 0 ? void 0 : (_props$input$value$te = _props$input$value.temp) === null || _props$input$value$te === void 0 ? void 0 : _props$input$value$te.mun) || undefined,
      planeval: ((_props$input$value2 = props.input.value) === null || _props$input$value2 === void 0 ? void 0 : (_props$input$value2$t = _props$input$value2.temp) === null || _props$input$value2$t === void 0 ? void 0 : _props$input$value2$t.plan) || undefined,
      subTypeval: ((_props$input$value3 = props.input.value) === null || _props$input$value3 === void 0 ? void 0 : (_props$input$value3$t = _props$input$value3.temp) === null || _props$input$value3$t === void 0 ? void 0 : _props$input$value3$t.subtype) || undefined,
      subNameval: ((_props$input$value4 = props.input.value) === null || _props$input$value4 === void 0 ? void 0 : (_props$input$value4$t = _props$input$value4.temp) === null || _props$input$value4$t === void 0 ? void 0 : _props$input$value4$t.subname) || undefined,
      blockval: ((_props$input$value5 = props.input.value) === null || _props$input$value5 === void 0 ? void 0 : (_props$input$value5$t = _props$input$value5.temp) === null || _props$input$value5$t === void 0 ? void 0 : _props$input$value5$t.block) || undefined,
      selectedLands: props.input.value.parcels || [],
      parcelData: props.input.value.parcelData || {},
      parcelval: ((_props$input$value6 = props.input.value) === null || _props$input$value6 === void 0 ? void 0 : (_props$input$value6$t = _props$input$value6.temp) === null || _props$input$value6$t === void 0 ? void 0 : _props$input$value6$t.parcel) || undefined,
      blockNum: [],
      conditions: props.input.value.conditions || undefined,
      coordinateParcel: (_props$input$value7 = props.input.value) === null || _props$input$value7 === void 0 ? void 0 : (_props$input$value7$t = _props$input$value7.temp) === null || _props$input$value7$t === void 0 ? void 0 : _props$input$value7$t.coordinateParcel,
      planSersh: null,
      subDivNames: [],
      subDivType: [],
      parcelNum: ((_props$input$value8 = props.input.value) === null || _props$input$value8 === void 0 ? void 0 : (_props$input$value8$t = _props$input$value8.temp) === null || _props$input$value8$t === void 0 ? void 0 : _props$input$value8$t.parcelNum) || [],
      parcelNumS: [],
      MunicipalityNames: [],
      PlanNum: [],
      parcelId: null,
      mapExtend: null,
      parcelSearch: null,
      poly: null,
      polygonPoints: [],
      x: "",
      y: "",
      selectedLands: ((_props$input$value9 = props.input.value) === null || _props$input$value9 === void 0 ? void 0 : _props$input$value9.parcels) || []
    };
  }
  handleDelete(index) {
    this.polygonPoints.splice(index, 1);
    this.setState({
      polygonPoints: this.polygonPoints
    });
    this.setState({
      state: this.state
    });
  }
  componentDidMount() {
    Object(_common_common_func__WEBPACK_IMPORTED_MODULE_13__["getInfo"])().then(res => {
      //
      this.LayerID = res;
      Object(_common__WEBPACK_IMPORTED_MODULE_26__["getParcels"])(this, null, "", {
        returnDistinctValues: true
      }, ["MUNICIPALITY_NAME"]).then(features => {
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_13__["getFeatureDomainName"])(features, this.LayerID.Landbase_Parcel).then(features => {
          this.setState({
            MunicipalityNames: features.filter(r => r.attributes.MUNICIPALITY_NAME).map(r => {
              return {
                code: r.attributes.MUNICIPALITY_NAME_Code,
                name: r.attributes.MUNICIPALITY_NAME
              };
            }),
            allParcels: features
          }, () => {
            this.loadLists = true;
            if (this.state.munval) {
              Object(_common__WEBPACK_IMPORTED_MODULE_26__["onMunChange"])(this, this.state.munval, () => {
                Object(_common__WEBPACK_IMPORTED_MODULE_26__["onPlaneChange"])(this, this.state.planeval, () => {
                  Object(_common__WEBPACK_IMPORTED_MODULE_26__["onSubTypeChange"])(this, this.state.subTypeval, () => {
                    Object(_common__WEBPACK_IMPORTED_MODULE_26__["onSubNameChange"])(this, this.state.subNameval, () => {
                      Object(_common__WEBPACK_IMPORTED_MODULE_26__["onBlockChange"])(this, this.state.blockval, () => {
                        Object(_common__WEBPACK_IMPORTED_MODULE_26__["onLandParcelChange"])(this, this.state.parcelval, () => {});
                      });
                    });
                  });
                });
              });
            }
            this.loadLists = false;
          });
        });
      });
      // esriRequest(mapUrl + "/" + this.LayerID.Municipality_Boundary).then(
      //   (response) => {
      //     this.setState({
      //       MunicipalityNames:
      //         response.types[0].domains.MUNICIPALITY_NAME.codedValues,
      //     });
      //   }
      // );
    });
  }
  componentDidUpdate() {
    const {
      input,
      mainObject,
      currentModule: {
        id
      }
    } = this.props;
    if (input.value.isReset) {
      input.value.isReset = false;
      this.resetFields();
      this.map.enableMapNavigation();
    }
  }
  shouldComponentUpdate(nextProps, nextState) {
    var _values$landData, _values$landData2;
    console.log("coords", nextProps);
    const values = Object(_main_helpers_functions_filters__WEBPACK_IMPORTED_MODULE_14__["default"])({
      key: "FormValues",
      form: "stepForm"
    });
    if (this.state.radioValue != (values === null || values === void 0 ? void 0 : (_values$landData = values.landData) === null || _values$landData === void 0 ? void 0 : _values$landData.ParcelChooseType)) this.setState({
      radioValue: values === null || values === void 0 ? void 0 : (_values$landData2 = values.landData) === null || _values$landData2 === void 0 ? void 0 : _values$landData2.ParcelChooseType
    });
    return !lodash_isEqual__WEBPACK_IMPORTED_MODULE_10___default()({
      state: this.state,
      props: this.props
    }, {
      props: nextProps,
      state: nextState
    });
  }
  enableEdit(name, i) {
    this.setState({
      [name + "_isEdit_" + i]: true
    });
  }
  showEditBtn(name, value) {
    if (name == "USING_SYMBOL") {
      return value == null;
    } else {
      return ["PARCEL_AREA", "PARCEL_BLOCK_NO", "DISTRICT_NAME", "SUBDIVISION_TYPE", "SUBDIVISION_DESCRIPTION"].indexOf(name) > -1;
    }
  }
  saveEdit(id, name, i) {
    let findParcel = this.props.input.value.parcels.find(p => {
      var _p$attributes;
      return [p === null || p === void 0 ? void 0 : p.id, p === null || p === void 0 ? void 0 : (_p$attributes = p.attributes) === null || _p$attributes === void 0 ? void 0 : _p$attributes.PARCEL_SPATIAL_ID].indexOf(id) != -1;
    });
    if (this["edit_" + name]) {
      findParcel.attributes[name] = this["edit_" + name];
      let selectLand = this.state.selectedLands.find(p => {
        var _p$attributes2;
        return [p === null || p === void 0 ? void 0 : p.id, p === null || p === void 0 ? void 0 : (_p$attributes2 = p.attributes) === null || _p$attributes2 === void 0 ? void 0 : _p$attributes2.PARCEL_SPATIAL_ID].indexOf(id) != -1;
      });
      selectLand.attributes[name] = this["edit_" + name];
      this.props.input.onChange({
        ...this.props.input.value,
        parcels: [...this.props.input.value.parcels],
        parcelData: {
          ...this.props.input.value.parcelData
        }
      });
      this.setState({
        [name + "_isEdit_" + i]: false,
        selectedLands: [...this.state.selectedLands],
        parcelData: {
          ...this.state.parcelData
        }
      });
    } else {
      this.setState({
        [name + "_isEdit_" + i]: false,
        parcelData: {
          ...this.state.parcelData
        }
      });
    }
  }
  addPoint() {
    Object(_common_esri_loader__WEBPACK_IMPORTED_MODULE_16__["LoadModules"])(["esri/geometry/Point"]).then(([Point]) => {
      let point = new Point({
        x: parseFloat(this.state.x),
        y: parseFloat(this.state.y),
        spatialReference: {
          wkid: 4326
        }
      });
      document.getElementById("coorForm").reset();
      this.polygonPoints = this.polygonPoints || [];
      this.polygonPoints.push(point);
      this.setState({
        polygonPoints: this.polygonPoints,
        x: null,
        y: null
      });
    });
  }
  zoomtopoint() {
    Object(_common_esri_loader__WEBPACK_IMPORTED_MODULE_16__["LoadModules"])(["esri/geometry/Polygon", "esri/geometry/Point"]).then(([Polygon, Point]) => {
      if (!this.state.munval) {
        this.setState({
          requiredMun: true
        });
        return;
      }
      this.props.setLoading(true);
      this.polygonPoints.push(this.polygonPoints[0]);
      Object(_common_common_func__WEBPACK_IMPORTED_MODULE_13__["project"])(this.polygonPoints, 32639, t => {
        let polygon = new Polygon({
          rings: [t.map(polygon => {
            return [polygon.x, polygon.y];
          })],
          spatialReference: this.map.spatialReference
        });
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_13__["intersectQueryTask"])({
          outFields: ["MUNICIPALITY_NAME", "PARCEL_MAIN_LUSE", "PARCEL_AREA", "PARCEL_LAT_COORD", "PARCEL_LONG_COORD", "PLAN_NO", "PARCEL_PLAN_NO", "USING_SYMBOL", "PARCEL_SPATIAL_ID"],
          geometry: polygon,
          url: _mapviewer_config_map__WEBPACK_IMPORTED_MODULE_17__["mapUrl"] + "/" + this.LayerID.Landbase_Parcel,
          callbackResult: res => {
            if (res.features && res.features.length == 0) {
              var _this$state$Municipal, _this$state$Municipal2;
              Object(_common_common_func__WEBPACK_IMPORTED_MODULE_13__["highlightFeature"])([{
                geometry: polygon
              }], this.map, {
                layerName: "SelectGraphicLayer",
                isZoom: true,
                zoomFactor: 10,
                isHighlighPolygonBorder: true,
                highlighColor: [0, 255, 255, 0.7]
              });
              this.setState({
                requiredMun: false,
                coordinateParcel: {
                  geometry: polygon,
                  attributes: {
                    MUNICIPALITY_NAME_Code: this.state.munval,
                    PARCEL_PLAN_NO: this.state.parcel_desc,
                    PARCEL_AREA: this.state.parcel_area,
                    MUNICIPALITY_NAME: (_this$state$Municipal = this.state.MunicipalityNames) === null || _this$state$Municipal === void 0 ? void 0 : _this$state$Municipal.find(x => {
                      return x.code == this.state.munval;
                    }).name
                  }
                }
              });
              this.setToStore([{
                geometry: polygon,
                attributes: {
                  MUNICIPALITY_NAME_Code: this.state.munval,
                  PARCEL_PLAN_NO: this.state.parcel_desc,
                  PARCEL_AREA: this.state.parcel_area,
                  MUNICIPALITY_NAME: (_this$state$Municipal2 = this.state.MunicipalityNames) === null || _this$state$Municipal2 === void 0 ? void 0 : _this$state$Municipal2.find(x => {
                    return x.code == this.state.munval;
                  }).name
                }
              }]);
              this.props.setLoading(false);
            } else {
              antd_lib_message__WEBPACK_IMPORTED_MODULE_6___default.a.error("الأرض المختارة تتقاطع مع أرض بخارطة الأساس . يمكنك اختيار الارض بالضغط على الخريطة لاضافتها");
              this.props.setLoading(false);
            }
          }
        });
      });
    });
  }
  convertToArabic(num) {
    if (num) {
      var id = ["۰", "۱", "۲", "۳", "٤", "٥", "٦", "۷", "۸", "۹"];
      return num.replace(/[0-9]/g, function (w) {
        return id[+w];
      });
    } else {
      return "";
    }
  }
  replaceAll(str, find, replace) {
    return str.replace(new RegExp(find, "g"), replace);
  }
  removeCoordinateParcel() {
    this.setState({
      coordinateParcel: null
    });
  }
  render() {
    var _this$state$Municipal3, _this$state$Municipal4;
    const {
      selectedLands,
      MunicipalityNames,
      subDivType,
      subDivNames,
      subNameval,
      blockNum,
      blockval,
      PlanNum,
      mapLoaded,
      planeval,
      parcelSearch,
      parcelNum,
      parcelval,
      conditions,
      radioValue,
      coordinateParcel
    } = this.state;
    const {
      fullMapWidth
    } = this.props;
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("div", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement(react_sticky__WEBPACK_IMPORTED_MODULE_25__["StickyContainer"], {
      style: {
        direction: "ltr"
      }
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement(react_sticky__WEBPACK_IMPORTED_MODULE_25__["Sticky"], {
      bottomOffset: 80
    }, ({
      style
    }) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement(_MapBtnsComponent__WEBPACK_IMPORTED_MODULE_20__["default"], _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_4___default()({
      style: style
    }, this.props)))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("div", {
      className: "content-section implementation"
    }, mapLoaded && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("div", {
      style: {
        padding: "10px"
      }
    }, radioValue == 2 ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("div", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement(antd_lib_select__WEBPACK_IMPORTED_MODULE_9___default.a, {
      getPopupContainer: trigger => trigger.parentNode,
      autoFocus: true,
      onChange: val => {
        Object(_common__WEBPACK_IMPORTED_MODULE_26__["onMunChange"])(this, val);
      },
      showSearch: true,
      value: this.state.munval,
      placeholder: "\u0627\u062E\u062A\u0631 \u0627\u0633\u0645 \u0627\u0644\u0628\u0644\u062F\u064A\u0647",
      disabled: !((_this$state$Municipal3 = this.state.MunicipalityNames) !== null && _this$state$Municipal3 !== void 0 && _this$state$Municipal3.length),
      optionFilterProp: "children",
      filterOption: (input, option) => {
        if (option.props.children) {
          return option.props.children.find(i => {
            return i && i.indexOf(input.trim().toLowerCase()) >= 0;
          }) != null;
        } else {
          return false;
        }
      }
    }, MunicipalityNames === null || MunicipalityNames === void 0 ? void 0 : MunicipalityNames.map(e => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement(Option, {
      key: e.code,
      value: e.code
    }, e.name, " "))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement(antd_lib_form__WEBPACK_IMPORTED_MODULE_3___default.a, {
      id: "coorForm",
      className: "top1",
      style: {
        direction: "rtl",
        padding: "5px"
      }
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("div", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("label", null, "\u0648\u0635\u0641 \u0627\u0644\u0623\u0631\u0636"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("input", {
      className: "ant-input",
      type: "text",
      placeholder: "\u0648\u0635\u0641 \u0627\u0644\u0623\u0631\u0636",
      required: true,
      value: this.state.parcel_desc,
      onChange: this.updateDescValue
    }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("label", null, "\u0645\u0633\u0627\u062D\u0629 \u0627\u0644\u0623\u0631\u0636"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("input", {
      className: "ant-input",
      type: "text",
      placeholder: "\u0645\u0633\u0627\u062D\u0629 \u0627\u0644\u0623\u0631\u0636",
      required: true,
      value: this.state.parcel_area,
      onChange: this.updateareaValue
    }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("label", null, "\u062F\u0648\u0627\u0626\u0631 \u0627\u0644\u0639\u0631\u0636"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("input", {
      className: "ant-input",
      type: "number",
      placeholder: "ex 26.424895",
      required: true,
      value: this.state.y,
      onChange: this.updateYValue
    }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("label", {
      style: {
        marginTop: "15px"
      }
    }, "\u062E\u0637 \u0627\u0644\u0637\u0648\u0644"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("input", {
      className: "ant-input",
      type: "number",
      placeholder: "ex 50.067738",
      required: true,
      value: this.state.x,
      onChange: this.updateXValue
    })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("div", {
      style: {
        display: "grid",
        gridGap: "10px",
        marginTop: "20px"
      }
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("button", {
      type: "button",
      className: "btn btn-warning",
      onClick: this.addPoint.bind(this)
    }, " ", "\u0625\u0636\u0627\u0641\u0629 \u0627\u0644\u0646\u0642\u0637\u0629"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("button", {
      type: "button",
      disabled: this.state.polygonPoints.length < 3 || coordinateParcel || !this.state.requiredMun,
      className: "btn btn-success",
      onClick: this.zoomtopoint.bind(this)
    }, " ", "\u0625\u0636\u0627\u0641\u0629 \u0627\u0644\u0623\u0631\u0636")), this.state.polygonPoints.length > 0 && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("div", {
      style: {
        marginTop: "20px"
      }
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("table", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("thead", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("th", null, "\u062F\u0648\u0627\u0626\u0631 \u0627\u0644\u0639\u0631\u0636"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("th", null, "\u062E\u0637\u0648\u0637 \u0627\u0644\u0637\u0648\u0644")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("tbody", null, this.state.polygonPoints.map((point, k) => {
      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("tr", {
        key: k
      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("td", null, point.y), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("td", null, point.x), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("td", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("button", {
        type: "button",
        className: " btn btn-danger ",
        onClick: this.handleDelete.bind(this, k)
      }, "\u062D\u0630\u0641")));
    })))))) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("div", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement(antd_lib_select__WEBPACK_IMPORTED_MODULE_9___default.a, {
      getPopupContainer: trigger => trigger.parentNode,
      autoFocus: true,
      onChange: val => {
        Object(_common__WEBPACK_IMPORTED_MODULE_26__["onMunChange"])(this, val);
      },
      showSearch: true,
      value: this.state.munval,
      placeholder: "\u0627\u062E\u062A\u0631 \u0627\u0633\u0645 \u0627\u0644\u0628\u0644\u062F\u064A\u0647",
      disabled: !((_this$state$Municipal4 = this.state.MunicipalityNames) !== null && _this$state$Municipal4 !== void 0 && _this$state$Municipal4.length),
      optionFilterProp: "children",
      filterOption: (input, option) => {
        if (option.props.children) {
          return option.props.children.find(i => {
            return i && i.indexOf(input.trim().toLowerCase()) >= 0;
          }) != null;
        } else {
          return false;
        }
      }
    }, MunicipalityNames === null || MunicipalityNames === void 0 ? void 0 : MunicipalityNames.map(e => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement(Option, {
      key: e.code,
      value: e.code
    }, e.name, " "))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement(antd_lib_select__WEBPACK_IMPORTED_MODULE_9___default.a, {
      getPopupContainer: trigger => trigger.parentNode,
      onChange: val => {
        Object(_common__WEBPACK_IMPORTED_MODULE_26__["onPlaneChange"])(this, val);
      },
      showSearch: true,
      autoFocus: true,
      disabled: !PlanNum.length,
      optionFilterProp: "children",
      filterOption: (input, option) => {
        if (option.props.children) {
          var _option$props$childre, _option$props$childre2;
          return ((_option$props$childre = option.props.children) === null || _option$props$childre === void 0 ? void 0 : (_option$props$childre2 = _option$props$childre.toLowerCase()) === null || _option$props$childre2 === void 0 ? void 0 : _option$props$childre2.indexOf(Object(_common_common_func__WEBPACK_IMPORTED_MODULE_13__["convertToArabic"])(input))) != -1;
        } else {
          return false;
        }
      },
      value: planeval,
      placeholder: "\u0631\u0642\u0645 \u0627\u0644\u0645\u062E\u0637\u0637",
      notFoundContent: "not found"
    }, PlanNum
    //.slice(0, 100)
    .map((d, i) => {
      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement(Option, {
        key: i,
        value: d.i
      }, Object(_common_common_func__WEBPACK_IMPORTED_MODULE_13__["localizeNumber"])(d.attributes.PLAN_NO));
    })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement(antd_lib_select__WEBPACK_IMPORTED_MODULE_9___default.a, {
      getPopupContainer: trigger => trigger.parentNode,
      autoFocus: true,
      onChange: val => {
        Object(_common__WEBPACK_IMPORTED_MODULE_26__["onSubTypeChange"])(this, val);
      },
      showSearch: true,
      disabled: !subDivType.length,
      value: this.state.subTypeval,
      placeholder: "نوع التقسيم",
      optionFilterProp: "children",
      filterOption: (input, option) => {
        if (option.props.children) {
          var _option$props$childre3;
          return ((_option$props$childre3 = option.props.children) === null || _option$props$childre3 === void 0 ? void 0 : _option$props$childre3.indexOf(Object(_common_common_func__WEBPACK_IMPORTED_MODULE_13__["convertToArabic"])(input))) != -1;
        } else {
          return false;
        }
      }
    }, subDivType
    //.slice(0, 100)
    .map((e, i) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement(Option, {
      key: i,
      value: e.code
    }, " ", e.name, " "))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement(antd_lib_select__WEBPACK_IMPORTED_MODULE_9___default.a, {
      getPopupContainer: trigger => trigger.parentNode,
      autoFocus: true,
      onChange: val => {
        Object(_common__WEBPACK_IMPORTED_MODULE_26__["onSubNameChange"])(this, val);
      },
      showSearch: true,
      disabled: !subDivNames.length,
      placeholder: "\u0627\u0633\u0645 \u0627\u0644\u062A\u0642\u0633\u064A\u0645",
      value: subNameval,
      optionFilterProp: "children",
      filterOption: (input, option) => {
        var _option$props$childre4, _option$props$childre5;
        return ((_option$props$childre4 = option.props.children) === null || _option$props$childre4 === void 0 ? void 0 : (_option$props$childre5 = _option$props$childre4.toLowerCase()) === null || _option$props$childre5 === void 0 ? void 0 : _option$props$childre5.indexOf(Object(_common_common_func__WEBPACK_IMPORTED_MODULE_13__["convertToArabic"])(input))) != -1;
      }
    }, subDivNames
    //.slice(0, 100)
    .map((e, i) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement(Option, {
      key: i,
      value: e.attributes.SUBDIVISION_SPATIAL_ID
    }, " ", e.attributes.SUBDIVISION_DESCRIPTION))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement(antd_lib_select__WEBPACK_IMPORTED_MODULE_9___default.a, {
      getPopupContainer: trigger => trigger.parentNode,
      autoFocus: true,
      onChange: val => {
        Object(_common__WEBPACK_IMPORTED_MODULE_26__["onBlockChange"])(this, val);
      },
      showSearch: true,
      disabled: !blockNum.length,
      value: blockval,
      placeholder: "\u0631\u0642\u0645 \u0627\u0644\u0628\u0644\u0643",
      optionFilterProp: "children",
      filterOption: (input, option) => {
        var _option$props$childre6;
        return ((_option$props$childre6 = option.props.children) === null || _option$props$childre6 === void 0 ? void 0 : _option$props$childre6.indexOf(Object(_common_common_func__WEBPACK_IMPORTED_MODULE_13__["convertToArabic"])(input || ""))) != -1;
      }
    }, blockNum
    //.slice(0, 100)
    .map((e, i) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement(Option, {
      key: i,
      value: e.attributes.BLOCK_SPATIAL_ID
    }, Object(_common_common_func__WEBPACK_IMPORTED_MODULE_13__["localizeNumber"])(e.attributes.BLOCK_SPATIAL_ID)))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement(antd_lib_select__WEBPACK_IMPORTED_MODULE_9___default.a, {
      getPopupContainer: trigger => trigger.parentNode,
      autoFocus: true,
      onChange: val => {
        Object(_common__WEBPACK_IMPORTED_MODULE_26__["onLandParcelChange"])(this, val);
      },
      showSearch: true,
      disabled: parcelNum && !parcelNum.length,
      filterOption: (input, option) => {
        if (option.props.children) {
          var _option$props$childre7;
          return ((_option$props$childre7 = option.props.children) === null || _option$props$childre7 === void 0 ? void 0 : _option$props$childre7.indexOf(Object(_common_common_func__WEBPACK_IMPORTED_MODULE_13__["convertToArabic"])(input))) != -1;
        } else {
          return false;
        }
      },
      onSearch: e => {
        this.setState({
          parcelSearch: e
        });
        Object(_common__WEBPACK_IMPORTED_MODULE_26__["onSearch"])(this, e);
      },
      value: parcelval,
      placeholder: "\u0631\u0642\u0645 \u0642\u0637\u0639\u0629 \u0627\u0644\u0627\u0631\u0636"
    }, parcelNum && parcelNum.filter((e, i) => {
      if (parcelSearch) {
        if (this.state.selectedLands.length) {
          return !this.state.selectedLands.find(tt => tt.attributes.PARCEL_SPATIAL_ID == e.attributes.PARCEL_SPATIAL_ID);
        } else {
          return e.attributes.PARCEL_PLAN_NO && e.attributes.PARCEL_PLAN_NO.toLowerCase().indexOf(parcelSearch.toLowerCase()) >= 0;
        }
      } else {
        if (selectedLands.length) {
          return !selectedLands.find(tt => tt.attributes.PARCEL_PLAN_NO == e.attributes.PARCEL_PLAN_NO) && e.attributes.PARCEL_PLAN_NO;
        } else {
          return e.attributes.PARCEL_PLAN_NO;
        }
      }
    }).slice(0, 100).map((e, i) => {
      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement(Option, {
        onMouseEnter: this.LandHoverOn,
        onMouseLeave: this.LandHoverOff,
        key: e.attributes.PARCEL_SPATIAL_ID,
        value: e.i
      }, Object(_common_common_func__WEBPACK_IMPORTED_MODULE_13__["localizeNumber"])(e.attributes.PARCEL_PLAN_NO));
    })), this.state.selectedLands.length > 0 && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("label", {
      style: {
        marginTop: 10,
        marginBottom: 10
      }
    }, "\u0644\u0627\u062E\u062A\u064A\u0627\u0631 \u0627\u0644\u0627\u0631\u0627\u0636\u0649 \u0627\u0644\u0645\u062C\u0627\u0648\u0631\u0629. \u064A\u0631\u062C\u0649 \u0627\u0644\u0627\u062E\u062A\u064A\u0627\u0631 \u0645\u0646 \u0642\u0627\u0626\u0645\u0629 \u0631\u0642\u0645 \u0642\u0637\u0639\u0629 \u0627\u0644\u0623\u0631\u0636"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement(antd_lib_button__WEBPACK_IMPORTED_MODULE_1___default.a, {
      className: "add-gis",
      disabled: this.state.parcelId === null,
      onClick: this.OnParcelSelect
    }, "\u0625\u0636\u0627\u0641\u0629 \u0627\u0644\u0623\u0631\u0636"))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement(_MapComponent_MapComponent__WEBPACK_IMPORTED_MODULE_19__["default"], _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_4___default()({
      mapload: this.mapLoaded.bind(this)
    }, this.props))), mapLoaded && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("div", {
      style: {
        gridColumn: "1/3"
      }
    }, coordinateParcel && radioValue == 2 && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("div", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("table", {
      className: "table table-bordered",
      style: {
        marginTop: "1%"
      }
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("thead", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("th", null, "\u0627\u0633\u0645 \u0627\u0644\u0628\u0644\u062F\u064A\u0629"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("th", null, "\u0648\u0635\u0641 \u0627\u0644\u0623\u0631\u0636"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("th", null, "\u0645\u0633\u0627\u062D\u0629 \u0627\u0644\u0623\u0631\u0636"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("th", null, "\u0627\u0644\u0625\u062C\u0631\u0627\u0621\u0627\u062A")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("tbody", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("tr", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("td", null, coordinateParcel.attributes.MUNICIPALITY_NAME), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("td", null, coordinateParcel.attributes.PARCEL_PLAN_NO), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("td", null, coordinateParcel.attributes.PARCEL_AREA), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("td", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("button", {
      className: " btn btn-danger ",
      onClick: this.removeCoordinateParcel.bind(this)
    }, "\u062D\u0630\u0641")))))), selectedLands && selectedLands.length > 0 && radioValue == 1 && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("div", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("h1", {
      className: "titleSelectedParcel"
    }, "\u0627\u0644\u0623\u0631\u0627\u0636\u064A \u0627\u0644\u0645\u062E\u062A\u0627\u0631\u0629"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("table", {
      className: "table table-bordered",
      style: {
        marginTop: "1%"
      }
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("thead", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("tr", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("th", null, "\u0631\u0642\u0645 \u0627\u0644\u0642\u0637\u0639\u0647"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("th", null, "\u0627\u0644\u0645\u0633\u0627\u062D\u0647 \u06452"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("th", null, "\u0631\u0642\u0645 \u0627\u0644\u0628\u0644\u0643"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("th", null, "\u0627\u0644\u062D\u064A"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("th", null, "\u0646\u0648\u0639 \u0627\u0644\u062A\u0642\u0633\u064A\u0645"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("th", null, "\u0627\u0633\u0645 \u0627\u0644\u062A\u0642\u0633\u064A\u0645"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("th", null, "\u0631\u0645\u0632 \u0627\u0644\u0627\u0633\u062A\u062E\u062F\u0627\u0645"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("th", null, " \u062E\u064A\u0627\u0631\u0627\u062A"))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("tbody", null, selectedLands.map((e, i) => {
      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("tr", {
        key: i
      }, this.parcel_fields.map((field, k) => {
        return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("td", {
          key: k
        }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("div", null, !this.state[field + "_isEdit_" + i] ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("span", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("span", null, e.attributes[field] || "غير متوفر"), this.showEditBtn(field, e.attributes[field]) && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("span", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("button", {
          className: "btn",
          style: {
            marginRight: "20px"
          },
          onClick: this.enableEdit.bind(this, field, i)
        }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("i", {
          className: "fas fa-edit"
        })))) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("span", {
          style: {
            display: "grid",
            gridTemplateColumns: "1fr auto"
          }
        }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("input", {
          key: i,
          className: "form-control",
          type: "text",
          onChange: this.myChangeHandler.bind(this, field)
        }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("button", {
          className: "btn",
          style: {
            marginRight: "20px"
          },
          onClick: this.saveEdit.bind(this, e.id, field, i)
        }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("i", {
          className: "fa fa-floppy-o"
        })))));
      }), i === selectedLands.length - 1 ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("td", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("button", {
        className: "btn follow",
        style: {
          margin: "0px 5px"
        },
        onClick: () => {
          this.openPopup(this);
        }
      }, "\u062D\u062F\u0648\u062F \u0648 \u0623\u0628\u0639\u0627\u062F \u0627\u0644\u0623\u0631\u0636"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11___default.a.createElement("button", {
        className: "bn btn btn-danger ",
        onClick: this.remove.bind(this, e)
      }, "\u062D\u0630\u0641")) : "");
    }))),  false && /*#__PURE__*/false)));
  }
}
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_23__["connect"])(_mapping__WEBPACK_IMPORTED_MODULE_21__["mapStateToProps"], appMapDispatchToProps)(IdentifyComponnentCoord));

/***/ })

}]);
//# sourceMappingURL=102.min.js.map