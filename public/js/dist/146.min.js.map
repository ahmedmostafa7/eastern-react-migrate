{"version":3,"file":"146.min.js","sources":["webpack:///./src/app/components/wizard/components/stepContent/sections/sectionTypes/wizardSummery/components/msa7yData.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { host, filesHost } from \"config\";\r\nimport {withTranslation} from \"react-i18next\";\r\nimport { mapStateToProps, mapDispatchToProps } from \"../mapping\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  convertToArabic,\r\n  remove_duplicate,\r\n  checkImage,\r\n  localizeNumber,\r\n} from \"../../../../../../../inputs/fields/identify/Component/common/common_func\";\r\nimport { Checkbox } from \"antd\";\r\nclass msa7yData extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.parcel_fields_headers = {\r\n      NORTH_EAST_DIRECTION: \"شمال / شرق\",\r\n      NORTH_WEST_DIRECTION: \"شمال / غرب\",\r\n      SOUTH_EAST_DIRECTION: \"جنوب / شرق\",\r\n      SOUTH_WEST_DIRECTION: \"جنوب / غرب\",\r\n    };\r\n  }\r\n\r\n  resizeImage = (evt) => {\r\n    evt.target.style.height =\r\n      evt.target.clientWidth - evt.target.clientWidth * 0.3 + \"px\";\r\n  };\r\n\r\n  render() {\r\n    //console.log(\"GG\", this.props.mainObject);\r\n\r\n    const {\r\n      t,\r\n      mainObject: {\r\n        data_msa7y: {\r\n          msa7yData: {\r\n            image_uploader,\r\n            cadDetails: {\r\n              suggestionsParcels,\r\n              temp: { isPlan, isKrokyUpdateContract, isUpdateContract, isFarz },\r\n            },\r\n            benefitsType,\r\n            usingSymbolType,\r\n            submissionType,\r\n            screenshotURL,\r\n          },\r\n\r\n        },\r\n      },\r\n    } = this.props;\r\n\r\n    // const {\r\n    //   treeNode: {\r\n    //     option: { tabType, data },\r\n    //   },\r\n    // } = this.props;\r\n\r\n    let data =\r\n      (!this.props?.treeNode?.option?.data && this.props?.data?.data) ||\r\n      (!this.props?.data?.data && this.props?.data) ||\r\n      this.props?.treeNode?.option?.data ||\r\n      this.props?.data?.data;\r\n    let tabType =\r\n      (!this.props?.treeNode?.option?.tabType && this.props?.data?.tabType) ||\r\n      this.props?.treeNode?.option?.tabType;\r\n\r\n    var northLength = 0,\r\n      eastLength = 0,\r\n      southLength = 0,\r\n      westLength = 0;\r\n\r\n    data?.data?.forEach((direction) => {\r\n      direction?.data?.forEach((polygon) => {\r\n        if (polygon?.lines) {\r\n          polygon?.lines?.forEach((line, key) => {\r\n            if (polygon?.lineDirection == 1) {\r\n              northLength =\r\n                (direction?.totalLength && +direction?.totalLength) ||\r\n                northLength + line?.text;\r\n            } else if (polygon?.lineDirection == 4) {\r\n              westLength =\r\n                (direction?.totalLength && +direction?.totalLength) ||\r\n                westLength + line?.text;\r\n            } else if (polygon?.lineDirection == 3) {\r\n              southLength =\r\n                (direction?.totalLength && +direction?.totalLength) ||\r\n                southLength + line?.text;\r\n            } else if (polygon?.lineDirection == 2) {\r\n              eastLength =\r\n                (direction?.totalLength && +direction?.totalLength) ||\r\n                eastLength + line?.text;\r\n            }\r\n          });\r\n        } else {\r\n          if (polygon?.lineDirection == 1) {\r\n            northLength =\r\n              (direction?.totalLength && +direction?.totalLength) ||\r\n              northLength + polygon?.text;\r\n          } else if (polygon?.lineDirection == 4) {\r\n            westLength =\r\n              (direction?.totalLength && +direction?.totalLength) ||\r\n              westLength + polygon?.text;\r\n          } else if (polygon?.lineDirection == 3) {\r\n            southLength =\r\n              (direction?.totalLength && +direction?.totalLength) ||\r\n              southLength + polygon?.text;\r\n          } else if (polygon?.lineDirection == 2) {\r\n            eastLength =\r\n              (direction?.totalLength && +direction?.totalLength) ||\r\n              eastLength + polygon?.text;\r\n          }\r\n        }\r\n      });\r\n    });\r\n\r\n    return (\r\n      <>\r\n        <div>\r\n          <table className=\"table table-bordered\">\r\n            <tr>\r\n              <td valign=\"top\" align=\"\" style={{ width: \"60%\" }}>\r\n                {tabType == \"parcels\" && (\r\n                  <table className=\"table table-bordered\">\r\n                    <tbody>\r\n                      {(\r\n                        <tr>\r\n                          <td>\r\n                            {t(\r\n                              (!this.props?.mainObject?.landData?.landData\r\n                                ?.req_type &&\r\n                                \"PARCELNAME\") ||\r\n                              \"DUPLIXNAME\"\r\n                            )}\r\n                          </td>\r\n                          <td>{convertToArabic(data?.parcel_name)}</td>\r\n                        </tr>\r\n                      )}\r\n                      {+data?.area > 0 && (\r\n                        <tr>\r\n                          <td>\r\n                            {t(\"Submission parcel area\")} م{convertToArabic(2)}\r\n                          </td>\r\n                          <td>\r\n                            {convertToArabic(\r\n                              (data?.deducted_area &&\r\n                                (+data?.deducted_area).toFixed(2)) ||\r\n                              (+data?.area).toFixed(2)\r\n                            ) || \"\"}{\" \"}\r\n                            م{convertToArabic(2)}\r\n                          </td>\r\n                        </tr>\r\n                      )}\r\n                      <tr>\r\n                        <td>{t(\"North Description\")}</td>\r\n                        <td>{`طوله ${convertToArabic(\r\n                          (\r\n                            northLength ||\r\n                            (data?.data && +data?.data[0]?.totalLength) ||\r\n                            0\r\n                          ).toFixed(2)\r\n                        )} م ويحده ${convertToArabic(data?.north_Desc) || \"\"} ${(isUpdateContract) &&\r\n                          data?.plateformWidth_north\r\n                          ? \"وعرض الرصيف من هذا الاتجاه هو \" +\r\n                          convertToArabic(data?.plateformWidth_north)\r\n                          : \"\"\r\n                          }`}</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>{t(\"East Description\")}</td>\r\n                        <td>{`طوله ${convertToArabic(\r\n                          (\r\n                            eastLength ||\r\n                            (data?.data && +data?.data[1]?.totalLength) ||\r\n                            0\r\n                          ).toFixed(2)\r\n                        )} م ويحده ${convertToArabic(data?.east_Desc) || \"\"} ${(isUpdateContract) &&\r\n                          data?.plateformWidth_east\r\n                          ? \"وعرض الرصيف من هذا الاتجاه هو \" +\r\n                          convertToArabic(data?.plateformWidth_east)\r\n                          : \"\"\r\n                          }`}</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>{t(\"West Description\")}</td>\r\n                        <td>{`طوله ${convertToArabic(\r\n                          (\r\n                            westLength ||\r\n                            (data?.data && +data?.data[3]?.totalLength) ||\r\n                            0\r\n                          ).toFixed(2)\r\n                        )} م ويحده ${convertToArabic(data?.west_Desc) || \"\"} ${(isUpdateContract) &&\r\n                          data?.plateformWidth_west\r\n                          ? \"وعرض الرصيف من هذا الاتجاه هو \" +\r\n                          convertToArabic(data?.plateformWidth_west)\r\n                          : \"\"\r\n                          }`}</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>{t(\"South Description\")}</td>\r\n                        <td>{`طوله ${convertToArabic(\r\n                          (\r\n                            southLength ||\r\n                            (data?.data && +data?.data[4]?.totalLength) ||\r\n                            0\r\n                          ).toFixed(2)\r\n                        )} م ويحده ${convertToArabic(data?.south_Desc) || \"\"} ${(isUpdateContract) &&\r\n                          data?.plateformWidth_south\r\n                          ? \"وعرض الرصيف من هذا الاتجاه هو \" +\r\n                          convertToArabic(data?.plateformWidth_south)\r\n                          : \"\"\r\n                          }`}</td>\r\n                      </tr>\r\n                      {submissionType != undefined && (\r\n                        <tr>\r\n                          <td>نوع المعاملة</td>\r\n                          <td>{submissionType}</td>\r\n                        </tr>\r\n                      )}\r\n                      {benefitsType != undefined && (\r\n                        <tr>\r\n                          <td>نوع معاوضة الفائدة</td>\r\n                          <td>{benefitsType}</td>\r\n                        </tr>\r\n                      )}\r\n                      {usingSymbolType != undefined && (\r\n                        <tr>\r\n                          <td>نوع استخدام المنطقة</td>\r\n                          <td>{usingSymbolType}</td>\r\n                        </tr>\r\n                      )}\r\n                      <tr>\r\n                        <td>{t(\"Download CAD\")}</td>\r\n                        <td>\r\n                          <a href={filesHost + \"/\" + image_uploader} download>\r\n                            {t(\"CAD File\")}\r\n                          </a>\r\n                        </td>\r\n                      </tr>\r\n                      {this.props?.mainObject.data_msa7y?.msa7yData?.cadDetails.isUnPlannedParcelIntersect &&\r\n                        <tr>\r\n                          <td colspan=\"2\"> الأرض المرفوعة تتقاطع مع أحد الأراضي في طبقة الأراضي الخام معاملة رقم {this.props?.mainObject.data_msa7y?.msa7yData?.cadDetails.isUnPlannedParcelIntersect}</td>\r\n                        </tr>\r\n                      }\r\n\r\n                    </tbody>\r\n                  </table>\r\n                )}\r\n                {tabType == \"cuttes\" && (\r\n                  <table className=\"table table-bordered\">\r\n                    <tbody>\r\n                      {Object.keys(data?.cuttes).map((key, index) => {\r\n                        return (\r\n                          <>\r\n                            {index > 0 ? (\r\n                              <tr>\r\n                                <td>\r\n                                  إتجاه الشطفة :{\" \"}\r\n                                  {this.parcel_fields_headers[key]}\r\n                                </td>\r\n                                {(data?.cuttes[key] && (\r\n                                  <td>\r\n                                    {convertToArabic(data?.cuttes[key])} م\r\n                                    {convertToArabic(2)}\r\n                                  </td>\r\n                                )) || <td>بدون</td>}\r\n                              </tr>\r\n                            ) : (\r\n                              <></>\r\n                            )}\r\n                          </>\r\n                        );\r\n                      })}\r\n                      {data?.have_electric_room && (\r\n                        <tr>\r\n                          <td>{\"غرفة الكهرباء\"}</td>\r\n                          <td>\r\n                            {convertToArabic(data?.electric_room_area)} م\r\n                            {convertToArabic(2)}\r\n                          </td>\r\n                        </tr>\r\n                      )}\r\n                      {data?.have_electric_room &&\r\n                        data?.electric_room_place && (\r\n                          <tr>\r\n                            <td>{\"مكان غرفة الكهرباء\"}</td>\r\n                            <td>\r\n                              {convertToArabic(data?.electric_room_place)}\r\n                            </td>\r\n                          </tr>\r\n                        )}\r\n                    </tbody>\r\n                  </table>\r\n                )}\r\n              </td>\r\n              {(data?.approved_Image ||\r\n                this.props?.mainObject?.landData?.landData?.lands?.parcelData\r\n                  ?.approved_Image ||\r\n                this.props?.mainObject?.landData?.landData?.approved_Image ||\r\n                screenshotURL ||\r\n                this.props?.mainObject?.data_msa7y?.msa7yData?.cadDetails\r\n                  ?.suggestionsParcels[0]?.approved_Image) && (\r\n                  <td>\r\n                    {checkImage(\r\n                      this.props,\r\n                      data?.approved_Image ||\r\n                      this.props?.mainObject?.landData?.landData?.lands\r\n                        ?.parcelData?.approved_Image ||\r\n                      this.props?.mainObject?.landData?.landData\r\n                        ?.approved_Image ||\r\n                      screenshotURL ||\r\n                      this.props?.mainObject?.data_msa7y?.msa7yData?.cadDetails\r\n                        ?.suggestionsParcels[0]?.approved_Image,\r\n                      {\r\n                        // popup_width: screen.width, //`${screen.width}px`,\r\n                        // popup_height: screen.height //`${screen.height}px`,\r\n                      }\r\n                    )}\r\n                  </td>\r\n                )}\r\n            </tr>\r\n          </table>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withTranslation(\"labels\")(msa7yData));\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AAAA;AAUA;AAEA;AAXA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAIA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AACA;AACA;AACA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AA+GA;AAAA;AAAA;AAOA;AAAA;AAQA;AAAA;AAGA;AAoBA;AA0CA;AACA;AAAA;AAUA;AACA;AAEA;;;;A","sourceRoot":""}