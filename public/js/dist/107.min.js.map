{"version":3,"file":"107.min.js","sources":["webpack:///./src/app/components/inputs/fields/list/multiTableList/index.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport {Form} from 'antd'\r\nimport {translate} from 'react-i18next'\r\nimport {isEmpty, pick, get, map} from 'lodash'\r\nimport { Field, FormSection } from 'redux-form';\r\nimport renderField from 'app/components/inputs';\r\n\r\nclass multiTableComponent extends Component {\r\n\r\n    getTables(){\r\n        const {values,name, fields,moduleName, tablesField:{split,config, label}, t, input:{value=[], ...input}} = this.props\r\n\r\n        if(!isEmpty(split)){\r\n            return (\r\n                split.map((val, k) => \r\n                    <FormSection name={moduleName} key={k}>\r\n                        <label> {t(label)} : {val.label} </label>\r\n                        <Field\r\n                            name={`${val.moduleName}`}\r\n                            className=\"wizard-input\"\r\n                            component={renderField}\r\n                            field='tableList'\r\n                            className='modal-table'\r\n                            key={val.label}\r\n                            fields={fields}\r\n                            hideLabel={true}\r\n                            hideLabels={true}\r\n                            moduleName={val.moduleName}\r\n                            inline={true}\r\n                            footer={true}\r\n                            {...config}\r\n                            {...{values}}\r\n                            {...pick(this.props, ['touch', 'untouch', 'change']) }\r\n                        />\r\n                    </FormSection>\r\n                )\r\n            )\r\n        }\r\n    }\r\n\r\n  render() {\r\n\r\n    const { t, input:{value={}, ...input}, change} = this.props\r\n\r\n    let calculatedSum = 0 ;\r\n    if(!isEmpty(get(value, 'Sum', {}))) {\r\n        map( get(value, 'Sum', {}), val => \r\n            calculatedSum = parseFloat(calculatedSum) + parseFloat(val)\r\n        )\r\n    }\r\n\r\n    return (\r\n      <Form.Item >\r\n        {this.getTables()}\r\n        <label> {`${t('Total')} : ${calculatedSum}`} </label>\r\n      </Form.Item>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withTranslation('labels')(multiTableComponent)"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAMA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAGA;AAEA;AAMA;AACA;AAEA;;;;A","sourceRoot":""}