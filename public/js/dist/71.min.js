(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[71],{

/***/ "./src/app/components/inputs/fields/identify/Component/addedParcelsIdentifyComponnent/Helpers.js":
/*!*******************************************************************************************************!*\
  !*** ./src/app/components/inputs/fields/identify/Component/addedParcelsIdentifyComponnent/Helpers.js ***!
  \*******************************************************************************************************/
/*! exports provided: selectDis, DataQuery, queryOption, querySetting, DataReqest */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectDis", function() { return selectDis; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DataQuery", function() { return DataQuery; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryOption", function() { return queryOption; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "querySetting", function() { return querySetting; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DataReqest", function() { return DataReqest; });
/* harmony import */ var esri_loader__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! esri-loader */ "./node_modules/esri-loader/dist/umd/esri-loader.js");
/* harmony import */ var esri_loader__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(esri_loader__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _mapviewer_config_map__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../mapviewer/config/map */ "./src/app/components/inputs/fields/identify/Component/mapviewer/config/map.js");


const options = {
  url: 'https://js.arcgis.com/3.13'
};
const selectDis = e => {
  var a = [];
  e.forEach(el => {
    el.features.forEach(element => {
      if (!a.find(t => t.attributes.PARCEL_SPATIAL_ID == element.attributes.PARCEL_SPATIAL_ID)) {
        a.push(element);
      }
    });
  });
  return a;
};
const DataQuery = (layerNum, QueryOptions, CallBack) => {
  Object(esri_loader__WEBPACK_IMPORTED_MODULE_0__["loadModules"])(["esri/symbols/SimpleLineSymbol", "esri/Color", "esri/layers/FeatureLayer", "esri/tasks/RelationshipQuery", "esri/tasks/QueryTask", "esri/tasks/query", "esri/request", "esri/geometry/Polygon", "esri/symbols/SimpleFillSymbol", "esri/graphic"], options).then(([SimpleLineSymbol, Color, FeatureLayer, RQuery, QueryTask, Query, request, Polygon, SimpleFillSymbol, Graphic]) => {
    var query = new Query();
    var qt = new QueryTask(_mapviewer_config_map__WEBPACK_IMPORTED_MODULE_1__["mapUrl"] + `/${layerNum}`);
    QueryOptions.forEach(e => {
      query[e.name] = e.value;
    });
    qt.execute(query, CallBack, res => {
      console.log(res);
    });
  });
};
const queryOption = (where, geo, outfields) => {
  return [{
    name: "where",
    value: where
  }, {
    name: "returnGeometry",
    value: geo
  }, {
    name: "outFields",
    value: outfields
  }];
};
const querySetting = (num, where, geo, outfields, url) => {
  return {
    url: (url || _mapviewer_config_map__WEBPACK_IMPORTED_MODULE_1__["mapUrl"]) + "/" + num,
    where,
    returnGeometry: geo,
    outFields: outfields
  };
};
const DataReqest = (url, callBack) => {
  Object(esri_loader__WEBPACK_IMPORTED_MODULE_0__["loadModules"])(["esri/request"], options).then(([request]) => {
    request({
      url: url,
      content: {
        f: "json"
      },
      handleAs: "json",
      callbackParamName: "callback"
    }).then(callBack);
  });
};

/***/ }),

/***/ "./src/app/components/inputs/fields/identify/Component/addedParcelsIdentifyComponnent/index.js":
/*!*****************************************************************************************************!*\
  !*** ./src/app/components/inputs/fields/identify/Component/addedParcelsIdentifyComponnent/index.js ***!
  \*****************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var antd_lib_button_style__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antd/lib/button/style */ "./node_modules/antd/lib/button/style/index.js");
/* harmony import */ var antd_lib_button_style__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(antd_lib_button_style__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var antd_lib_button__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! antd/lib/button */ "./node_modules/antd/lib/button/index.js");
/* harmony import */ var antd_lib_button__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(antd_lib_button__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/extends.js");
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var antd_lib_select_style__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! antd/lib/select/style */ "./node_modules/antd/lib/select/style/index.js");
/* harmony import */ var antd_lib_select_style__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(antd_lib_select_style__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var antd_lib_select__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! antd/lib/select */ "./node_modules/antd/lib/select/index.js");
/* harmony import */ var antd_lib_select__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(antd_lib_select__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var lodash_slice__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! lodash/slice */ "./node_modules/lodash/slice.js");
/* harmony import */ var lodash_slice__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(lodash_slice__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _common_esri_request__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../common/esri_request */ "./src/app/components/inputs/fields/identify/Component/common/esri_request.js");
/* harmony import */ var _common_common_func__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../common/common_func */ "./src/app/components/inputs/fields/identify/Component/common/common_func.js");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../common */ "./src/app/components/inputs/fields/identify/Component/common/index.js");
/* harmony import */ var _main_helpers_functions_filters__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../../../../main_helpers/functions/filters */ "./src/main_helpers/functions/filters/index.js");
/* harmony import */ var _mapviewer_config_map__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../mapviewer/config/map */ "./src/app/components/inputs/fields/identify/Component/mapviewer/config/map.js");
/* harmony import */ var antd_dist_antd_css__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! antd/dist/antd.css */ "./node_modules/antd/dist/antd.css");
/* harmony import */ var antd_dist_antd_css__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(antd_dist_antd_css__WEBPACK_IMPORTED_MODULE_13__);
/* harmony import */ var _MapComponent_MapComponent__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../MapComponent/MapComponent */ "./src/app/components/inputs/fields/identify/Component/MapComponent/MapComponent.js");
/* harmony import */ var _MapBtnsComponent__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../MapBtnsComponent */ "./src/app/components/inputs/fields/identify/Component/MapBtnsComponent/index.js");
/* harmony import */ var _mapping__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../mapping */ "./src/app/components/inputs/fields/identify/Component/mapping.js");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var _Helpers__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./Helpers */ "./src/app/components/inputs/fields/identify/Component/addedParcelsIdentifyComponnent/Helpers.js");
/* harmony import */ var react_sticky__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! react-sticky */ "./node_modules/react-sticky/lib/index.js");
/* harmony import */ var react_sticky__WEBPACK_IMPORTED_MODULE_19___default = /*#__PURE__*/__webpack_require__.n(react_sticky__WEBPACK_IMPORTED_MODULE_19__);
/* harmony import */ var _common_esri_loader__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../common/esri_loader */ "./src/app/components/inputs/fields/identify/Component/common/esri_loader.js");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! axios */ "./node_modules/axios/index.js");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_21___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_21__);



















var uniqid = __webpack_require__(/*! uniqid */ "./node_modules/uniqid/index.js");



const {
  Option
} = antd_lib_select__WEBPACK_IMPORTED_MODULE_5___default.a;
class addedParcelsIdentifyComponnent extends react__WEBPACK_IMPORTED_MODULE_7__["Component"] {
  constructor(props) {
    var _props$input, _props$input$value, _props$input$value$te, _props$input2, _props$input2$value, _props$input2$value$t, _this$props$mainObjec4, _this$props$mainObjec5, _this$props$mainObjec6, _this$props, _this$props$input, _this$props$input$val8, _this$props$input$val9, _props$values;
    super(props);
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(this, "LayerID", []);
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(this, "resetFields", () => {
      this.props.onChange([]);
      this.setState({
        selectedLands: [],
        selectedLandsT: []
      });
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(this, "addParcelToSelect", feature => {
      return new Promise((resolve, reject) => {
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_9__["intersectQueryTask"])({
          outFields: [
          // "MUNICIPALITY_NAME",
          // "PARCEL_AREA",
          // "PARCEL_LAT_COORD",
          // "PARCEL_LONG_COORD",
          // "PARCEL_MAIN_LUSE",
          // "PLAN_NO",
          // "PARCEL_PLAN_NO",
          // "USING_SYMBOL",
          // "PARCEL_SPATIAL_ID",
          "*"],
          geometry: feature.geometry,
          url: _mapviewer_config_map__WEBPACK_IMPORTED_MODULE_12__["mapUrl"] + "/" + this.LayerID.Landbase_Parcel,
          where: "PARCEL_PLAN_NO is not null",
          callbackResult: res => {
            Object(_common_common_func__WEBPACK_IMPORTED_MODULE_9__["getFeatureDomainName"])(res.features, this.LayerID.Landbase_Parcel).then(r => {
              res.features = res.features.map((e, i) => {
                return {
                  ...e,
                  i: uniqid()
                };
              });
              return resolve(res);
            });
          }
        });
      });
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(this, "DrawGraph", () => {
      if (!this.state.selectedLands.length) {
        this.map.graphics.clear();
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_9__["clearGraphicFromLayer"])(this.map, "SelectLandsGraphicLayer");
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_9__["highlightFeature"])(this.RolBackPol, this.map, {
          layerName: "SelectGraphicLayer",
          isZoom: true,
          isHiglightSymbol: true,
          highlighColor: [255, 0, 0, 0.25]
        });
        this.setState({
          parcelSearch: null,
          parcelNum: this.RolBackParcelNum,
          parcelval: undefined
        });
      } else {
        this.parcelDis = Object(_Helpers__WEBPACK_IMPORTED_MODULE_18__["selectDis"])(this.selectedLandsT);
        console.log(this.parcelDis);
        this.setAdjacentToStore(this.parcelDis);
        this.setState({
          parcelSearch: null,
          parcelNum: this.parcelDis
        });
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_9__["clearGraphicFromLayer"])(this.map, "SelectLandsGraphicLayer");
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_9__["clearGraphicFromLayer"])(this.map, "SelectGraphicLayer");
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_9__["clearGraphicFromLayer"])(this.map, "ParcelPlanNoGraphicLayer");
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_9__["highlightFeature"])(this.parcelDis.filter(element => !this.state.selectedLands.find(i => i.id === element.attributes.PARCEL_SPATIAL_ID)), this.map, {
          layerName: "SelectLandsGraphicLayer",
          noclear: false,
          isZoom: false,
          isHiglightSymbol: true,
          highlighColor: [0, 255, 0, 0.5],
          zoomFactor: 50
        });
        this.parcelDis.filter(element => !this.state.selectedLands.find(i => i.id === element.attributes.PARCEL_SPATIAL_ID)).forEach(f => {
          Object(_common_common_func__WEBPACK_IMPORTED_MODULE_9__["addParcelNo"])(f.geometry.getExtent().getCenter(), this.map, f.attributes.PARCEL_PLAN_NO + "", "ParcelPlanNoGraphicLayer", 14, [0, 0, 0]);
        });
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_9__["highlightFeature"])(this.parcelDis.filter(element => this.state.selectedLands.find(i => i.id === element.attributes.PARCEL_SPATIAL_ID)), this.map, {
          layerName: "SelectLandsGraphicLayer",
          noclear: true,
          attr: {
            isParcel: true
          },
          isZoom: true,
          isHighlighPolygonBorder: true,
          zoomFactor: 50
        });
        this.parcelDis.filter(element => this.state.selectedLands.find(i => i.id === element.attributes.PARCEL_SPATIAL_ID)).forEach(f => {
          Object(_common_common_func__WEBPACK_IMPORTED_MODULE_9__["addParcelNo"])(f.geometry.getExtent().getCenter(), this.map, f.attributes.PARCEL_PLAN_NO + "", "ParcelPlanNoGraphicLayer", 14, [0, 0, 0]);
        });
      }
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(this, "mapLoaded", map => {
      this.map = map;
      if (this.props.input && this.props.input.value && this.props.input.value.parcels) {
        var _this$props$input$val, _this$props$input$val2, _this$props$input$val3, _this$props$input$val4, _this$props$input$val5, _this$props$input$val6, _this$props$input$val7, _this$state, _this$props$mainObjec, _this$props$mainObjec2, _this$props$mainObjec3;
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_9__["highlightFeature"])(this.props.input.value.parcels, this.map, {
          layerName: "SelectGraphicLayer",
          noclear: true,
          isZoom: true,
          attr: {
            isParcel: true
          },
          isHighlighPolygonBorder: true,
          zoomFactor: 50
        });

        //setTimeout(() => {
        this.props.input.value.parcels.forEach(f => {
          f.geometry = new esri.geometry.Polygon(f.geometry);
          Object(_common_common_func__WEBPACK_IMPORTED_MODULE_9__["addParcelNo"])(f.geometry.getExtent().getCenter(), this.map, f.attributes.PARCEL_PLAN_NO + "", "ParcelPlanNoGraphicLayer", 14, [0, 0, 0]);
        });
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_9__["highlightFeature"])((_this$props$input$val = this.props.input.value) === null || _this$props$input$val === void 0 ? void 0 : (_this$props$input$val2 = _this$props$input$val.temp) === null || _this$props$input$val2 === void 0 ? void 0 : (_this$props$input$val3 = _this$props$input$val2.parcelDis) === null || _this$props$input$val3 === void 0 ? void 0 : _this$props$input$val3.filter(element => !this.props.input.value.parcels.find(i => i.attributes.PARCEL_SPATIAL_ID === element.attributes.PARCEL_SPATIAL_ID)), this.map, {
          layerName: "SelectLandsGraphicLayer",
          noclear: false,
          isZoom: false,
          isHiglightSymbol: true,
          highlighColor: [0, 255, 0, 0.5],
          zoomFactor: 50
        });
        (_this$props$input$val4 = this.props.input.value) === null || _this$props$input$val4 === void 0 ? void 0 : (_this$props$input$val5 = _this$props$input$val4.temp) === null || _this$props$input$val5 === void 0 ? void 0 : (_this$props$input$val6 = _this$props$input$val5.parcelDis) === null || _this$props$input$val6 === void 0 ? void 0 : (_this$props$input$val7 = _this$props$input$val6.filter(element => !this.props.input.value.parcels.find(i => i.attributes.PARCEL_SPATIAL_ID === element.attributes.PARCEL_SPATIAL_ID))) === null || _this$props$input$val7 === void 0 ? void 0 : _this$props$input$val7.forEach(f => {
          if (!f.geometry.getExtent) {
            f.geometry = new esri.geometry.Polygon(f.geometry);
          }
          Object(_common_common_func__WEBPACK_IMPORTED_MODULE_9__["addParcelNo"])(f.geometry.getExtent().getCenter(), this.map, f.attributes.PARCEL_PLAN_NO + "", "ParcelPlanNoGraphicLayer", 14, [0, 0, 0]);
        });
        const {
          input: {
            value,
            onChange
          }
        } = this.props;
        let landsData = {
          ...value,
          conditions: (_this$state = this.state) === null || _this$state === void 0 ? void 0 : _this$state.conditions,
          temp: {
            // map: this.map,
            // mun: value?.temp?.mun,
            // plan: value?.temp?.plan,
            // subtype: value?.temp?.subtype,
            // subname: value?.temp?.subname,
            // parcelDis: value?.temp?.parcelDis,
            // block: value?.temp?.block,
            // parcel: value?.temp?.parcel,
            mun: this.props.input.value.temp.mun,
            plan: ((_this$props$mainObjec = this.props.mainObject) === null || _this$props$mainObjec === void 0 ? void 0 : (_this$props$mainObjec2 = _this$props$mainObjec.landData) === null || _this$props$mainObjec2 === void 0 ? void 0 : (_this$props$mainObjec3 = _this$props$mainObjec2.landData) === null || _this$props$mainObjec3 === void 0 ? void 0 : _this$props$mainObjec3.PLAN_NO) || this.props.input.value.temp.plan,
            subTypeval: this.props.input.value.temp.subTypeval,
            subNameval: this.props.input.value.temp.subNameval,
            parcelDis: this.props.input.value.temp.parcelDis,
            blockval: this.props.input.value.temp.blockval,
            parcelval: this.props.input.value.temp.parcelval,
            subname: this.props.input.value.temp.subname,
            block_no: this.props.input.value.temp.block_no,
            city_name: this.props.input.value.temp.city_name
          },
          parcels: [...(value === null || value === void 0 ? void 0 : value.parcels)]
        };
        onChange({
          ...landsData
        });
      }
      this.setState({
        mapLoaded: true
      });
      this.props.setCurrentMap(map);
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(this, "myChangeHandler", (name, event) => {
      this["edit_" + name] = event.target.value;
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(this, "resetGraphics", () => {
      this.state["selectedLands"] = [];
      this.state["selectedLandsT"] = [];
      this.DrawGraph();
      this.UpdateSubmissionDataObject();
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(this, "UpdateSubmissionDataObject", () => {
      const {
        submission_data
      } = this.state;
      this.setToStore();
      this.props.change("submission_data", submission_data);
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(this, "setValue", (item, event) => {
      item.value = event.target.value;
      this.UpdateSubmissionDataObject();
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(this, "OnParcelSelect", () => {
      let submission_data = {};
      this.setState({
        parcelval: undefined
      });
      Object(_common_common_func__WEBPACK_IMPORTED_MODULE_9__["clearGraphicFromLayer"])(this.map, "SelectGraphicLayer");
      Object(_common_common_func__WEBPACK_IMPORTED_MODULE_9__["clearGraphicFromLayer"])(this.map, "SelectLandsGraphicLayer");
      if (!this.state.selectedLands.filter(e => e.id === this.state.parcelId).length) {
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_9__["queryTask"])({
          ...Object(_Helpers__WEBPACK_IMPORTED_MODULE_18__["querySetting"])(this.LayerID.Landbase_Parcel, `PARCEL_SPATIAL_ID =${this.state.parcelId}`, true, ["PARCEL_AREA", "PARCEL_MAIN_LUSE", "PARCEL_LAT_COORD", "PARCEL_LONG_COORD", "PLAN_NO", "PARCEL_PLAN_NO", "USING_SYMBOL", "PARCEL_BLOCK_NO", "DISTRICT_NAME", "SUBDIVISION_DESCRIPTION", "SUBDIVISION_TYPE", "PARCEL_SPATIAL_ID", "MUNICIPALITY_NAME"]),
          callbackResult: res => {
            if (this.state.selectedLands && this.state.selectedLands.length == 0) {
              this.setParcelLengths(res.features[0]).then(submission_data => {
                const formValues = Object(_main_helpers_functions_filters__WEBPACK_IMPORTED_MODULE_11__["default"])({
                  key: "FormValues",
                  form: "stepForm"
                });
                Object.keys(submission_data).forEach(key => {
                  submission_data[key] = (+formValues.submission_data[key] || 0) + (+submission_data[key] || 0);
                });
                Object(_common_common_func__WEBPACK_IMPORTED_MODULE_9__["queryTask"])({
                  ...Object(_Helpers__WEBPACK_IMPORTED_MODULE_18__["querySetting"])(this.LayerID.Tbl_Parcel_Conditions, `USING_SYMBOL_CODE ='${res.features[0].attributes.USING_SYMBOL}'`, false, ["SLIDE_AREA", "MIN_FROT_OFFSET", "BUILDING_RATIO", "FRONT_OFFSET", "SIDE_OFFSET", "BACK_OFFSET", "FLOORS", "FLOOR_HEIGHT", "FAR", "ADD_FLOOR"]),
                  callbackResult: condition => {
                    this.setState({
                      conditions: condition.features,
                      submission_data
                    }, () => {
                      this.UpdateSubmissionDataObject();
                    });
                    Object(_common_common_func__WEBPACK_IMPORTED_MODULE_9__["getFeatureDomainName"])(res.features, this.LayerID.Landbase_Parcel).then(r => {
                      this.setToStore(r);
                      this.addParcelToSelect(r[0]).then(res => {
                        this.selectedLandsT.push(res);
                        this.DrawGraph();
                      });
                    });
                  }
                });
              });
            } else {
              submission_data.north_length = "";
              submission_data.south_length = "";
              submission_data.east_length = "";
              submission_data.west_length = "";
              this.setState({
                submission_data
              }, () => {
                this.UpdateSubmissionDataObject();
              });
              Object(_common_common_func__WEBPACK_IMPORTED_MODULE_9__["getFeatureDomainName"])(res.features, this.LayerID.Landbase_Parcel).then(r => {
                this.setToStore(r);
                this.addParcelToSelect(r[0]).then(res => {
                  this.selectedLandsT.push(res);
                  this.DrawGraph();
                });
              });
            }
          }
        });
      }
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(this, "setParcelLengths", parcel => {
      let submission_data = {};
      return new Promise((resolve, reject) => {
        Object(_common_esri_loader__WEBPACK_IMPORTED_MODULE_20__["LoadModules"])(["esri/geometry/Point", "esri/geometry/Polyline", "esri/geometry/Polygon", "esri/tasks/LengthsParameters", "esri/tasks/GeometryService", "esri/geometry/mathUtils"]).then(([Point, Polyline, Polygon, LengthsParameters, GeometryService, mathUtils]) => {
          let maxPoint, minPoint;
          let max = 0,
            min;
          //

          parcel.geometry = new esri.geometry.Polygon(parcel.geometry);
          for (let j = 0; j < parcel.geometry.rings[0].length - 1; j++) {
            let point1 = new esri.geometry.Point(parcel.geometry.rings[0][j][0], parcel.geometry.rings[0][j][1]);
            let point2 = new esri.geometry.Point(parcel.geometry.rings[0][j + 1][0], parcel.geometry.rings[0][j + 1][1]);
            if (point1.x > max) {
              max = point1.x;
              maxPoint = point1;
            }
            if (!min || point1.x < min) {
              min = point1.x;
              minPoint = point1;
            }
            if (point2.x > max) {
              max = point2.x;
              maxPoint = point2;
            }
            if (!min || point2.x < min) {
              min = point2.x;
              minPoint = point2;
            }
          }
          let arr = [...parcel.geometry.rings[0]];
          for (let i = arr.length - 1; i > 0; i--) {
            let pnt1 = new Point(arr[i], parcel.geometry.spatialReference);
            let pnt2 = new Point(arr[i - 1], parcel.geometry.spatialReference);
            let length = mathUtils.getLength(pnt1, pnt2);
            length = Number(parseFloat(length).toFixed(2));
            let path = {
              paths: [[arr[i], arr[i - 1]]],
              text: length,
              spatialReference: parcel.geometry.spatialReference
            };
            let geometryServiceLength = new GeometryService(_mapviewer_config_map__WEBPACK_IMPORTED_MODULE_12__["geometryServiceUrl"]);
            let polyline = new Polyline(path);
            let lengthParams = new LengthsParameters();
            lengthParams.polylines = [polyline];
            lengthParams.lengthUnit = GeometryService.UNIT_METER;
            lengthParams.geodesic = true;
            geometryServiceLength.lengths(lengthParams, result => {
              let polygonCenterPoint = parcel.geometry.getCentroid();
              let polylineCenterPoint = polyline.getExtent().getCenter();
              let maxPolgonPoint = maxPoint;
              let minPolygonPoint = minPoint;
              let diffrenceInXWithMaxPoint = Math.abs(polylineCenterPoint.x - maxPolgonPoint.x);
              let diffrenceWithPolygonCenterPoint = Math.abs(polylineCenterPoint.x - polygonCenterPoint.x);
              //east
              if (diffrenceInXWithMaxPoint < diffrenceWithPolygonCenterPoint) {
                var _result$lengths;
                submission_data.east_length = +(parseFloat(submission_data.east_length || 0) + ((result === null || result === void 0 ? void 0 : (_result$lengths = result.lengths) === null || _result$lengths === void 0 ? void 0 : _result$lengths[0]) || 0)).toFixed(2);
              } else {
                let diffrenceInXWithMinPoint = Math.abs(polylineCenterPoint.x - minPolygonPoint.x);
                if (diffrenceInXWithMinPoint < diffrenceWithPolygonCenterPoint) {
                  var _result$lengths2;
                  submission_data.west_length = +(parseFloat(submission_data.west_length || 0) + ((result === null || result === void 0 ? void 0 : (_result$lengths2 = result.lengths) === null || _result$lengths2 === void 0 ? void 0 : _result$lengths2[0]) || 0)).toFixed(2);
                } else if (polylineCenterPoint.y > polygonCenterPoint.y) {
                  var _result$lengths3;
                  submission_data.north_length = +(parseFloat(submission_data.north_length || 0) + ((result === null || result === void 0 ? void 0 : (_result$lengths3 = result.lengths) === null || _result$lengths3 === void 0 ? void 0 : _result$lengths3[0]) || 0)).toFixed(2);
                } else {
                  var _result$lengths4;
                  submission_data.south_length = +(parseFloat(submission_data.south_length || 0) + ((result === null || result === void 0 ? void 0 : (_result$lengths4 = result.lengths) === null || _result$lengths4 === void 0 ? void 0 : _result$lengths4[0]) || 0)).toFixed(2);
                }
              }
              if (i == 1) {
                return resolve(submission_data);
              }
            });
          }
        });
      });
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(this, "setToStore", r => {
      const {
        input: {
          value
        }
      } = this.props;
      this.state.landsData = {
        ...value,
        mapGraphics: [],
        conditions: this.state.conditions,
        //submission_data: { ...this.state.submission_data },
        temp: {
          mun: this.state.munval,
          plan: this.state.planeval,
          subTypeval: this.state.subTypeval,
          subNameval: this.state.subNameval,
          subname: this.state.subName_name,
          parcelDis: this.parcelDis || this.RolBackParcelNum,
          block_no: this.state.block_no,
          blockval: this.state.blockval,
          parcelval: this.state.parcelval,
          city_name: this.state.city_name
        }
      };
      if (r) {
        if (this.state.selectedLands.length) {
          this.state.landsData["parcels"] = [...this.state.selectedLands, {
            attributes: r[0].attributes,
            id: this.state.parcelId,
            geometry: JSON.parse(JSON.stringify(r[0].geometry))
          }];
        } else {
          this.state.landsData["parcels"] = [{
            geometry: JSON.parse(JSON.stringify(r[0].geometry)),
            attributes: r[0].attributes,
            id: this.state.parcelId
          }];
        }
      }
      this.setState({
        selectedLands: this.state.landsData.parcels || []
      }, () => {
        this.props.input.onChange({
          ...this.state.landsData
        });
      });
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(this, "setAdjacentToStore", r => {
      let store = this.props.input.value;
      store.temp.parcelDis = r;
      this.props.input.onChange(store);
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(this, "LandHoverOn", f => {
      var _this$state$selectedL;
      if ((_this$state$selectedL = this.state.selectedLands) !== null && _this$state$selectedL !== void 0 && _this$state$selectedL.length) {
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_9__["clearGraphicFromLayer"])(this.map, "SelectGraphicLayer");
        var parcel = this.state.parcelNum.filter(m => m.i == f.key)[0];
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_9__["highlightFeature"])(parcel, this.map, {
          layerName: "SelectGraphicLayer",
          strokeColor: [0, 0, 0],
          isHighlighPolygonBorder: true,
          highlightWidth: 3
        });
      }
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(this, "LandHoverOff", f => {
      var _this$state$selectedL2;
      if ((_this$state$selectedL2 = this.state.selectedLands) !== null && _this$state$selectedL2 !== void 0 && _this$state$selectedL2.length) {
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_9__["clearGraphicFromLayer"])(this.map, "SelectGraphicLayer");
      }
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(this, "remove", item => {
      this.state.selectedLands.pop(item);
      const values = lodash_slice__WEBPACK_IMPORTED_MODULE_6___default()(this.props.input.value.parcels, 0, -1);
      this.props.input.onChange([...values]);
      if (this.state.selectedLandsT) {
        this.state.selectedLandsT.pop(item);
      }
      this.DrawGraph();
      if (this.state.selectedLands.length == 1) {
        this.setParcelLengths(item).then(submission_data => {
          const formValues = Object(_main_helpers_functions_filters__WEBPACK_IMPORTED_MODULE_11__["default"])({
            key: "FormValues",
            form: "stepForm"
          });
          Object.keys(submission_data).forEach(key => {
            submission_data[key] = (+formValues.submission_data[key] || 0) + (+submission_data[key] || 0);
          });
          this.setState({
            submission_data
          }, () => {
            this.UpdateSubmissionDataObject();
          });
        });
      } else {
        let submission_data = {};
        submission_data.north_length = "";
        submission_data.south_length = "";
        submission_data.east_length = "";
        submission_data.west_length = "";
        this.setState({
          submission_data
        }, () => {
          this.UpdateSubmissionDataObject();
        });
      }
    });
    this.PlanNum = [];
    this.planId = null;
    this.parcelTs = [];
    this.selectedLandsT = (props === null || props === void 0 ? void 0 : (_props$input = props.input) === null || _props$input === void 0 ? void 0 : (_props$input$value = _props$input.value) === null || _props$input$value === void 0 ? void 0 : (_props$input$value$te = _props$input$value.temp) === null || _props$input$value$te === void 0 ? void 0 : _props$input$value$te.parcelDis) && [{
      features: props === null || props === void 0 ? void 0 : (_props$input2 = props.input) === null || _props$input2 === void 0 ? void 0 : (_props$input2$value = _props$input2.value) === null || _props$input2$value === void 0 ? void 0 : (_props$input2$value$t = _props$input2$value.temp) === null || _props$input2$value$t === void 0 ? void 0 : _props$input2$value$t.parcelDis
    }] || [];
    this.selectedLands = [];
    this.selectionMode = false;
    this.parcel_fields = ["PARCEL_PLAN_NO", "PARCEL_AREA", "PARCEL_BLOCK_NO", "DISTRICT_NAME", "SUBDIVISION_TYPE", "SUBDIVISION_DESCRIPTION", "USING_SYMBOL", "Natural_Area"];
    this.state = {
      mapLoaded: false,
      munval: props.input && props.input.value.temp && props.input.value.temp.mun || undefined,
      planeval: ((_this$props$mainObjec4 = this.props.mainObject) === null || _this$props$mainObjec4 === void 0 ? void 0 : (_this$props$mainObjec5 = _this$props$mainObjec4.landData) === null || _this$props$mainObjec5 === void 0 ? void 0 : (_this$props$mainObjec6 = _this$props$mainObjec5.landData) === null || _this$props$mainObjec6 === void 0 ? void 0 : _this$props$mainObjec6.PLAN_NO) || props.input && props.input.value.temp && props.input.value.temp.plan || undefined,
      subTypeval: props.input && props.input.value.temp && props.input.value.temp.subTypeval || undefined,
      subNameval: props.input && props.input.value.temp && props.input.value.temp.subNameval || undefined,
      blockval: props.input && props.input.value.temp && props.input.value.temp.blockval || undefined,
      selectedLands: props.input && props.input.value.parcels || [],
      parcelval: props.input && props.input.value.temp && props.input.value.temp.parcelval || undefined,
      conditions: props.input && props.input.value.conditions || undefined,
      blockNum: [],
      planSersh: null,
      subDivNames: [],
      subDivType: [],
      parcelNum: ((_this$props = this.props) === null || _this$props === void 0 ? void 0 : (_this$props$input = _this$props.input) === null || _this$props$input === void 0 ? void 0 : (_this$props$input$val8 = _this$props$input.value) === null || _this$props$input$val8 === void 0 ? void 0 : (_this$props$input$val9 = _this$props$input$val8.temp) === null || _this$props$input$val9 === void 0 ? void 0 : _this$props$input$val9.parcelDis) || [],
      parcelNumS: [],
      MunicipalityNames: [],
      PlanNum: [],
      parcelId: null,
      mapExtend: null,
      parcelSearch: null,
      poly: null,
      landsData: {},
      submission_data: (props === null || props === void 0 ? void 0 : (_props$values = props.values) === null || _props$values === void 0 ? void 0 : _props$values.submission_data) || {
        north_length: "0",
        north_desc: "",
        south_length: "0",
        south_desc: "",
        east_length: "0",
        east_desc: "",
        west_length: "0",
        west_desc: ""
      }
    };
  }
  convertToArabic(num) {
    if (num) {
      var id = ["۰", "۱", "۲", "۳", "٤", "٥", "٦", "۷", "۸", "۹"];
      return num.replace(/[0-9]/g, function (w) {
        return id[+w];
      });
    } else {
      return "";
    }
  }
  replaceAll(str, find, replace) {
    return str.replace(new RegExp(find, "g"), replace);
  }
  componentDidMount() {
    if (window.isAkarApp) {
      console.log("window", window);
      this.parcel_fields = ["PARCEL_PLAN_NO", "PARCEL_AREA", "PARCEL_BLOCK_NO", "DISTRICT_NAME", "SUBDIVISION_TYPE", "SUBDIVISION_DESCRIPTION", "USING_SYMBOL"];
    }
    Object(_common_common_func__WEBPACK_IMPORTED_MODULE_9__["getInfo"])().then(res => {
      this.LayerID = res;
      Object(_common__WEBPACK_IMPORTED_MODULE_10__["getParcels"])(this, null, "", {
        returnDistinctValues: true
      }, ["MUNICIPALITY_NAME"]).then(features => {
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_9__["getFeatureDomainName"])(features, this.LayerID.Landbase_Parcel).then(features => {
          this.setState({
            MunicipalityNames: features.filter(r => r.attributes.MUNICIPALITY_NAME).map(r => {
              return {
                code: r.attributes.MUNICIPALITY_NAME_Code,
                name: r.attributes.MUNICIPALITY_NAME
              };
            }),
            allParcels: features
          }, () => {
            this.loadLists = true;
            if (this.state.munval) {
              Object(_common__WEBPACK_IMPORTED_MODULE_10__["onMunChange"])(this, this.state.munval, () => {
                Object(_common__WEBPACK_IMPORTED_MODULE_10__["onPlaneChange"])(this, this.state.planeval, () => {
                  Object(_common__WEBPACK_IMPORTED_MODULE_10__["onSubTypeChange"])(this, this.state.subTypeval, () => {
                    Object(_common__WEBPACK_IMPORTED_MODULE_10__["onSubNameChange"])(this, this.state.subNameval, () => {
                      Object(_common__WEBPACK_IMPORTED_MODULE_10__["onBlockChange"])(this, this.state.blockval, () => {
                        Object(_common__WEBPACK_IMPORTED_MODULE_10__["onLandParcelChange"])(this, this.state.parcelval, () => {});
                      });
                    });
                  });
                });
              });
            }
            this.loadLists = false;
          });
        });
      });
    });
  }
  enableEdit(name, i) {
    this.setState({
      [name + "_isEdit_" + i]: true
    });
  }
  showEditBtn(name, value) {
    if (name == "USING_SYMBOL") {
      return value == null;
    } else {
      return ["PARCEL_AREA", "PARCEL_BLOCK_NO", "DISTRICT_NAME", "SUBDIVISION_TYPE", "SUBDIVISION_DESCRIPTION", "Natural_Area"].indexOf(name) > -1;
    }
  }
  saveEdit(id, name, i) {
    let findParcel = this.props.input.value.parcels.find(p => {
      var _p$attributes;
      return [p === null || p === void 0 ? void 0 : p.id, p === null || p === void 0 ? void 0 : (_p$attributes = p.attributes) === null || _p$attributes === void 0 ? void 0 : _p$attributes.PARCEL_SPATIAL_ID].indexOf(id) != -1;
    });
    findParcel.attributes[name] = this["edit_" + name] || findParcel.attributes[name];
    let selectLand = this.state.selectedLands.find(p => {
      var _p$attributes2;
      return [p === null || p === void 0 ? void 0 : p.id, p === null || p === void 0 ? void 0 : (_p$attributes2 = p.attributes) === null || _p$attributes2 === void 0 ? void 0 : _p$attributes2.PARCEL_SPATIAL_ID].indexOf(id) != -1;
    });
    selectLand.attributes[name] = this["edit_" + name] || selectLand.attributes[name];
    this.setState({
      [name + "_isEdit_" + i]: false,
      selectedLands: [...this.state.selectedLands]
    }, () => {
      this.setToStore();
    });
  }
  render() {
    var _this$state$Municipal;
    const {
      selectedLands,
      MunicipalityNames,
      subDivType,
      subDivNames,
      subNameval,
      blockNum,
      blockval,
      PlanNum,
      mapLoaded,
      planeval,
      parcelSearch,
      parcelNum,
      parcelval,
      conditions
    } = this.state;
    const {
      fullMapWidth
    } = this.props;
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement("div", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(react_sticky__WEBPACK_IMPORTED_MODULE_19__["StickyContainer"], {
      style: {
        direction: "ltr"
      }
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(react_sticky__WEBPACK_IMPORTED_MODULE_19__["Sticky"], {
      bottomOffset: 80
    }, ({
      style
    }) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(_MapBtnsComponent__WEBPACK_IMPORTED_MODULE_15__["default"], _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_2___default()({
      style: style
    }, this.props)))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement("div", {
      className: !fullMapWidth ? "content-section implementation" : ""
    }, mapLoaded && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement("div", {
      style: {
        padding: "10px"
      }
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(antd_lib_select__WEBPACK_IMPORTED_MODULE_5___default.a, {
      getPopupContainer: trigger => trigger.parentNode,
      autoFocus: true,
      onChange: val => {
        Object(_common__WEBPACK_IMPORTED_MODULE_10__["onMunChange"])(this, val);
      },
      showSearch: true,
      value: this.state.munval,
      placeholder: "\u0627\u062E\u062A\u0631 \u0627\u0633\u0645 \u0627\u0644\u0628\u0644\u062F\u064A\u0647",
      disabled: !((_this$state$Municipal = this.state.MunicipalityNames) !== null && _this$state$Municipal !== void 0 && _this$state$Municipal.length),
      optionFilterProp: "children",
      filterOption: (input, option) => {
        if (option.props.children) {
          var _option$props$childre;
          return ((_option$props$childre = option.props.children) === null || _option$props$childre === void 0 ? void 0 : _option$props$childre.find(i => {
            return i && i.indexOf(input.trim().toLowerCase()) >= 0;
          })) != null;
        } else {
          return false;
        }
      }
    }, MunicipalityNames === null || MunicipalityNames === void 0 ? void 0 : MunicipalityNames.map(e => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(Option, {
      key: e.code,
      value: e.code
    }, e.name, " "))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(antd_lib_select__WEBPACK_IMPORTED_MODULE_5___default.a, {
      getPopupContainer: trigger => trigger.parentNode
      //onChange={this.onPlaneChange}
      ,

      onChange: val => {
        Object(_common__WEBPACK_IMPORTED_MODULE_10__["onPlaneChange"])(this, val);
      },
      showSearch: true,
      autoFocus: true,
      disabled: !PlanNum.length,
      optionFilterProp: "children",
      filterOption: (input, option) => {
        if (option.props.children) {
          var _option$props$childre2;
          return ((_option$props$childre2 = option.props.children) === null || _option$props$childre2 === void 0 ? void 0 : _option$props$childre2.indexOf(Object(_common_common_func__WEBPACK_IMPORTED_MODULE_9__["convertToArabic"])(input))) != -1;
        } else {
          return false;
        }
      },
      value: planeval,
      placeholder: "\u0631\u0642\u0645 \u0627\u0644\u0645\u062E\u0637\u0637",
      notFoundContent: "not found"
    }, PlanNum
    //.slice(0, 100)
    .map((d, i) => {
      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(Option, {
        key: d.i,
        value: d.i
      }, Object(_common_common_func__WEBPACK_IMPORTED_MODULE_9__["localizeNumber"])(d.attributes.PLAN_NO));
    })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(antd_lib_select__WEBPACK_IMPORTED_MODULE_5___default.a, {
      getPopupContainer: trigger => trigger.parentNode,
      autoFocus: true,
      onChange: val => {
        Object(_common__WEBPACK_IMPORTED_MODULE_10__["onSubTypeChange"])(this, val);
      },
      showSearch: true,
      disabled: !subDivType.length,
      value: this.state.subTypeval,
      placeholder: "نوع التقسيم",
      optionFilterProp: "children",
      filterOption: (input, option) => {
        if (option.props.children) {
          var _option$props$childre3;
          return ((_option$props$childre3 = option.props.children) === null || _option$props$childre3 === void 0 ? void 0 : _option$props$childre3.indexOf(Object(_common_common_func__WEBPACK_IMPORTED_MODULE_9__["convertToArabic"])(input))) != -1;
        } else {
          return false;
        }
      }
    }, subDivType
    //.slice(0, 100)
    .map((e, i) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(Option, {
      key: i,
      value: e.code
    }, " ", e.name, " "))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(antd_lib_select__WEBPACK_IMPORTED_MODULE_5___default.a, {
      getPopupContainer: trigger => trigger.parentNode,
      autoFocus: true,
      onChange: val => {
        Object(_common__WEBPACK_IMPORTED_MODULE_10__["onSubNameChange"])(this, val);
      },
      showSearch: true,
      disabled: !subDivNames.length,
      placeholder: "\u0627\u0633\u0645 \u0627\u0644\u062A\u0642\u0633\u064A\u0645",
      value: subNameval,
      optionFilterProp: "children",
      filterOption: (input, option) => {
        var _option$props$childre4;
        return ((_option$props$childre4 = option.props.children) === null || _option$props$childre4 === void 0 ? void 0 : _option$props$childre4.indexOf(Object(_common_common_func__WEBPACK_IMPORTED_MODULE_9__["convertToArabic"])(input))) != -1;
      }
    }, subDivNames
    //.slice(0, 100)
    .map((e, i) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(Option, {
      key: i,
      value: e.attributes.SUBDIVISION_SPATIAL_ID
    }, " ", e.attributes.SUBDIVISION_DESCRIPTION))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(antd_lib_select__WEBPACK_IMPORTED_MODULE_5___default.a, {
      getPopupContainer: trigger => trigger.parentNode,
      autoFocus: true,
      onChange: val => {
        Object(_common__WEBPACK_IMPORTED_MODULE_10__["onBlockChange"])(this, val);
      },
      showSearch: true,
      disabled: !blockNum.length,
      value: blockval,
      placeholder: "\u0631\u0642\u0645 \u0627\u0644\u0628\u0644\u0643",
      optionFilterProp: "children",
      filterOption: (input, option) => {
        var _option$props$childre5;
        return ((_option$props$childre5 = option.props.children) === null || _option$props$childre5 === void 0 ? void 0 : _option$props$childre5.indexOf(Object(_common_common_func__WEBPACK_IMPORTED_MODULE_9__["convertToArabic"])(input))) != -1;
      }
    }, blockNum
    //.slice(0, 100)
    .map((e, i) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(Option, {
      key: i,
      value: e.attributes.BLOCK_SPATIAL_ID
    }, Object(_common_common_func__WEBPACK_IMPORTED_MODULE_9__["localizeNumber"])(e.attributes.BLOCK_NO)))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(antd_lib_select__WEBPACK_IMPORTED_MODULE_5___default.a, {
      getPopupContainer: trigger => trigger.parentNode,
      autoFocus: true,
      onChange: val => {
        Object(_common__WEBPACK_IMPORTED_MODULE_10__["onLandParcelChange"])(this, val);
      },
      showSearch: true,
      disabled: parcelNum && !parcelNum.length,
      onSearch: e => {
        this.setState({
          parcelSearch: e
        });
        Object(_common__WEBPACK_IMPORTED_MODULE_10__["onSearch"])(this, e);
      },
      filterOption: (input, option) => {
        if (option.props.children) {
          var _option$props$childre6;
          return ((_option$props$childre6 = option.props.children) === null || _option$props$childre6 === void 0 ? void 0 : _option$props$childre6.indexOf(Object(_common_common_func__WEBPACK_IMPORTED_MODULE_9__["convertToArabic"])(input))) != -1;
        } else {
          return false;
        }
      },
      value: parcelval,
      placeholder: "\u0631\u0642\u0645 \u0642\u0637\u0639\u0629 \u0627\u0644\u0627\u0631\u0636"
    }, parcelNum && parcelNum.filter((e, i) => {
      if (parcelSearch) {
        if (this.state.selectedLands.length) {
          return !this.state.selectedLands.find(tt => tt.attributes.PARCEL_SPATIAL_ID == e.attributes.PARCEL_SPATIAL_ID);
        } else {
          return e.attributes.PARCEL_PLAN_NO && e.attributes.PARCEL_PLAN_NO.toLowerCase().indexOf(parcelSearch.toLowerCase()) >= 0;
        }
      } else {
        if (selectedLands !== null && selectedLands !== void 0 && selectedLands.length) {
          return !selectedLands.find(tt => tt.attributes.PARCEL_PLAN_NO == e.attributes.PARCEL_PLAN_NO) && e.attributes.PARCEL_PLAN_NO;
        } else {
          return e.attributes.PARCEL_PLAN_NO;
        }
      }
    }).slice(0, 100).map((e, i) => {
      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(Option, {
        onMouseEnter: this.LandHoverOn,
        onMouseLeave: this.LandHoverOff,
        key: e.attributes.PARCEL_SPATIAL_ID,
        value: e.i
      }, Object(_common_common_func__WEBPACK_IMPORTED_MODULE_9__["localizeNumber"])(e.attributes.PARCEL_PLAN_NO));
    })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(antd_lib_button__WEBPACK_IMPORTED_MODULE_1___default.a, {
      className: "add-gis",
      disabled: this.state.parcelId === null,
      onClick: this.OnParcelSelect
    }, "\u0625\u0636\u0627\u0641\u0629 \u0627\u0644\u0623\u0631\u0636")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(_MapComponent_MapComponent__WEBPACK_IMPORTED_MODULE_14__["default"], _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_2___default()({
      mapload: this.mapLoaded.bind(this)
    }, this.props))), mapLoaded && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement("div", {
      style: {
        gridColumn: "1/3"
      }
    }, selectedLands && selectedLands.length > 0 && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement("div", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement("h1", {
      className: "titleSelectedParcel"
    }, "\u0627\u0644\u0623\u0631\u0627\u0636\u064A \u0627\u0644\u0645\u062E\u062A\u0627\u0631\u0629"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement("table", {
      className: "table table-bordered",
      style: {
        marginTop: "1%"
      }
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement("thead", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement("tr", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement("th", null, "\u0631\u0642\u0645 \u0627\u0644\u0642\u0637\u0639\u0647"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement("th", null, "\u0627\u0644\u0645\u0633\u0627\u062D\u0629 \u0645\u0646 \u0627\u0644\u0635\u0643 \u0645\u0662"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement("th", null, "\u0631\u0642\u0645 \u0627\u0644\u0628\u0644\u0643"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement("th", null, "\u0627\u0644\u062D\u064A"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement("th", null, "\u0646\u0648\u0639 \u0627\u0644\u062A\u0642\u0633\u064A\u0645"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement("th", null, "\u0627\u0633\u0645 \u0627\u0644\u062A\u0642\u0633\u064A\u0645"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement("th", null, "\u0631\u0645\u0632 \u0627\u0644\u0627\u0633\u062A\u062E\u062F\u0627\u0645"), !window.isAkarApp && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement("th", null, "\u0627\u0644\u0645\u0633\u0627\u062D\u0629 \u0645\u0646 \u0627\u0644\u0637\u0628\u064A\u0639\u0629 \u0645\u0662"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement("th", null, " \u062E\u064A\u0627\u0631\u0627\u062A"))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement("tbody", null, selectedLands.map((e, i) => {
      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement("tr", {
        key: i
      }, this.parcel_fields.map((field, k) => {
        return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement("td", {
          key: k
        }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement("div", null, !this.state[field + "_isEdit_" + i] ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement("span", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement("span", null, e.attributes[field] || "غير متوفر"), this.showEditBtn(field, e.attributes[field]) && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement("span", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement("button", {
          className: "btn",
          style: {
            marginRight: "20px"
          },
          onClick: this.enableEdit.bind(this, field, i)
        }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement("i", {
          className: "fas fa-edit"
        })))) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement("span", {
          style: {
            display: "grid",
            gridTemplateColumns: "1fr auto"
          }
        }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement("input", {
          key: i,
          className: "form-control",
          type: "text",
          onChange: this.myChangeHandler.bind(this, field)
        }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement("button", {
          className: "btn",
          style: {
            marginRight: "20px"
          },
          onClick: this.saveEdit.bind(this, e.id, field, i)
        }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement("i", {
          className: "fa fa-floppy-o"
        })))));
      }), i === selectedLands.length - 1 ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement("td", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement("button", {
        className: " btn btn-danger ",
        onClick: this.remove.bind(this, e)
      }, "\u062D\u0630\u0641")) : "");
    }))))));
  }
}
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_17__["connect"])(_mapping__WEBPACK_IMPORTED_MODULE_16__["mapStateToProps"], _mapping__WEBPACK_IMPORTED_MODULE_16__["mapDispatchToProps"])(addedParcelsIdentifyComponnent));

/***/ })

}]);
//# sourceMappingURL=71.min.js.map