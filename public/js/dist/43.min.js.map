{"version":3,"file":"43.min.js","sources":["webpack:///./src/app/helpers/components/show/list/table/head/index.js","webpack:///./src/app/helpers/components/show/list/table/head/types/index.js","webpack:///./src/app/helpers/components/show/list/table/index.js","webpack:///./src/app/helpers/components/show/list/table/row/index.js","webpack:///./src/app/helpers/components/show/list/table/row/types/index.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport * as heads from './types';\r\nimport {get} from 'lodash'\r\nimport {translate} from 'react-i18next';\r\nclass Head extends Component {\r\n    render() {\r\n        const {head, t} = this.props;\r\n        const HeadComponent = get(heads, head.type, heads.label)\r\n        return (\r\n            <th>\r\n                <HeadComponent head={t(head.head || head)} />\r\n            </th>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withTranslation(\"labels\")(Head)\r\n","import {lazy} from 'react'\r\n\r\nexport const label = lazy(()=>import('./label'))","import React, { Component } from 'react';\r\nimport {map} from 'lodash';\r\nimport Head from './head';\r\nimport Row from './row';\r\n\r\nexport default class index extends Component {\r\n    renderHeads = ()=>{\r\n        const {field} = this.props\r\n        return <thead>\r\n            {map(field.fields, (d, key)=>(<Head head={d.head} key={key}></Head>))}\r\n        </thead>\r\n    }\r\n    renderRow = (d, key)=>{\r\n        const {field, ShowField} = this.props;\r\n        return <tr>\r\n            {map(field.fields, (f, k)=><Row key={''+key+k} ShowField={ShowField} data={d} select={f.name || k} mainValues={d} field={f} />)}\r\n        </tr>\r\n    }\r\n    renderBody = ()=>{\r\n        const {val} = this.props\r\n        return map(val, this.renderRow)\r\n    }\r\n    render() {\r\n        \r\n        return (\r\n            <table className=\"table table-bordered\">\r\n                {this.renderHeads()}\r\n                <tbody>\r\n                    {this.renderBody()}\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { get } from \"lodash\";\r\nimport * as Cells from \"./types\";\r\nimport { apply_field_permission } from \"app/helpers/functions/apply_permissions\";\r\nimport {\r\n  checkImage,\r\n  convertToArabic,\r\n} from \"../../../../../../components/inputs/fields/identify/Component/common/common_func\";\r\nexport default class Row extends Component {\r\n  render() {\r\n    const { field, data, select, ...props } = this.props;\r\n    const MainComponent = get(Cells, field.type, Cells.label);\r\n    const d =\r\n      (this.props.field?.init_data &&\r\n        this.props.field?.init_data(get(data, select), this.props)) ||\r\n      get(data, select);\r\n    // console.log(field, data)\r\n    const perm = apply_field_permission(data, field, this.props);\r\n    // console.log(d, select)\r\n    \r\n    return (\r\n      <td>\r\n        {perm &&\r\n          (([\"image\"].indexOf(field.type) != -1 &&\r\n            checkImage(this.props, d, { width: \"100px\" })) || (\r\n            <MainComponent\r\n              d={convertToArabic(d)}\r\n              row={data}\r\n              field={{ ...field, name: select }}\r\n              {...props}\r\n            />\r\n          ))}\r\n      </td>\r\n    );\r\n  }\r\n}\r\n","import {lazy} from 'react'\r\n\r\nexport const label = lazy(()=>import('./label'))\r\nexport const input = lazy(()=>import('./input'))\r\nexport const actions = lazy(()=>import('./actions'))\r\nexport const image = lazy(()=>import('./image'))\r\nexport const show = lazy(()=>import('./show'))"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAGA;AACA;AAEA;;;;;;;;;;;;AChBA;AAAA;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AAOA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACjCA;AAEA;AACA;AACA;AAIA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAIA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;;;;;;;;;;;;ACnCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}