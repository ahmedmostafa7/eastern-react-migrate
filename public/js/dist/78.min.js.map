{"version":3,"file":"78.min.js","sources":["webpack:///./src/app/components/inputs/fields/list/collapse/collapse.js","webpack:///./src/app/components/inputs/fields/list/collapse/index.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport {map, pick} from 'lodash'\r\nimport {serverFieldMapper} from 'app/helpers/functions' \r\nimport {FormControl} from 'app/components/inputs';\r\n\r\nexport default class collapse extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        // \r\n        this.fields= map(props.fields, (value, key) =>\r\n            ({ name: key, ...serverFieldMapper(value, props) })\r\n        )\r\n        // console.log(props)\r\n    }\r\n    render() {\r\n        return (\r\n            map(this.fields, (f)=>{\r\n                return <FormControl {...{...pick(this.props, ['change', 'touch', 'untouch', \"values\", \"index\"]), ...f}} />\r\n            })\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { apply_field_permission } from \"app/helpers/functions\";\r\nimport memoize from \"memoize-one\";\r\nimport { FormSection } from 'redux-form';\r\nimport { Collapse } from 'antd';\r\nimport {translate} from 'react-i18next'\r\nimport {map, get, last, isEqual, keys} from 'lodash'\r\nimport {Icon} from 'antd'\r\nconst Panel = Collapse.Panel;\r\nimport Collpasing from './collapse'\r\nimport mapDispatchToProps from 'main_helpers/actions/main'\r\nimport {connect} from 'react-redux'\r\nclass CollapseInput extends Component {\r\n    state = {\r\n        keys: []\r\n    }\r\n    filteringFields = memoize(\r\n        (values) => {      \r\n          return this.fields.filter(field => apply_field_permission(values, this.props.field, this.props))\r\n        }\r\n    )\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const newKeys = keys(nextProps.input.value)\r\n        const oldKeys = keys(this.props.input.value)\r\n        if(!isEqual(oldKeys, newKeys)){\r\n            this.state.keys = last(newKeys)\r\n        }\r\n        return !isEqual({props: this.props, state: this.state}, {props: nextProps, state: nextState})\r\n    }\r\n    changeKeys = (keys)=>{\r\n        this.setState({keys})\r\n    }\r\n    submit = (values)=>{\r\n        const {ok, onCancel} = this.props;\r\n        ok(values, this.props).then(data=>{\r\n            onCancel()\r\n        })\r\n    }\r\n    genExtra = (data) => {\r\n      const {extra={}, values} = this.props;\r\n      return <>\r\n      {map(extra, d=>(\r\n          <Icon\r\n            type={d.icon}\r\n            onClick={(event)=>{\r\n                event.stopPropagation();\r\n                d.action(this.props, data, values)\r\n            }}\r\n          />\r\n      ))}\r\n      </>\r\n    }\r\n    render() {\r\n        const {input, show=\"name\", t, title} = this.props\r\n        const name = last(input.name.split('.'))\r\n        let number = 1\r\n        // console.log(this.props)\r\n        \r\n        return (\r\n            <Collapse\r\n                className='Collapse'\r\n                activeKey={this.state.keys}\r\n                onChange={this.changeKeys}\r\n                key={get(map(input.value, (section, key) => key), '[0]')}\r\n            >\r\n                {map(input.value, (data, key) =>\r\n                    <Panel key={key} header={t(get(data, show, t(title)+ ` ${number++}`))} forceRender={true} extra={this.genExtra(data)}>\r\n                        <FormSection name={`${name}.${data.main_id || key}`} className=\"qrrr\">\r\n                            <Collpasing index={data.main_id || key} {...this.props} data={data} />\r\n                        </FormSection>\r\n                        {/* </Card> */}\r\n                    </Panel>\r\n                )}\r\n            </Collapse>\r\n        )\r\n    }\r\n}\r\nexport default connect(null, mapDispatchToProps)(withTranslation(\"labels\")(CollapseInput))"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AAUA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAIA;AAAA;AA9BA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAwBA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;;;;A","sourceRoot":""}