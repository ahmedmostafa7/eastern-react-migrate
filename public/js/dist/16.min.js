(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[16],{

/***/ "./src/app/components/inputs/fields/identify/Component/msa7yDataComponent/Helpers.js":
/*!*******************************************************************************************!*\
  !*** ./src/app/components/inputs/fields/identify/Component/msa7yDataComponent/Helpers.js ***!
  \*******************************************************************************************/
/*! exports provided: selectDis, DataQuery, queryOption, querySetting, DataReqest */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectDis", function() { return selectDis; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DataQuery", function() { return DataQuery; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryOption", function() { return queryOption; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "querySetting", function() { return querySetting; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DataReqest", function() { return DataReqest; });
/* harmony import */ var esri_loader__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! esri-loader */ "./node_modules/esri-loader/dist/umd/esri-loader.js");
/* harmony import */ var esri_loader__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(esri_loader__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _mapviewer_config_map__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../mapviewer/config/map */ "./src/app/components/inputs/fields/identify/Component/mapviewer/config/map.js");


const options = {
  url: 'https://js.arcgis.com/3.13'
};
const selectDis = e => {
  var a = [];
  e.forEach(el => {
    el.features.forEach(element => {
      if (!a.find(t => t.attributes.PARCEL_SPATIAL_ID == element.attributes.PARCEL_SPATIAL_ID)) {
        a.push(element);
      }
    });
  });
  return a;
};
const DataQuery = (layerNum, QueryOptions, CallBack) => {
  Object(esri_loader__WEBPACK_IMPORTED_MODULE_0__["loadModules"])(["esri/symbols/SimpleLineSymbol", "esri/Color", "esri/layers/FeatureLayer", "esri/tasks/RelationshipQuery", "esri/tasks/QueryTask", "esri/tasks/query", "esri/request", "esri/geometry/Polygon", "esri/symbols/SimpleFillSymbol", "esri/graphic"], options).then(([SimpleLineSymbol, Color, FeatureLayer, RQuery, QueryTask, Query, request, Polygon, SimpleFillSymbol, Graphic]) => {
    var query = new Query();
    var qt = new QueryTask(_mapviewer_config_map__WEBPACK_IMPORTED_MODULE_1__["mapUrl"] + `/${layerNum}`);
    QueryOptions.forEach(e => {
      query[e.name] = e.value;
    });
    qt.execute(query, CallBack, res => {
      console.log(res);
    });
  });
};
const queryOption = (where, geo, outfields) => {
  return [{
    name: "where",
    value: where
  }, {
    name: "returnGeometry",
    value: geo
  }, {
    name: "outFields",
    value: outfields
  }];
};
const querySetting = (num, where, geo, outfields, url) => {
  return {
    url: (url || _mapviewer_config_map__WEBPACK_IMPORTED_MODULE_1__["mapUrl"]) + "/" + num,
    where,
    returnGeometry: geo,
    outFields: outfields
  };
};
const DataReqest = (url, callBack) => {
  Object(esri_loader__WEBPACK_IMPORTED_MODULE_0__["loadModules"])(["esri/request"], options).then(([request]) => {
    request({
      url: url,
      content: {
        f: "json"
      },
      handleAs: "json",
      callbackParamName: "callback"
    }).then(callBack);
  });
};

/***/ }),

/***/ "./src/app/components/inputs/fields/identify/Component/msa7yDataComponent/cadSuggestedData.js":
/*!****************************************************************************************************!*\
  !*** ./src/app/components/inputs/fields/identify/Component/msa7yDataComponent/cadSuggestedData.js ***!
  \****************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var antd_lib_row_style__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antd/lib/row/style */ "./node_modules/antd/lib/row/style/index.js");
/* harmony import */ var antd_lib_row_style__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(antd_lib_row_style__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var antd_lib_row__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! antd/lib/row */ "./node_modules/antd/lib/row/index.js");
/* harmony import */ var antd_lib_row__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(antd_lib_row__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var antd_lib_select_style__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! antd/lib/select/style */ "./node_modules/antd/lib/select/style/index.js");
/* harmony import */ var antd_lib_select_style__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(antd_lib_select_style__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var antd_lib_select__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! antd/lib/select */ "./node_modules/antd/lib/select/index.js");
/* harmony import */ var antd_lib_select__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(antd_lib_select__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var antd_lib_col_style__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! antd/lib/col/style */ "./node_modules/antd/lib/col/style/index.js");
/* harmony import */ var antd_lib_col_style__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(antd_lib_col_style__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var antd_lib_col__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! antd/lib/col */ "./node_modules/antd/lib/col/index.js");
/* harmony import */ var antd_lib_col__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(antd_lib_col__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/extends.js");
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var antd_lib_tabs_style__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! antd/lib/tabs/style */ "./node_modules/antd/lib/tabs/style/index.js");
/* harmony import */ var antd_lib_tabs_style__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(antd_lib_tabs_style__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var antd_lib_tabs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! antd/lib/tabs */ "./node_modules/antd/lib/tabs/index.js");
/* harmony import */ var antd_lib_tabs__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(antd_lib_tabs__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var lodash_isEmpty__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! lodash/isEmpty */ "./node_modules/lodash/isEmpty.js");
/* harmony import */ var lodash_isEmpty__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(lodash_isEmpty__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var lodash_isEqual__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! lodash/isEqual */ "./node_modules/lodash/isEqual.js");
/* harmony import */ var lodash_isEqual__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(lodash_isEqual__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var _helpers_apiMethods__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../../../../helpers/apiMethods */ "./src/app/helpers/apiMethods/index.js");
/* harmony import */ var _main_helpers_functions_filters_state__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../../../../../main_helpers/functions/filters/state */ "./src/main_helpers/functions/filters/state.js");
/* harmony import */ var _common_esri_request__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../common/esri_request */ "./src/app/components/inputs/fields/identify/Component/common/esri_request.js");
/* harmony import */ var react_i18next__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! react-i18next */ "./node_modules/react-i18next/dist/es/index.js");
/* harmony import */ var _common_common_func__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../common/common_func */ "./src/app/components/inputs/fields/identify/Component/common/common_func.js");
/* harmony import */ var _mapviewer_config_layers__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../mapviewer/config/layers */ "./src/app/components/inputs/fields/identify/Component/mapviewer/config/layers.js");
/* harmony import */ var _mapviewer_config_map__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../mapviewer/config/map */ "./src/app/components/inputs/fields/identify/Component/mapviewer/config/map.js");
/* harmony import */ var react_beautiful_dnd__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! react-beautiful-dnd */ "./node_modules/react-beautiful-dnd/dist/react-beautiful-dnd.esm.js");
/* harmony import */ var antd_dist_antd_css__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! antd/dist/antd.css */ "./node_modules/antd/dist/antd.css");
/* harmony import */ var antd_dist_antd_css__WEBPACK_IMPORTED_MODULE_21___default = /*#__PURE__*/__webpack_require__.n(antd_dist_antd_css__WEBPACK_IMPORTED_MODULE_21__);
/* harmony import */ var _MapComponent_MapComponent__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../MapComponent/MapComponent */ "./src/app/components/inputs/fields/identify/Component/MapComponent/MapComponent.js");
/* harmony import */ var _mapping__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../mapping */ "./src/app/components/inputs/fields/identify/Component/mapping.js");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var _Helpers__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./Helpers */ "./src/app/components/inputs/fields/identify/Component/msa7yDataComponent/Helpers.js");
/* harmony import */ var _common_esri_loader__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ../common/esri_loader */ "./src/app/components/inputs/fields/identify/Component/common/esri_loader.js");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! axios */ "./node_modules/axios/index.js");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_27___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_27__);
/* harmony import */ var _label__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ../../../label */ "./src/app/components/inputs/fields/label/index.js");
/* harmony import */ var _reducers__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ../../../../../../reducers */ "./src/app/reducers/index.js");




















const {
  TabPane
} = antd_lib_tabs__WEBPACK_IMPORTED_MODULE_9___default.a;






var uniqid = __webpack_require__(/*! uniqid */ "./node_modules/uniqid/index.js");
const _ = __webpack_require__(/*! lodash */ "./node_modules/lodash/lodash.js");




const reorder = (list, startIndex, endIndex) => {
  const result = Array.from(list);
  const [removed] = result.splice(startIndex, 1);
  result.splice(endIndex, 0, removed);
  return result;
};

/**
 * Moves an item from one list to another list.
 */
const move = (source, destination, droppableSource, droppableDestination) => {
  const sourceClone = Array.from(source);
  const destClone = Array.from(destination);
  const [removed] = sourceClone.splice(droppableSource.index, 1);
  destClone.splice(droppableDestination.index, 0, removed);
  const result = {};
  result[droppableSource.droppableId] = sourceClone;
  result[droppableDestination.droppableId] = destClone;
  return result;
};
const grid = 8;
const getItemStyle = (isDragging, draggableStyle) => ({
  // some basic styles to make the items look a bit nicer
  userSelect: "none",
  padding: "2px",
  fontSize: "20px",
  marginRight: "13px",
  float: "right",
  // change background colour if dragging
  background: "#E0E0E0",
  // styles we need to apply on draggables
  ...draggableStyle
});
const dragStyle = {
  float: "right",
  marginRight: "13px",
  backgroundColor: "#E0E0E0",
  padding: "2px"
};
const getListStyle = isDraggingOver => ({
  //background: isDraggingOver ? 'lightblue' : 'lightgrey',
  padding: grid,
  width: "100%",
  height: "60px"
});
const itemContainerNorth = {
  borderTop: "13px solid #008DFF",
  margin: "auto",
  height: "auto",
  width: "500px",
  backgroundColor: "white",
  boxShadow: "1px 1px 3px #505050",
  cursor: "pointer",
  borderRadius: "10px",
  padding: "5px",
  minHeight: "152px",
  overflow: "auto"
};
const sideClass = {
  float: "right",
  textAlign: "right",
  fontSize: "20px",
  marginLeft: "10px",
  marginRight: "10px",
  backgroundColor: "#E0E0E0"
};
const itemContainerWest = {
  borderLeft: "13px solid red",
  height: "auto",
  width: "500px",
  marginTop: "15px",
  backgroundColor: "white",
  boxShadow: "1px 1px 3px #505050",
  cursor: "pointer",
  borderRadius: "10px",
  padding: "5px",
  minHeight: "152px",
  overflow: "auto"
};
const itemContainerEmpty = {
  height: "auto",
  margin: "auto",
  width: "500px",
  marginTop: "35px",
  backgroundColor: "white",
  boxShadow: "1px 1px 3px #505050",
  cursor: "pointer",
  borderRadius: "10px",
  padding: "5px",
  minHeight: "152px",
  overflow: "auto"
};
const itemContainerEast = {
  borderRight: "13px solid #8A8A8A",
  height: "auto",
  width: "500px",
  marginTop: "15px",
  backgroundColor: "white",
  boxShadow: "1px 1px 3px #505050",
  cursor: "pointer",
  borderRadius: "10px",
  padding: "5px",
  minHeight: "152px",
  overflow: "auto"
};
const itemContainerSouth = {
  borderBottom: "13px solid #09F869",
  margin: "auto",
  height: "auto",
  width: "500px",
  marginTop: "15px",
  backgroundColor: "white",
  boxShadow: "1px 1px 3px #505050",
  cursor: "pointer",
  borderRadius: "10px",
  padding: "5px",
  minHeight: "152px",
  overflow: "auto"
};
Array.prototype.sum = prop => {
  var total = 0;
  for (var y = 0, _len = undefined.length; y < _len; y++) {
    prop = prop.replace(/\[(\w+)\]/g, ".$1");
    prop = prop.replace(/^\./, "");
    var a = prop.split(".");
    var data = JSON.parse(JSON.stringify(undefined[y]));
    for (var i = 0, n = a.length; i < n; ++i) {
      var k = a[i];
      if (k in data) {
        data = data[k];
      } else {
        return 0;
      }
    }
    total += data;
  }
  return total;
};
// Number.prototype.toFixed = function (fixed) {
//   //var re = new RegExp(`^\\d+(?:\\.\\d{0,${fixed}})?`);
//   let str = (!isNaN(Number(this)) && Number(this)?.toString()) || String(this);
//   return str?.slice(0, str.indexOf(".") + fixed + 1);
// };
class cadSuggestedDataComponent extends react__WEBPACK_IMPORTED_MODULE_12__["Component"] {
  constructor(props) {
    var _this$props$mainObjec12, _this$props$mainObjec13, _this$props$mainObjec14, _this$props$mainObjec15, _this$props$mainObjec16, _this$props$mainObjec17, _this$props$mainObjec18;
    super(props);
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default()(this, "myChangeHandler", (name, i, e, event) => {
      this["edit_" + name + i] = event.target.value;
      e[name] = event.target.value;
      this.setState({
        [name + "_isEdit_" + i]: true
      });
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default()(this, "showEditBtn", (name, value) => {
      return ["NORTH_EAST_DIRECTION", "NORTH_WEST_DIRECTION", "SOUTH_EAST_DIRECTION", "SOUTH_WEST_DIRECTION"].indexOf(name) > -1;
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default()(this, "enableEdit", (name, i) => {
      this.setState({
        [name + "_isEdit_" + i]: true
      });
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default()(this, "id2List", {
      droppable_North: "northBoundries",
      droppable_South: "southBoundries",
      droppable_East: "eastBoundries",
      droppable_West: "westBoundries"
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default()(this, "getList", id => this.state[this.id2List[id] + (this.state.activeKey - 1)]);
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default()(this, "onDragEnd", result => {
      const {
        source,
        destination
      } = result;
      if (!destination) {
        return;
      }
      if (source.droppableId === destination.droppableId) {
        const items = reorder(this.getList(source.droppableId), source.index, destination.index);
        let state = {
          items
        };
        if (source.droppableId === "droppable_South") {
          this.state["southBoundries" + (this.state.activeKey - 1)] = items;
        }
        if (source.droppableId === "droppable_North") {
          this.state["northBoundries" + (this.state.activeKey - 1)] = items;
        }
        if (source.droppableId === "droppable_East") {
          this.state["eastBoundries" + (this.state.activeKey - 1)] = items;
        }
        if (source.droppableId === "droppable_West") {
          this.state["westBoundries" + (this.state.activeKey - 1)] = items;
        }
      } else {
        const result = move(this.getList(source.droppableId), this.getList(destination.droppableId), source, destination);
        if (result.droppable_North) {
          this.state.polygons[+this.state.activeKey - 1].data[0].data = result.droppable_North.map(item => {
            return item.data;
          });
        }
        if (result.droppable_West) {
          this.state.polygons[+this.state.activeKey - 1].data[3].data = result.droppable_West.map(item => {
            return item.data;
          });
        }
        if (result.droppable_South) {
          this.state.polygons[+this.state.activeKey - 1].data[4].data = result.droppable_South.map(item => {
            return item.data;
          });
        }
        if (result.droppable_East) {
          this.state.polygons[+this.state.activeKey - 1].data[1].data = result.droppable_East.map(item => {
            return item.data;
          });
        }
        this.dropSuccess();
        this.calculateLines();
        this.state["northBoundries" + (this.state.activeKey - 1)] = result.droppable_North || this.state["northBoundries" + (this.state.activeKey - 1)];
        this.state["southBoundries" + (this.state.activeKey - 1)] = result.droppable_South || this.state["southBoundries" + (this.state.activeKey - 1)];
        this.state["eastBoundries" + (this.state.activeKey - 1)] = result.droppable_East || this.state["eastBoundries" + (this.state.activeKey - 1)];
        this.state["westBoundries" + (this.state.activeKey - 1)] = result.droppable_West || this.state["westBoundries" + (this.state.activeKey - 1)];
      }
      this.settoStore(this.state.polygons);
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default()(this, "dropSuccess", () => {
      const {
        input
      } = this.props;
      const {
        layerParcels
      } = this.state;
      Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["clearGraphicFromLayer"])(this.map, "boundriesDirection");
      Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["clearGraphicFromLayer"])(this.map, "highlightBoundriesGraphicLayer");
      Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["clearGraphicFromLayer"])(this.map, "pictureGraphicLayer");
      Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["clearGraphicFromLayer"])(this.map, "PacrelNoGraphicLayer");
      var count = 0;
      var oldData = JSON.parse(JSON.stringify(layerParcels));
      this.state.layerParcels = [];
      Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["sortLines"])(this.state.polygons);
      this.state.polygons.forEach((polygon, key) => {
        if (polygon.polygon) {
          count++;
          var parcelNumber = key + 1;
          if (oldData[key]) {
            polygon.corners = JSON.parse(JSON.stringify(oldData[key].corners));
          } else polygon.corners = [];
          layerParcels.push(JSON.parse(JSON.stringify(polygon.polygon)));
          layerParcels[layerParcels.length - 1].lines = [];
          layerParcels[layerParcels.length - 1].corners = [];
          polygon.data.forEach(boundry => {
            var lineDirection;
            if (boundry.name != "main") {
              var color = [0, 0, 255];
              if (boundry.name == "north") {
                color = [0, 141, 255];
                lineDirection = 1;
              } else if (boundry.name == "east") {
                color = [117, 114, 114];
                lineDirection = 2;
              } else if (boundry.name == "west") {
                color = [255, 0, 0];
                lineDirection = 4;
              } else if (boundry.name == "south") {
                color = [0, 255, 0];
                lineDirection = 3;
              }
              boundry.data.forEach(line => {
                if (this.toLoadLines) {
                  line.color = color;
                  line.polygonNum = count;
                  line.lineDirection = lineDirection;
                  var polyline = new esri.geometry.Polyline(line);
                  var point1 = {};
                  point1.x = line.paths[0][0][0];
                  point1.y = line.paths[0][0][1];
                  point1.x = Number(point1.x.toPrecision(12));
                  point1.y = Number(point1.y.toPrecision(12));
                  var latlng = esri.geometry.xyToLngLat(point1.x, point1.y);
                  point1.lat = latlng[0];
                  point1.lng = latlng[1];
                  var point2 = {};
                  point2.x = line.paths[0][1][0];
                  point2.y = line.paths[0][1][1];
                  point2.x = Number(point2.x.toPrecision(12));
                  point2.y = Number(point2.y.toPrecision(12));
                  latlng = esri.geometry.xyToLngLat(point2.x, point2.y);
                  point2.lat = latlng[0];
                  point2.lng = latlng[1];
                  var fromCornerIndex = Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["getCornersIndex"])(polygon.corners, point1);
                  if (fromCornerIndex == -1) {
                    polygon.corners.push(point1);
                    fromCornerIndex = polygon.corners.length;
                  }
                  var toCornerIndex = Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["getCornersIndex"])(polygon.corners, point2);
                  if (toCornerIndex == -1) {
                    polygon.corners.push(point2);
                    toCornerIndex = polygon.corners.length;
                  }
                  line.from = fromCornerIndex;
                  line.to = toCornerIndex;
                  line.BOUNDARY_NO = line.from;
                  var polyline = new esri.geometry.Polyline(line);
                  layerParcels[layerParcels.length - 1].lines.push(polyline);
                  var attr = {
                    parcelNumber: parcelNumber
                  };
                  Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["addGraphicToLayer"])(polyline, this.map, "boundriesDirection", color, null, null, null, attr);
                }
                // else {
                //   var polyline = new esri.geometry.Polyline(line);
                //   addGraphicToLayer(polyline, this.map, "boundriesDirection", color, null, null, null, attr);
                // }
              });
            }
          });
          layerParcels[layerParcels.length - 1].corners = JSON.parse(JSON.stringify(polygon.corners));
        }
      });

      //draw corners
      layerParcels.forEach((polygon, key) => {
        var polygonClass = new esri.geometry.Polygon(polygon);
        var graphic = new esri.Graphic(polygonClass, null, null, null);
        var pt = graphic.geometry.getExtent().getCenter();
        polygon.lines.forEach((line, key) => {
          var attr = {
            BOUNDARY_NO: line.BOUNDARY_NO,
            FROM_CORNER: line.from,
            TO_CORNER: line.to,
            BOUNDARY_LENGTH: line.text,
            BOUNDARY_DIRECTION: line.lineDirection
          };
          var graphic = new esri.Graphic(line, null, attr, null);
          polygon.lines[key] = graphic;
          var tempString = " يميل "; //" من النقطة " + "<b>" + line.from + "</b>" + " الي النقطة " + "<b>" + line.to + "</b>" + " ";

          if (line.lineDirection == 1) {
            if (!polygon.northDescription) polygon.northDescription = "من الغرب الي الشرق";else {
              polygon.northDescription += " ثم ";
            }
            polygon.northDescription += tempString + Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["computeAngle"])(line.paths[0][0], line.paths[0][1]) + " بطول " + "<b>" + line.text + "</b>" + " م";
          } else if (line.lineDirection == 4) {
            if (!polygon.westDescription) polygon.westDescription = " من الجنوب الي الشمال";else {
              polygon.westDescription += " ثم ";
            }
            polygon.westDescription += tempString + Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["computeAngle"])(line.paths[0][0], line.paths[0][1]) + " بطول " + "<b>" + line.text + "</b>" + " م";
          } else if (line.lineDirection == 3) {
            if (!polygon.southDescription) polygon.southDescription = "من الشرق الي الغرب";else {
              polygon.southDescription += " ثم ";
            }
            polygon.southDescription += tempString + Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["computeAngle"])(line.paths[0][0], line.paths[0][1]) + " بطول " + "<b>" + line.text + "</b>" + " م";
          } else if (line.lineDirection == 2) {
            if (!polygon.eastDescription) polygon.eastDescription = "من الشمال الي الجنوب";else {
              polygon.eastDescription += " ثم ";
            }
            polygon.eastDescription += tempString + Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["computeAngle"])(line.paths[0][0], line.paths[0][1]) + " بطول " + "<b>" + line.text + "</b>" + " م";
          }
        });
        polygon.corners.forEach((corner, key) => {
          var point = new esri.geometry.Point(corner.lat, corner.lng);
          var mp = esri.geometry.geographicToWebMercator(point);
          var iconTextPosition;
          var iconPosition;
          if (!corner.iconPosition) {
            iconTextPosition = {
              x: -5,
              y: 0
            };
            iconPosition = {
              x: 0,
              y: 0
            };
            if (layerParcels.length > 1) {
              iconPosition = Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["getCornerIconPosition"])(key + 1, polygon.lines);
              iconTextPosition.x = iconPosition.x > 0 ? iconPosition.x : iconPosition.x - 5;
              iconTextPosition.y = iconPosition.y > 0 ? iconPosition.y : iconPosition.y - 4;
            }
            corner.iconTextPosition = iconTextPosition;
            corner.iconPosition = iconPosition;
          } else {
            iconTextPosition = corner.iconTextPosition;
            iconPosition = corner.iconPosition;
          }
        });
      });
      this.state.polygons.forEach((polygon, key) => {
        if (polygon.polygon) {
          var polygonClass = new esri.geometry.Polygon(polygon.polygon);
          var graphic = new esri.Graphic(polygonClass, null, null, null);
          var pt = graphic.geometry.getExtent().getCenter();
          polygon.position = pt;
          polygon.northDescription = layerParcels[key].northDescription;
          polygon.westDescription = layerParcels[key].westDescription;
          polygon.southDescription = layerParcels[key].southDescription;
          polygon.eastDescription = layerParcels[key].eastDescription;
        }
      });

      // DrawIntersectLines();
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default()(this, "higlightNotify", polygon => {
      Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["highlightFeature"])(polygon, this.map, "notifyZoomGraphicLayer", null, [255, 255, 255], null, null, true, null, 4);
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default()(this, "clearHighlightNotify", () => {
      Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["clearGraphicFromLayer"])(this.map, "notifyZoomGraphicLayer");
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default()(this, "confirmNotify", hide => {
      if (!hide) {
        this.state["hasNotify"] = false;
        this.state["isConfirmed"] = true;
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["clearGraphicFromLayer"])(this.map, "addedParclGraphicLayer");
        this.state.polygons.forEach((elem, key) => {
          //elem.geometry = ;
          Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["addGraphicToLayer"])(elem.polygon, this.map, "addedParclGraphicLayer", [0, 0, 255, 0.8], null, true, param => {
            Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["zoomToLayer"])("addedParclGraphicLayer", this.map, 10);
            //resizeMap(this.map);
          });
        });
        this.getSuggestLine();
      } else {
        this.state["hasNotify"] = true;
        this.state["isConfirmed"] = false;
      }
      var polygons = null;
      if (this.props.mainObject && this.props.mainObject.data_msa7y) {
        var _cadDetails$suggestio;
        const {
          mainObject: {
            data_msa7y: {
              msa7yData: {
                cadDetails
              }
            }
          }
        } = this.props;
        polygons = !this.InvokedToAdParcel && (cadDetails === null || cadDetails === void 0 ? void 0 : (_cadDetails$suggestio = cadDetails.suggestionsParcels) === null || _cadDetails$suggestio === void 0 ? void 0 : _cadDetails$suggestio.length) > 0 ? cadDetails === null || cadDetails === void 0 ? void 0 : cadDetails.suggestionsParcels : this.state["polygons"];
      } else {
        polygons = this.state["polygons"];
      }
      if (!this.state["hasNotify"] && this.state["isConfirmed"]) {
        polygons.map((parcel, index) => {
          parcel.notify = parcel.polygon.notify = "";
        });
        if (this.state.cadResults && this.state.cadResults.shapeFeatures && this.state.cadResults.shapeFeatures.length) {
          this.state.cadResults.shapeFeatures.map(parcel => {
            parcel.notify = "";
          });
        }
      }
      this.settoStore(polygons);
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default()(this, "addParcelToSelect", (geometries, parcelIds) => {
      return new Promise((resolve, reject) => {
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["intersectQueryTask"])({
          outFields: ["OBJECTID", "MUNICIPALITY_NAME", "PARCEL_AREA", "PARCEL_LAT_COORD", "PARCEL_LONG_COORD", "PARCEL_MAIN_LUSE", "PLAN_NO", "PARCEL_PLAN_NO", "USING_SYMBOL", "PARCEL_SPATIAL_ID"],
          //spatialRelationship: esri.tasks.Query.SPATIAL_REL_TOUCHES,
          geometry: geometries,
          // features[0].geometry
          url: _mapviewer_config_map__WEBPACK_IMPORTED_MODULE_19__["mapUrl"] + "/" + this.LayerID.Landbase_Parcel,
          where: `PARCEL_PLAN_NO ${parcelIds && "in (" + parcelIds.join(",") + ")" || "is not null"}`,
          callbackResult: res => {
            return resolve(res);
          }
        });
        //}
      });
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default()(this, "initAddParcelNo", pacrels => {
      //clearGraphicFromLayer(this.map, "MapPacrelNoGraphicLayer");
      //
      Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["highlightFeature"])(pacrels, this.map, {
        layerName: "SelectLandsGraphicLayer",
        noclear: false,
        isZoom: false,
        isHiglightSymbol: true,
        highlighColor: [0, 255, 0, 0.5],
        zoomFactor: 10
      });
      pacrels.forEach(val => {
        var pt;
        try {
          pt = val.geometry.getExtent().getCenter();
        } catch (e) {
          if (val.geometry.type == "polygon") {
            val.geometry = new esri.geometry.Polygon(val.geometry);
          }
          pt = val.geometry.getExtent().getCenter();
        }
        var angle = Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["getPacrelNoAngle"])(val);
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["addParcelNo"])(pt, this.map, Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["convertToArabic"])(val.attributes.PARCEL_PLAN_NO), "PacrelUnNamedGraphicLayer", 28, null, angle);
      });
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default()(this, "cancelNotify", () => {
      this.resetMap();
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default()(this, "clearAllGraphics", () => {
      Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["clearGraphicFromLayer"])(this.map, "highlightBoundriesGraphicLayer");
      Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["clearGraphicFromLayer"])(this.map, "PacrelLenNoGraphicLayer");
      Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["clearGraphicFromLayer"])(this.map, "PacrelNoGraphicLayer");
      Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["clearGraphicFromLayer"])(this.map, "addedParclGraphicLayer");
      Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["clearGraphicFromLayer"])(this.map, "boundriesGraphicLayer");
      Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["clearGraphicFromLayer"])(this.map, "boundriesDirection");
      Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["clearGraphicFromLayer"])(this.map, "pictureGraphicLayer");
      Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["clearGraphicFromLayer"])(this.map, "PacrelUnNamedGraphicLayer");
      Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["clearGraphicFromLayer"])(this.map, "detailedGraphicLayer");
      Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["clearGraphicFromLayer"])(this.map, "floorGraphicLayer");
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default()(this, "calculateLines", () => {
      // if (this.state.polygons && this.state.polygons.length) {

      this.state.polygons.forEach((polygon, key) => {
        polygon.data.forEach(lines => {
          lines.totalLength = 0;
          lines.data.forEach(line => {
            if (!line.hide) lines.totalLength += +(+line.text).toFixed(2);
          });
          lines.totalLength = lines.totalLength;
        });
      });
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default()(this, "getSuggestLine", () => {
      this.state.polygons.forEach((polygon, index) => {
        if (polygon.area != -1) {
          //this.state['area' + index] = (+polygon.area).toFixed(2);
          var lengthPoint1, lengthPoint2;
          var polyg = new esri.geometry.Polygon(polygon.polygon);
          var polygonCenterPoint = polyg.getExtent().getCenter();
          polygon.data[2].data.forEach((boundry, key) => {
            // //if (this.toLoadLines) {
            // var line = new esri.geometry.Polyline(boundry);
            // var centerPointofLine = line.getExtent().getCenter();

            // var diffrenceInXWithMaxPoint = Math.abs(
            //   centerPointofLine.x - polygon.maxPoint.x
            // );
            // var diffrenceWithPolygonCenterPoint = Math.abs(
            //   centerPointofLine.x - polygonCenterPoint.x
            // );

            // if (diffrenceInXWithMaxPoint < diffrenceWithPolygonCenterPoint) {
            //   polygon.data[1].data.push(boundry);
            // } else {
            //   var diffrenceInXWithMinPoint = Math.abs(
            //     centerPointofLine.x - polygon.minPoint.x
            //   );
            //   if (diffrenceInXWithMinPoint < diffrenceWithPolygonCenterPoint) {
            //     polygon.data[3].data.push(boundry);
            //   } else if (centerPointofLine.y > polygonCenterPoint.y) {
            //     polygon.data[0].data.push(boundry);
            //   } else {
            //     polygon.data[4].data.push(boundry);
            //   }
            // }
            // //}
            let direction = Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["computePointDirection"])(polygon, boundry.paths[0][0], boundry.paths[0][1], polyg);
            if (direction.direction == "east") {
              polygon.data[1].data.push(boundry);
            } else {
              if (direction.direction == "west") {
                polygon.data[3].data.push(boundry);
              } else if (direction.direction == "north") {
                polygon.data[0].data.push(boundry);
              } else if (direction.direction == "south") {
                polygon.data[4].data.push(boundry);
              }
            }
          });
          polygon.data[2].data = [];
        }
      });
      this.dropSuccess();
      if (this.state.polygons && this.state.polygons.length > 0) {
        var obj = {
          polygons: this.state.polygons
        };
        this.state.polygons.forEach((polygon, index) => {
          this.state["westBoundries" + index] = obj["westBoundries" + index] = this.InvokedToAdParcel ? polygon.data[3].data.map((item, i) => {
            return {
              id: `item-${"west_" + i}`,
              content: item.text,
              data: item
            };
          }) : this.state["westBoundries" + index];
          this.state["northBoundries" + index] = obj["northBoundries" + index] = this.InvokedToAdParcel ? polygon.data[0].data.map((item, i) => {
            return {
              id: `item-${"north_" + i}`,
              content: item.text,
              data: item
            };
          }) : this.state["northBoundries" + index];
          this.state["eastBoundries" + index] = obj["eastBoundries" + index] = this.InvokedToAdParcel ? polygon.data[1].data.map((item, i) => {
            return {
              id: `item-${"east_" + i}`,
              content: item.text,
              data: item
            };
          }) : this.state["eastBoundries" + index];
          this.state["southBoundries" + index] = obj["southBoundries" + index] = this.InvokedToAdParcel ? polygon.data[4].data.map((item, i) => {
            return {
              id: `item-${"south_" + i}`,
              content: item.text,
              data: item
            };
          }) : this.state["southBoundries" + index];
        });
        this.setState(obj);
      }
      this.calculateLines();
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default()(this, "buildCADDetails", () => {
      var _this$props$mainObjec, _this$props$mainObjec2, _this$props$mainObjec3, _this$props$mainObjec4, _this$props$mainObjec5, _this$props$mainObjec6, _this$props$mainObjec7, _this$props$mainObjec8, _this$props$mainObjec9, _this$props$mainObjec10, _this$props$mainObjec11;
      // componentDidUpdate
      //return new Promise((resolve,reject) => {

      //const { mainObject, mapLayers, t } = this.props;
      let suggestionsParcels = (_this$props$mainObjec = this.props.mainObject) === null || _this$props$mainObjec === void 0 ? void 0 : (_this$props$mainObjec2 = _this$props$mainObjec.data_msa7y) === null || _this$props$mainObjec2 === void 0 ? void 0 : (_this$props$mainObjec3 = _this$props$mainObjec2.msa7yData) === null || _this$props$mainObjec3 === void 0 ? void 0 : (_this$props$mainObjec4 = _this$props$mainObjec3.cadDetails) === null || _this$props$mainObjec4 === void 0 ? void 0 : _this$props$mainObjec4.suggestionsParcels;
      let temp = (_this$props$mainObjec5 = this.props.mainObject) === null || _this$props$mainObjec5 === void 0 ? void 0 : (_this$props$mainObjec6 = _this$props$mainObjec5.data_msa7y) === null || _this$props$mainObjec6 === void 0 ? void 0 : (_this$props$mainObjec7 = _this$props$mainObjec6.msa7yData) === null || _this$props$mainObjec7 === void 0 ? void 0 : (_this$props$mainObjec8 = _this$props$mainObjec7.cadDetails) === null || _this$props$mainObjec8 === void 0 ? void 0 : _this$props$mainObjec8.temp;
      let requestType = (_this$props$mainObjec9 = this.props.mainObject) === null || _this$props$mainObjec9 === void 0 ? void 0 : (_this$props$mainObjec10 = _this$props$mainObjec9.tadkek_data_Msa7y) === null || _this$props$mainObjec10 === void 0 ? void 0 : (_this$props$mainObjec11 = _this$props$mainObjec10.tadkek_msa7yData) === null || _this$props$mainObjec11 === void 0 ? void 0 : _this$props$mainObjec11.requestType;
      const {
        t,
        inputs
      } = this.props;
      let {
        outRange,
        pointsLength,
        annotationLength,
        polygons,
        lineLengthFont,
        parcelNumberFont,
        isBoundry,
        cadResults,
        notify,
        hideDrag,
        muns
      } = this.state;
      //if (isPlan) {
      if (this.map && cadResults) {
        //if () {
        //if (!this.state.cadResults.data) {
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["clearGraphicFromLayer"])(this.map, "MapPacrelNoGraphicLayer");
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["clearGraphicFromLayer"])(this.map, "highlightBoundriesGraphicLayer");
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["clearGraphicFromLayer"])(this.map, "editlengthGraphicLayer");
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["clearGraphicFromLayer"])(this.map, "PacrelNoGraphicLayer");
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["clearGraphicFromLayer"])(this.map, "addedParclGraphicLayer");
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["clearGraphicFromLayer"])(this.map, "boundriesGraphicLayer");
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["clearGraphicFromLayer"])(this.map, "boundriesDirection");
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["clearGraphicFromLayer"])(this.map, "pictureGraphicLayer");
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["clearGraphicFromLayer"])(this.map, "PacrelUnNamedGraphicLayer");
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["clearGraphicFromLayer"])(this.map, "detailedGraphicLayer");
        this.state["isConfirmed"] = true;
        this.state["outRange"] = null;
        this.state["layerParcels"] = [];
        if (this.state.cadResults) {
          lineLengthFont = 20;
          parcelNumberFont = 20;
        }
        let index = -1;
        if (this.map) {
          this.state["polygons"] = [];

          //this.state.cadResults.lineFeatures = [];
          if (this.state.cadResults.lineFeatures) {
            //draw details
            this.state.cadResults.lineFeatures.forEach((line, appartNumber) => {
              var polyline = new esri.geometry.Polyline(line);
              //lineFeatures.push(polyline);
              Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["addGraphicToLayer"])(polyline, this.map, "detailedGraphicLayer", [0, 0, 255, 0.5], null, null, null);
            });
          }
          this.state["hasNotify"] = this.state["demSaveDraft"];
          Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["getPolygons"])(this.state.cadResults.shapeFeatures, (polygon, esriModules, elem, key) => {
            this.state["polygons"].push({
              parcel_name: "",
              area: -1,
              data: [{
                name: "north",
                data: [],
                totalLength: 0
              }, {
                name: "east",
                data: [],
                totalLength: 0
              }, {
                name: "main",
                data: [],
                totalLength: 0
              }, {
                name: "west",
                data: [],
                totalLength: 0
              }, {
                name: "south",
                data: [],
                totalLength: 0
              }]
            });
            var key = this.state.polygons.length - 1;
            // if (!isEmpty(this.state.polygons[key].parcel_name)) {
            //   this.state.polygons[key].parcel_name = isEmpty(this.state[`parcelSliceNo${key}`]) ? this.state[`parcel_name${key}`] : `${this.state[`parcelSliceNo${key}`]}/${this.state[`parcel_name${key}`]}`;
            // }
            //else

            if (this.InvokedToAdParcel && lodash_isEmpty__WEBPACK_IMPORTED_MODULE_10___default()(this.state.polygons[key].parcel_name)) {
              this.state[`parcelSliceNo${key}`] = this.state.polygons[key].parcelNameLeft = requestType != 2 ? "" : "1";
              this.state[`parcel_name${key}`] = [34].indexOf(this.props.currentModule.id) != -1 || [1949, 2048].indexOf(this.props.currentModule.record.workflow_id) != -1 ? `دوبلكس رقم${key + 1}` : `أرض رقم${key + 1}`; // parcels[key].attributes.PARCEL_PLAN_NO;
              this.state.polygons[key].parcel_name = this.state.polygons[key].parcelNameRight = this.state[`parcel_name${key}`];
              this.state[`duplixType${key}`] = "";
              this.state[`area${key}`] = elem.area.toFixed(2);
            }
            this.state["polygons"][key].PARCEL_SPATIAL_ID = "";
            this.state["polygons"][key].area = elem.area;
            this.state["polygons"][key].parcel_nameHidden = "";
            this.state["polygons"][key].notify = polygon.notify;
            this.state["polygons"][key].polygon = polygon;
            this.state["polygons"][key].min;
            this.state["polygons"][key].active = false;
            this.state["polygons"][key].max = 0;
            this.state["polygons"][key].maxPointLineLen;
            this.state["polygons"][key].minPointLineLen;
            this.state["polygons"][key].minLineLen;
            if (polygon.rings.length > 0) {
              var arcLength = 0;
              var arcPoints = [];
              var arcLines = [];
              for (var j = 0, n = polygon.rings[0].length - 1; j < n; j++) {
                var point1 = new esriModules.Point(polygon.rings[0][j][0], polygon.rings[0][j][1], new esri.SpatialReference({
                  wkid: polygon.spatialReference
                }));
                var point2 = new esriModules.Point(polygon.rings[0][j + 1][0], polygon.rings[0][j + 1][1], new esri.SpatialReference({
                  wkid: polygon.spatialReference
                }));
                var length = +esriModules.mathUtils.getLength(point1, point2);
                //.toFixed(2);
                //length = Number(parseFloat(length).toFixed(2));

                if (point1.x > this.state["polygons"][key].max) {
                  this.state["polygons"][key].max = point1.x;
                  this.state["polygons"][key].maxPoint = point1;
                }
                if (!this.state["polygons"][key].min || point1.x < this.state["polygons"][key].min) {
                  this.state["polygons"][key].min = point1.x;
                  this.state["polygons"][key].minPoint = point1;
                }
                if (point2.x > this.state["polygons"][key].max) {
                  this.state["polygons"][key].max = point2.x;
                  this.state["polygons"][key].maxPoint = point2;
                }
                if (!this.state["polygons"][key].min || point2.x < this.state["polygons"][key].min) {
                  this.state["polygons"][key].min = point2.x;
                  this.state["polygons"][key].minPoint = point2;
                }
                var path = {
                  paths: [[polygon.rings[0][j], polygon.rings[0][j + 1]]],
                  text: length,
                  spatialReference: polygon.spatialReference
                };
                if (!(Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["isPointOrArc"])(point1, key, this.state.cadResults.cadFeatures) && Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["isPointOrArc"])(point2, key, this.state.cadResults.cadFeatures))) {
                  if (Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["isPointOrArc"])(point2, key, this.state.cadResults.cadFeatures)) {
                    //
                    arcLength += length;
                    arcPoints.push(point1);
                    path = new esriModules.Polyline(path);
                    path.centroid = path.getExtent().getCenter();
                    arcLines.push(new esriModules.Polyline(path));
                    path.text = arcLength || length;
                    if (this.state.cadResults.boundryFeaturesLen && this.state.cadResults.boundryFeaturesLen.length && this.state.cadResults.boundryFeaturesLen.length > 0) {
                      //
                      var line = Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["getLineLength"])(this.state.cadResults.boundryFeaturesLen, arcPoints[0], point2, this.state.cadResults.isArc);
                      if (line) path.text = line.length;
                    }
                    length = path.text;
                    path.lines = arcLines;
                    arcLines = [];
                    arcLength = 0;
                    this.state["polygons"][key].data[2].data.push(JSON.parse(JSON.stringify(path)));
                    this.state["polygons"][key].data[2].data[this.state["polygons"][key].data[2].data.length - 1].centroid = path.getExtent().getCenter();
                  } else {
                    path.hide = true;
                    arcLength += length;
                    arcPoints.push(point1);
                    path = new esriModules.Polyline(path);
                    var polyline = new esriModules.Polyline(path);
                    path.centroid = polyline.getExtent().getCenter();
                    arcLines.push(new esriModules.Polyline(path));
                  }
                }
                if (Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["isPointOrArc"])(point1, key, this.state.cadResults.cadFeatures) && Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["isPointOrArc"])(point2, key, this.state.cadResults.cadFeatures)) {
                  if (this.state.cadResults.boundryFeaturesLen && this.state.cadResults.boundryFeaturesLen.length && this.state.cadResults.boundryFeaturesLen.length > 0) {
                    //
                    var line = Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["getLineLength"])(this.state.cadResults.boundryFeaturesLen, point1, point2, this.state.cadResults.isArc);
                    if (line) path.text = line.length;
                    length = path.text;
                  }
                  this.state["polygons"][key].data[2].data.push(JSON.parse(JSON.stringify(path)));
                }
                var polyline = new esriModules.Polyline(path);
                if (!this.state["polygons"][key].minLineLen || this.state["polygons"][key].minLineLen > length) this.state["polygons"][key].minLineLen = length;
                var pt = polyline.getExtent().getCenter();
                if (!(Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["isPointOrArc"])(point1, key, this.state.cadResults.cadFeatures) && Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["isPointOrArc"])(point2, key, this.state.cadResults.cadFeatures))) {
                  if (Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["isPointOrArc"])(point2, key, this.state.cadResults.cadFeatures)) {
                    if (arcPoints.length) pt = arcPoints[Math.floor(arcPoints.length / 2)];
                  }
                }
                if (Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["isPointOrArc"])(point1, key, this.state.cadResults.cadFeatures) && Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["isPointOrArc"])(point2, key, this.state.cadResults.cadFeatures)) {
                  this.state["polygons"][key].data[2].data[this.state["polygons"][key].data[2].data.length - 1].centroid = pt;
                }
                Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["addGraphicToLayer"])(polyline, this.map, "boundriesGraphicLayer", [0, 0, 255, 0.1], null, null, param => {
                  Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["zoomToLayer"])("boundriesGraphicLayer", this.map, 10);
                  //resizeMap(this.map);
                });
                if (pt.length) {
                  pt.x = pt[0];
                  pt.y = pt[1];
                }
                var attr = {
                  text: length,
                  //.toFixed(2),
                  angle: Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["getPacrelNoAngle"])({
                    geometry: polygon
                  })
                };

                // because there were similarity between points in fraction part 123.4567 , 123.4512
                if (!(pointsLength.indexOf(pt.x.toFixed(4) + "," + pt.y.toFixed(4)) > -1)) {
                  if (Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["isPointOrArc"])(point1, key, this.state.cadResults.cadFeatures) && Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["isPointOrArc"])(point2, key, this.state.cadResults.cadFeatures)) {
                    pointsLength.push(pt.x.toFixed(4) + "," + pt.y.toFixed(4));
                    Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["addParcelNo"])(pt, this.map, "" + length.toFixed(2) + "", "editlengthGraphicLayer", lineLengthFont, null, Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["getPacrelNoAngle"])({
                      geometry: polygon
                    }), null, attr);
                  } else if (Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["isPointOrArc"])(point2, key, this.state.cadResults.cadFeatures)) {
                    if (arcPoints.length) pt = arcPoints[Math.floor(arcPoints.length / 2)];
                    Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["addParcelNo"])(pt, this.map, "" + length.toFixed(2) + "", "editlengthGraphicLayer", lineLengthFont, null, Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["getPacrelNoAngle"])({
                      geometry: polygon
                    }), null, attr);
                  }
                }
                if (Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["isPointOrArc"])(point2, key, this.state.cadResults.cadFeatures)) {
                  arcPoints = [];
                }
              }
              if (elem.outRange) {
                this.state["outRange"] = true;
              }
              if (elem.notify) {
                //
                this.state["isConfirmed"] = false;
                this.state["hasNotify"] = true;
                Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["addGraphicToLayer"])(polygon, this.map, "addedParclGraphicLayer", null, [255, 0, 0, 0.6]);
              } else {
                Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["addGraphicToLayer"])(polygon, this.map, "addedParclGraphicLayer", [0, 0, 255, 0.8], null, true);
              }
              if (this.state["reqType"] != "duplex") {
                this.state["polygons"][key].parcel_nameHidden = this.state["polygons"].length + " " + t("labels:PARCELCOUNTERDRAGREV");
                console.log("---P----");
                Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["addParcelNo"])(polygon.getExtent().getCenter(), this.map, Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["convertToArabic"])(Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["setParcelName"])([this.state[`parcel_name${key}`], this.state["parcelSliceNo" + key]])), "PacrelUnNamedGraphicLayer", parcelNumberFont, [0, 0, 0], Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["getPacrelNoAngle"])({
                  geometry: polygon
                }));
              } else {
                this.state["polygons"][key].parcel_nameHidden = this.state["polygons"].length + " " + t("labels:DUPLIXCOUNTERDRAGREV");
                console.log("---T----");
                Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["addParcelNo"])(polygon.getExtent().getCenter(), this.map, Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["convertToArabic"])(Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["setParcelName"])([this.state[`parcel_name${key}`], this.state["parcelSliceNo" + key]])), "PacrelUnNamedGraphicLayer", parcelNumberFont, [0, 0, 0], Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["getPacrelNoAngle"])({
                  geometry: polygon
                }));
              }
            }

            // const {
            //   mainObject: {
            //     tadkek_data_Msa7y: {
            //       tadkek_msa7yData: { requestType },
            //     },
            //   },
            // } = this.props;
            let tadkekMainObject = Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["selectMainObject"])(this.props);
            if (this.state["polygons"].length == this.state.cadResults.shapeFeatures.length) {
              if (requestType == 1 && this.state["polygons"].length < 2) {
                this.state["outRange"] = true;
                this.state["polygons"].forEach(polygon => {
                  polygon.notify = "mapview.parcels.FarzNotify";
                });
                this.state["hasNotify"] = true;
                this.state["isConfirmed"] = false;
              } else if (requestType == 2 && this.state["polygons"].length > 1) {
                this.state["outRange"] = true;
                this.state["polygons"].forEach(polygon => {
                  polygon.notify = "mapview.parcels.DamgNotify";
                });
                this.state["hasNotify"] = true;
                this.state["isConfirmed"] = false;
              }

              // check if suggest polygon has same PARCEL_SPAITAL_ID
              this.state["polygons"].forEach(polygon => {
                var polygonSpatialId = Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["GetSpatialId"])(polygon.polygon);
                tadkekMainObject.landData.landData.lands.parcels.forEach(identifyPolygon => {
                  if (identifyPolygon.attributes.PARCEL_SPATIAL_ID == polygonSpatialId) {
                    this.state["outRange"] = true;
                    this.state["isConfirmed"] = false;
                    this.state["hasNotify"] = true;
                    polygon.notify = "mapview.parcels.HASSAMESPATIALID";
                    Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["addGraphicToLayer"])(polygon.polygon, this.map, "addedParclGraphicLayer", null, [255, 0, 0, 0.6]);
                  }
                });
              });
              this.state["demSaveDraft"] = false;
              if (!this.state["hasNotify"]) {
                Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["clearGraphicFromLayer"])(this.map, "addedParclGraphicLayer");
                this.state["polygons"].forEach((elem, key) => {
                  Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["addGraphicToLayer"])(elem.polygon, this.map, "addedParclGraphicLayer", [0, 0, 255, 0.8], null, true);
                });
                Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["zoomToIdentifyParcel"])(this.map);
              }
              this.confirmNotify(this.state["hideDrag"]);
              Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["checkParcelAdjacents"])(tadkekMainObject.landData.landData.lands.parcels, false);
            }
          });
        }
      }
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default()(this, "clearInputs", () => {
      const {
        inputs
      } = this.props;
      if (this.state.polygons && this.state.polygons.length) {
        this.state.polygons.forEach((polygon, index) => {
          var _inputs$north, _inputs$east, _inputs$west, _inputs$south;
          this.state["westBoundries" + index] = [];
          this.state["northBoundries" + index] = [];
          this.state["eastBoundries" + index] = [];
          this.state["southBoundries" + index] = [];
          inputs === null || inputs === void 0 ? void 0 : (_inputs$north = inputs.north) === null || _inputs$north === void 0 ? void 0 : _inputs$north.forEach((input, key) => {
            this.state[input.name + index] = "";
          });
          inputs === null || inputs === void 0 ? void 0 : (_inputs$east = inputs.east) === null || _inputs$east === void 0 ? void 0 : _inputs$east.forEach((input, key) => {
            this.state[input.name + index] = "";
          });
          inputs === null || inputs === void 0 ? void 0 : (_inputs$west = inputs.west) === null || _inputs$west === void 0 ? void 0 : _inputs$west.forEach((input, key) => {
            this.state[input.name + index] = "";
          });
          inputs === null || inputs === void 0 ? void 0 : (_inputs$south = inputs.south) === null || _inputs$south === void 0 ? void 0 : _inputs$south.forEach((input, key) => {
            this.state[input.name + index] = "";
          });
          this.state["area" + index] = "";
          this.state["parcelSliceNo" + index] = "";
          this.state["parcel_name" + index] = "";
          this.state["duplixType" + index] = "";
        });
      }
      this.state["have_electric_room"] = false;
      this.state["electric_room_area"] = "";
      this.state.polygons = [];
      this.state.pointsLength = [];
      this.state.cadFiles = {};
      this.state.layerParcels = [];
      this.state.planDescription = "";
      this.state.activeKey = "1";
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default()(this, "resetMap", () => {
      var _this$map, _this$map2;
      if (this !== null && this !== void 0 && (_this$map = this.map) !== null && _this$map !== void 0 && _this$map.graphicsLayerIds) {
        this.map.graphicsLayerIds.forEach((layerName, index) => {
          Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["clearGraphicFromLayer"])(this.map, layerName);
        });
      }
      (_this$map2 = this.map) === null || _this$map2 === void 0 ? void 0 : _this$map2.setExtent(new esri.geometry.Extent({
        xmin: 351074.79384063353,
        ymin: 2908411.351837893,
        xmax: 461736.99433170113,
        ymax: 2947768.2013849253,
        spatialReference: {
          wkid: 32639
        }
      }));
      this.resetStore();
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default()(this, "checkIntersectionOfParcels", () => {
      const {
        landData: {
          landData: {
            lands: {
              parcels
            }
          }
        }
      } = Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["selectMainObject"])(this.props);
      let isDataDrawn = false;
      Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["getInfo"])().then(res => {
        var _this$state, _this$state$cadResult, _this$state$cadResult2;
        this.LayerID = res;
        let outRange = 0;
        (_this$state = this.state) === null || _this$state === void 0 ? void 0 : (_this$state$cadResult = _this$state.cadResults) === null || _this$state$cadResult === void 0 ? void 0 : (_this$state$cadResult2 = _this$state$cadResult.shapeFeatures) === null || _this$state$cadResult2 === void 0 ? void 0 : _this$state$cadResult2.forEach(feature => {
          var polygonJson = {
            rings: feature.rings,
            spatialReference: feature.spatialReference
          };
          var polygon = new esri.geometry.Polygon(polygonJson);
          this.addParcelToSelect(polygon).then(res => {
            if (res.features) {
              let isParcelExist = false;
              res.features.map(feature => {
                isParcelExist = parcels.filter(parcel => {
                  return feature.attributes.PARCEL_PLAN_NO == parcel.attributes.PARCEL_PLAN_NO && feature.attributes.PARCEL_SPATIAL_ID == parcel.attributes.PARCEL_SPATIAL_ID;
                }).length > 0;
                if (isParcelExist && !isDataDrawn) {
                  isDataDrawn = true;
                  this.buildCADDetails();
                }
              });
              if (!isDataDrawn) {
                outRange++;
                if (outRange == this.state.cadResults.shapeFeatures.length) {
                  this.settoStore([]);
                  window.notifySystem("error", `الكاد المرفق لا يتقاطع مع الأراضي المختارة، يرجي التأكد من إحداثيات الكاد المرفق`);
                }
              }
            }
          });
        });
      });
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default()(this, "getParcelAdjacents", parcels => {
      Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["getInfo"])().then(res => {
        this.LayerID = res;
        var token = "";
        if (window.esriToken) token = "?token=" + window.esriToken;
        var flayer = new esri.layers.FeatureLayer(_mapviewer_config_map__WEBPACK_IMPORTED_MODULE_19__["mapUrl"] + "/" + this.LayerID.Landbase_Parcel + token, {
          outFields: ["*"]
        });
        this.besideParcels = [];
        let i = 0;
        if (parcels) {
          var query = new esri.tasks.Query();
          query.objectIds = parcels.map(feature => feature.attributes.OBJECTID);
          query.outFields = ["*"];
          flayer.queryFeatures(query, featureSet => {
            featureSet.features.forEach(parcel => {
              this.addParcelToSelect(parcel.geometry).then(res => {
                i++;
                Array.prototype.push.apply(this.besideParcels, res.features);
                if (featureSet.features.length == i) {
                  this.initAddParcelNo([...new Map(this.besideParcels.filter(queryParcel => {
                    return featureSet.features.filter(fsFeature => {
                      return queryParcel.attributes.OBJECTID == fsFeature.attributes.OBJECTID;
                    }).length == 0;
                  }).map(item => [item["attributes"]["OBJECTID"], item])).values()]);
                }
              });
            });
          });
        }
      });
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default()(this, "duplixTypeChange", (selectedType, polygon, key, evt) => {
      polygon["duplixType"] = selectedType;
      this.state["duplixType" + key] = selectedType;
      var minLength = 0;
      polygon.data.forEach((val, key) => {
        if ((minLength > parseFloat(val.totalLength) || minLength == 0) && val.name != "main") {
          minLength = val.totalLength;
        }
      });
      if (selectedType == "splited") {
        if (minLength < 11.5) {
          polygon.cantSplitedOrMarged = true;
          polygon.errorInDuplixType = true;
          polygon.errorMsgForDuplixType = "لا يمكنك أختيار فلل منفصلة لان طول أقل ضلع فى هذه الدوبلكس أقل من 11.5 متر";
        } else {
          polygon.cantSplitedOrMarged = false;
          polygon.errorInDuplixType = false;
          polygon.errorMsgForDuplixType = "";
        }
      } else if (selectedType == "marged") {
        if (minLength < 9.5) {
          polygon.cantSplitedOrMarged = true;
          polygon.errorInDuplixType = true;
          polygon.errorMsgForDuplixType = "لا يمكنك أختيار فلل متصلة لان طول أقل ضلع فى هذه الدوبلكس أقل من 9.5 متر";
        } else {
          polygon.cantSplitedOrMarged = false;
          polygon.errorInDuplixType = false;
          polygon.errorMsgForDuplixType = "";
        }
      } else {
        polygon.errorInDuplixType = false;
        polygon.errorMsgForDuplixType = "";
      }
      if (!lodash_isEmpty__WEBPACK_IMPORTED_MODULE_10___default()(polygon.errorMsgForDuplixType)) window.notifySystem("error", `${polygon.errorMsgForDuplixType}`);
      this.state.polygons[key] = polygon;
      this.settoStore(this.state.polygons);
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default()(this, "onInputTextChange", (polygon, key, evt) => {
      polygon[evt.target.name] = evt.target.value;
      console.log(polygon);
      this.state[evt.target.name + key] = evt.target.value;
      this.state.polygons[key] = polygon;
      this.settoStore(this.state.polygons);
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default()(this, "onParcelTextChange", (polygon, key, evt) => {
      this.state[evt.target.name + key] = evt.target.value;
      polygon.parcel_name = Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["setParcelName"])([this.state[`parcel_name${key}`], this.state["parcelSliceNo" + key]]);
      polygon.parcelNameRight = this.state[`parcel_name${key}`];
      polygon.parcelNameLeft = this.state["parcelSliceNo" + key];
      this.state.polygons[key] = polygon;
      Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["redrawNames"])(this.state.polygons[key], this.map, Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["setParcelName"])([this.state[`parcel_name${key}`], this.state["parcelSliceNo" + key]]), "PacrelUnNamedGraphicLayer", key);
      this.settoStore(this.state.polygons);
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default()(this, "onChange", activeKey => {
      if (this.state.polygons[+activeKey - 1].data) {
        this.setState({
          activeKey,
          [`duplixType${+activeKey - 1}`]: this.state.polygons[+activeKey - 1].duplixType,
          ["westBoundries" + (+activeKey - 1)]: this.state.polygons[+activeKey - 1].data[3].data.map((item, i) => {
            return {
              id: `item-${"west_" + i}`,
              content: item.text,
              data: item
            };
          }),
          ["northBoundries" + (+activeKey - 1)]: this.state.polygons[+activeKey - 1].data[0].data.map((item, i) => {
            return {
              id: `item-${"north_" + i}`,
              content: item.text,
              data: item
            };
          }),
          ["eastBoundries" + (+activeKey - 1)]: this.state.polygons[+activeKey - 1].data[1].data.map((item, i) => {
            return {
              id: `item-${"east_" + i}`,
              content: item.text,
              data: item
            };
          }),
          ["southBoundries" + (+activeKey - 1)]: this.state.polygons[+activeKey - 1].data[4].data.map((item, i) => {
            return {
              id: `item-${"south_" + i}`,
              content: item.text,
              data: item
            };
          })
        });
      } else {
        this.setState({
          activeKey
        });
      }
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default()(this, "onmouseover", item => {
      var polyline = new esri.geometry.Polyline(item);
      Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["highlightFeature"])(polyline, this.map, {
        layerName: "highlightBoundriesGraphicLayer",
        fillColor: item.color
      });
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default()(this, "onmouseleave", () => {
      Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["clearGraphicFromLayer"])(this.map, "highlightBoundriesGraphicLayer");
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default()(this, "onElectricInputChange", (stateName, evt) => {
      this.state[stateName] = evt.target.type == "checkbox" ? evt.target.checked : evt.target.value;
      this.settoStore(this.state.polygons);
    });
    this.parcel_fields_headers = ["الإتجاه", "شمال / شرق", "شمال / غرب", "جنوب / شرق", "جنوب / غرب"];
    this.parcel_fields = [{
      name: "direction",
      editable: false
    }, {
      name: "NORTH_EAST_DIRECTION",
      editable: true
    }, {
      name: "NORTH_WEST_DIRECTION",
      editable: true
    }, {
      name: "SOUTH_EAST_DIRECTION",
      editable: true
    }, {
      name: "SOUTH_WEST_DIRECTION",
      editable: true
    }];
    this.InvokedToAdParcel = false;
    if ((_this$props$mainObjec12 = this.props.mainObject) !== null && _this$props$mainObjec12 !== void 0 && (_this$props$mainObjec13 = _this$props$mainObjec12.data_msa7y) !== null && _this$props$mainObjec13 !== void 0 && (_this$props$mainObjec14 = _this$props$mainObjec13.msa7yData) !== null && _this$props$mainObjec14 !== void 0 && _this$props$mainObjec14.cadDetails) {
      const {
        mainObject: {
          data_msa7y: {
            msa7yData: {
              cadDetails
            }
          }
        }
      } = props;
      this.state = {
        isConfirmed: true,
        outRange: cadDetails.temp && cadDetails.temp.outRange || false,
        pointsLength: [],
        annotationLength: 3,
        polygons: [],
        demSaveDraft: false,
        cadFiles: {},
        layerParcels: [],
        planDescription: cadDetails.planDescription || "",
        activeKey: "1",
        cadResults: cadDetails.temp && cadDetails.temp.cadResults || undefined,
        notify: false,
        hasNotify: false,
        hideDrag: false,
        lineLengthFont: 20,
        parcelNumberFont: 20,
        isBoundry: false,
        mun: cadDetails.mun || {},
        muns: [],
        have_electric_room: cadDetails.temp && cadDetails.temp.have_electric_room || false,
        electric_room_area: cadDetails.temp && cadDetails.temp.electric_room_area || 0,
        reqType: ([34].indexOf(this.props.currentModule.id) != -1 || [1949, 2048].indexOf(this.props.currentModule.record.workflow_id) != -1) && "duplex" || ""
      };
    } else {
      this.state = {
        isConfirmed: true,
        outRange: false,
        hasNotify: false,
        pointsLength: [],
        annotationLength: 3,
        polygons: [],
        survayParcelCutter: [{
          direction: "الشطفة",
          NORTH_EAST_DIRECTION: "",
          NORTH_WEST_DIRECTION: "",
          SOUTH_EAST_DIRECTION: "",
          SOUTH_WEST_DIRECTION: ""
        }],
        demSaveDraft: false,
        cadFiles: {},
        layerParcels: [],
        planDescription: "",
        activeKey: "1",
        cadResults: undefined,
        notify: false,
        hasNotify: false,
        hideDrag: false,
        lineLengthFont: 20,
        parcelNumberFont: 20,
        isBoundry: false,
        mun: {},
        muns: [],
        have_electric_room: false,
        electric_room_area: 0,
        reqType: ([34].indexOf(this.props.currentModule.id) != -1 || [1949, 2048].indexOf(this.props.currentModule.record.workflow_id) != -1) && "duplex" || ""
      };
    }
    Object(_helpers_apiMethods__WEBPACK_IMPORTED_MODULE_13__["fetchData"])(`${workFlowUrl}/api/Municipality`).then(response => {
      this.state.muns = response.results;
    });
    if ((_this$props$mainObjec15 = this.props.mainObject) !== null && _this$props$mainObjec15 !== void 0 && (_this$props$mainObjec16 = _this$props$mainObjec15.data_msa7y) !== null && _this$props$mainObjec16 !== void 0 && (_this$props$mainObjec17 = _this$props$mainObjec16.msa7yData) !== null && _this$props$mainObjec17 !== void 0 && (_this$props$mainObjec18 = _this$props$mainObjec17.cadDetails) !== null && _this$props$mainObjec18 !== void 0 && _this$props$mainObjec18.temp) {
      const {
        inputs,
        mainObject: {
          data_msa7y: {
            msa7yData: {
              cadDetails: {
                suggestionsParcels,
                temp
              }
            }
          },
          tadkek_data_Msa7y: {
            tadkek_msa7yData: {
              requestType
            }
          }
        }
      } = props;
      suggestionsParcels.forEach((element, index) => {
        if (!(inputs !== null && inputs !== void 0 && inputs.north)) {
          var _inputs$north2;
          inputs === null || inputs === void 0 ? void 0 : (_inputs$north2 = inputs.north) === null || _inputs$north2 === void 0 ? void 0 : _inputs$north2.forEach((input, key) => {
            this.state[input.name + index] = temp[input.name + index] || "";
          });
        }
        if (!(inputs !== null && inputs !== void 0 && inputs.east)) {
          var _inputs$east2;
          inputs === null || inputs === void 0 ? void 0 : (_inputs$east2 = inputs.east) === null || _inputs$east2 === void 0 ? void 0 : _inputs$east2.forEach((input, key) => {
            this.state[input.name + index] = temp[input.name + index] || "";
          });
        }
        if (!(inputs !== null && inputs !== void 0 && inputs.west)) {
          var _inputs$west2;
          inputs === null || inputs === void 0 ? void 0 : (_inputs$west2 = inputs.west) === null || _inputs$west2 === void 0 ? void 0 : _inputs$west2.forEach((input, key) => {
            this.state[input.name + index] = temp[input.name + index] || "";
          });
        }
        if (!(inputs !== null && inputs !== void 0 && inputs.south)) {
          var _inputs$south2;
          inputs === null || inputs === void 0 ? void 0 : (_inputs$south2 = inputs.south) === null || _inputs$south2 === void 0 ? void 0 : _inputs$south2.forEach((input, key) => {
            this.state[input.name + index] = temp[input.name + index] || "";
          });
        }

        //if (!element.parcel_name) {
        element.parcel_name = Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["setParcelName"])([temp["parcel_name" + index], requestType != 2 ? temp["parcelSliceNo" + index] : "1"]);
        element.parcelNameRight = temp["parcel_name" + index];
        element.parcelNameLeft = requestType != 2 ? temp["parcelSliceNo" + index] : "1";
        //}
        this.state["north_Desc" + index] = element["north_Desc"] || temp["north_Desc" + index] || "";
        this.state["west_Desc" + index] = element["west_Desc"] || temp["west_Desc" + index] || "";
        this.state["south_Desc" + index] = element["south_Desc"] || temp["south_Desc" + index] || "";
        this.state["east_Desc" + index] = element["east_Desc"] || temp["east_Desc" + index] || "";
        this.state["northBoundries" + index] = element.data[0].data.map((item, i) => {
          return {
            id: `item-${"north_" + i}`,
            content: item.text,
            data: item
          };
        }) || temp["northBoundries" + index];
        this.state["southBoundries" + index] = element.data[4].data.map((item, i) => {
          return {
            id: `item-${"south_" + i}`,
            content: item.text,
            data: item
          };
        }) || temp["southBoundries" + index];
        this.state["eastBoundries" + index] = element.data[1].data.map((item, i) => {
          return {
            id: `item-${"east_" + i}`,
            content: item.text,
            data: item
          };
        }) || temp["eastBoundries" + index];
        this.state["westBoundries" + index] = element.data[3].data.map((item, i) => {
          return {
            id: `item-${"west_" + i}`,
            content: item.text,
            data: item
          };
        }) || temp["westBoundries" + index];
        this.state["parcelSliceNo" + index] = requestType != 2 ? temp["parcelSliceNo" + index] || element.parcelNameLeft : "1";
        this.state["parcel_name" + index] = temp["parcel_name" + index] || element.parcelNameRight || "";
        this.state["area" + index] = temp["area" + index] || element.area || "";
      });
    }
    this.isLoaded = true;
    this.toLoadLines = true;
  }
  saveEdit(id, name, i) {
    this.state.survayParcelCutter[0][name] = this["edit_" + name + i];
    this.setState({
      [name + "_isEdit_" + i]: false,
      survayParcelCutter: this.state.survayParcelCutter
    });
    this.settoStore(this.state.polygons);
  }
  shouldComponentUpdate(nextProps, nextState) {
    if (!lodash_isEqual__WEBPACK_IMPORTED_MODULE_11___default()(nextProps.input.value, this.props.input.value) || !lodash_isEqual__WEBPACK_IMPORTED_MODULE_11___default()(nextProps.lang, this.props.lang) || !lodash_isEqual__WEBPACK_IMPORTED_MODULE_11___default()(nextProps.forceUpdate, this.props.forceUpdate)) ;
    {
      return true;
    }
    return false;
  }
  settoStore(polygons) {
    const {
      mun
    } = this.state;
    const {
      input,
      inputs
    } = this.props;
    if (polygons && polygons.length) {
      var obj = {};
      polygons.forEach((element, key) => {
        var _inputs$north3, _inputs$east3, _inputs$west3, _inputs$south3;
        obj["westBoundries" + key] = this.state["westBoundries" + key];
        obj["southBoundries" + key] = this.state["southBoundries" + key];
        obj["northBoundries" + key] = this.state["northBoundries" + key];
        obj["eastBoundries" + key] = this.state["eastBoundries" + key];
        inputs === null || inputs === void 0 ? void 0 : (_inputs$north3 = inputs.north) === null || _inputs$north3 === void 0 ? void 0 : _inputs$north3.forEach((input, index) => {
          obj[input.name + key] = this.state[input.name + key];
        });
        inputs === null || inputs === void 0 ? void 0 : (_inputs$east3 = inputs.east) === null || _inputs$east3 === void 0 ? void 0 : _inputs$east3.forEach((input, index) => {
          obj[input.name + key] = this.state[input.name + key];
        });
        inputs === null || inputs === void 0 ? void 0 : (_inputs$west3 = inputs.west) === null || _inputs$west3 === void 0 ? void 0 : _inputs$west3.forEach((input, index) => {
          obj[input.name + key] = this.state[input.name + key];
        });
        inputs === null || inputs === void 0 ? void 0 : (_inputs$south3 = inputs.south) === null || _inputs$south3 === void 0 ? void 0 : _inputs$south3.forEach((input, index) => {
          obj[input.name + key] = this.state[input.name + key];
        });
        obj["area" + key] = this.state["area" + key];
        obj["parcelSliceNo" + key] = this.state["parcelSliceNo" + key];
        obj["parcel_name" + key] = this.state["parcel_name" + key];
        obj["duplixType" + key] = this.state["duplixType" + key] || "";
      });
    }
    var inputChanged = {
      suggestionsParcels: polygons,
      planDescription: this.state.planDescription,
      mun: mun,
      temp: {
        cadResults: input.value.cadData || this.state.cadResults || input.value.temp && input.value.temp.cadResults || undefined,
        notify: input.value.notify || this.state.notify || input.value.temp && input.value.temp.notify || false,
        hideDrag: input.value.hideDrag || this.state.hideDrag || input.value.temp && input.value.temp.hideDrag || false,
        hasNotify: this.state["hasNotify"] || input.value.temp && input.value.temp.hasNotify || false,
        isConfirmed: this.state["isConfirmed"] || input.value.temp && input.value.temp.isConfirmed || false,
        outRange: this.state["outRange"] || input.value.temp && input.value.temp.outRange || false,
        isFarz: true,
        ...obj
      }
    };
    input.onChange({
      ...inputChanged
    });
    // hasNotify, hideDrag, outRange
    this.setState({
      polygons: polygons,
      hasNotify: this.state["hasNotify"],
      hideDrag: this.state["hideDrag"],
      outRange: this.state["outRange"],
      ...obj
    });
  }

  // redrawNames = (polygon, map, index) => {
  //
  //   console.log("---r----");
  //   let { parcelNumberFont } = this.state;
  //   if (polygon) {
  //     var filteredGraphic = map
  //       .getLayer("PacrelUnNamedGraphicLayer")
  //       .graphics.find(
  //         (graphic) =>
  //           graphic.geometry.x == polygon.position.x &&
  //           graphic.geometry.y == polygon.position.y
  //       );
  //     if (filteredGraphic) {
  //       map.getLayer("PacrelUnNamedGraphicLayer").remove(filteredGraphic);
  //       var name =
  //         convertToArabic(
  //           setParcelName([
  //             this.state["parcelSliceNo" + index],
  //             this.state[`parcel_name${index}`],
  //           ])
  //         ) || polygon.parcel_nameHidden;

  //       if (name && name.indexOf("حدود المعاملة") >= -1) {
  //         addParcelNo(
  //           polygon.position,
  //           map,
  //           "" + name + "",
  //           "PacrelUnNamedGraphicLayer",
  //           parcelNumberFont,
  //           [0, 0, 0],
  //           getPacrelNoAngle({ geometry: polygon.polygon })
  //         );
  //       }
  //     }
  //   }
  // };

  resetStore() {
    const {
      mun
    } = this.state;
    const {
      input,
      inputs
    } = this.props;
    var obj = {};
    if (this.state.polygons && this.state.polygons.length) {
      this.state.polygons.forEach((element, key) => {
        var _inputs$north4, _inputs$east4, _inputs$west4, _inputs$south4;
        obj["westBoundries" + key] = "";
        obj["southBoundries" + key] = "";
        obj["northBoundries" + key] = "";
        obj["eastBoundries" + key] = "";
        inputs === null || inputs === void 0 ? void 0 : (_inputs$north4 = inputs.north) === null || _inputs$north4 === void 0 ? void 0 : _inputs$north4.forEach((input, index) => {
          obj[input.name + key] = "";
        });
        inputs === null || inputs === void 0 ? void 0 : (_inputs$east4 = inputs.east) === null || _inputs$east4 === void 0 ? void 0 : _inputs$east4.forEach((input, index) => {
          obj[input.name + key] = "";
        });
        inputs === null || inputs === void 0 ? void 0 : (_inputs$west4 = inputs.west) === null || _inputs$west4 === void 0 ? void 0 : _inputs$west4.forEach((input, index) => {
          obj[input.name + key] = "";
        });
        inputs === null || inputs === void 0 ? void 0 : (_inputs$south4 = inputs.south) === null || _inputs$south4 === void 0 ? void 0 : _inputs$south4.forEach((input, index) => {
          obj[input.name + key] = "";
        });
        obj["area" + key] = "";
        obj["parcelSliceNo" + key] = "";
        obj["parcel_name" + key] = "";
        obj["duplixType" + key] = "";
      });
    }
    var polygons = [];
    this.setState({
      polygons: polygons,
      hasNotify: false,
      notify: false,
      hideDrag: false,
      outRange: false,
      isConfirmed: true,
      ...obj
    });
    var inputChanged = {
      suggestionsParcels: polygons,
      planDescription: "",
      mun: mun,
      temp: {
        cadResults: undefined,
        notify: false,
        hasNotify: false,
        hideDrag: false,
        isFarz: true,
        isConfirmed: true,
        ...obj
      }
    };
    this.props.input.onChange({
      ...inputChanged
    });
  }
  componentDidUpdate() {
    const {
      input
    } = this.props;
    if (input.value && input.value != "" && input.value.justInvoked) {
      this.InvokedToAdParcel = true;
      input.value.justInvoked = false;
      this.isLoaded = false;
      this.map = Object(_main_helpers_functions_filters_state__WEBPACK_IMPORTED_MODULE_14__["getMap"])();
      if (this.map) {
        this.clearInputs();
        this.toLoadLines = true;
        this.state.cadResults = input.value.cadData || undefined;
        this.state.hasNotify = input.value.notify || false;
        this.state.hideDrag = input.value.hideDrag || false;
        if (this.state.cadResults) {
          this.state.cadResults.shapeFeatures.map((parcel, index) => {
            this.state["northBoundries" + index] = "";
            this.state["southBoundries" + index] = "";
            this.state["eastBoundries" + index] = "";
            this.state["westBoundries" + index] = "";
          });
          this.checkIntersectionOfParcels();
        } else {
          this.resetMap();
        }
      }
    } else if (this.isLoaded) {
      this.map = Object(_main_helpers_functions_filters_state__WEBPACK_IMPORTED_MODULE_14__["getMap"])();
      if (Object(_main_helpers_functions_filters_state__WEBPACK_IMPORTED_MODULE_14__["getIsMapLoaded"])()) {
        var _this$props$mainObjec19, _this$props$mainObjec20, _this$props$mainObjec21;
        Object(_main_helpers_functions_filters_state__WEBPACK_IMPORTED_MODULE_14__["setIsMapLoaded"])(false);
        this.toLoadLines = true;
        this.InvokedToAdParcel = false;
        if ((_this$props$mainObjec19 = this.props.mainObject) !== null && _this$props$mainObjec19 !== void 0 && (_this$props$mainObjec20 = _this$props$mainObjec19.data_msa7y) !== null && _this$props$mainObjec20 !== void 0 && (_this$props$mainObjec21 = _this$props$mainObjec20.msa7yData) !== null && _this$props$mainObjec21 !== void 0 && _this$props$mainObjec21.cadDetails) {
          const {
            mainObject: {
              data_msa7y: {
                msa7yData: {
                  cadDetails: {
                    suggestionsParcels,
                    temp
                  }
                }
              }
            }
          } = this.props;
          if (suggestionsParcels && suggestionsParcels.length) {
            suggestionsParcels.forEach((polygon, key) => {
              this.state["duplixType" + key] = temp["duplixType" + key];
            });
          }
        }
        this.checkIntersectionOfParcels();
        this.isLoaded = false;
      }
    }
    return false;
  }
  render() {
    const {
      planDescription,
      reqType,
      hasNotify,
      hideDrag,
      outRange
    } = this.state;
    const {
      mainObject: {
        tadkek_data_Msa7y: {
          tadkek_msa7yData: {
            requestType
          }
        }
      },
      isView,
      inputs,
      t
    } = this.props;
    const {
      landData: {
        landData: {
          lands: {
            parcels
          }
        }
      }
    } = Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["selectMainObject"])(this.props);
    //return <></>;
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_12___default.a.Fragment, null, !isView && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("div", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("div", {
      className: "col-md-12"
    }, hasNotify && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("div", {
      className: "col-md-12",
      style: {
        border: "2px solid #FFA423",
        height: "400px",
        borderRadius: "10px",
        background: "#F2DEDE"
      }
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("div", {
      style: {
        overflowY: "auto",
        maxHeight: "320px",
        height: "320px"
      }
    }, this.state.polygons.map((parcel, index) => {
      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_12___default.a.Fragment, null, parcel.notify && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("div", {
        onMouseOver: this.higlightNotify.bind(this, parcel.polygon),
        onMouseLeave: this.clearHighlightNotify.bind(this)
      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("i", {
        className: "fa fa-exclamation-triangle pulse",
        style: {
          float: "right",
          margin: "7px",
          marginTop: "10px",
          fontSize: "35px",
          color: "#E74C3C"
        }
      }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("p", {
        className: "bg-danger",
        style: {
          padding: "5px",
          background: "#EFC2C2"
        }
      }, " ", t(`cadData:${parcel.notify}`))));
    })))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("div", {
      className: "col-md-12"
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("div", null, planDescription != "" && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("p", {
      style: {
        textAlign: "right",
        fontSize: "18px"
      }
    }, planDescription)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("div", null, !hasNotify && this.state.polygons && this.state.polygons.length > 0 && this.state.polygons[0].area != -1 && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(antd_lib_tabs__WEBPACK_IMPORTED_MODULE_9___default.a, {
      style: {
        marginTop: "30px"
      },
      tabPosition: "top",
      type: "card",
      activeKey: this.state.activeKey,
      onChange: this.onChange
    }, this.state.polygons.map((polygon, key) => {
      var _inputs$north5, _inputs$east5, _inputs$west5, _inputs$south5;
      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(TabPane, {
        tab: Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["convertToArabic"])(polygon.parcel_name || ([34].indexOf(this.props.currentModule.id) != -1 || [1949, 2048].indexOf(this.props.currentModule.record.workflow_id) != -1 ? `دوبلكس رقم${key + 1}` : `أرض رقم${key + 1}`)),
        key: key + 1
      }, key == this.state["activeKey"] - 1 && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("div", {
        key: key
      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("div", null, "\u0627\u0644\u0645\u0633\u0627\u062D\u0629 \u0627\u0644\u0643\u0644\u064A\u0629 :", " ", Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["convertToArabic"])((+polygon.area).toFixed(2)), " ", "\u0645", Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["convertToArabic"])(2)), inputs && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(react_beautiful_dnd__WEBPACK_IMPORTED_MODULE_20__["DragDropContext"], {
        onDragEnd: this.onDragEnd
      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("div", {
        style: itemContainerNorth
      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("p", {
        style: {
          textAlign: "center",
          fontSize: "18px"
        }
      }, "\u0627\u0644\u0634\u0645\u0627\u0644"), inputs === null || inputs === void 0 ? void 0 : (_inputs$north5 = inputs.north) === null || _inputs$north5 === void 0 ? void 0 : _inputs$north5.map((input, index) => {
        return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("input", {
          name: input.name,
          type: input.type || "text",
          className: "ant-input",
          placeholder: input.placeholder,
          required: "required",
          value: this.state[input.name + key],
          onChange: this.onInputTextChange.bind(this, polygon, key)
        });
      }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(react_beautiful_dnd__WEBPACK_IMPORTED_MODULE_20__["Droppable"], {
        droppableId: "droppable_North"
      }, (provided, snapshot) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("div", {
        ref: provided.innerRef,
        style: getListStyle(snapshot.isDraggingOver)
      }, this.state["northBoundries" + key] && this.state["northBoundries" + key].map((item, index) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(react_beautiful_dnd__WEBPACK_IMPORTED_MODULE_20__["Draggable"], {
        key: item.id,
        draggableId: item.id,
        index: index
      }, (provided, snapshot) => {
        var _item$content;
        return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("div", _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_6___default()({
          ref: provided.innerRef
        }, provided.draggableProps, provided.dragHandleProps, {
          style: getItemStyle(snapshot.isDragging, provided.draggableProps.style),
          onMouseOver: this.onmouseover.bind(this, item.data),
          onMouseLeave: this.onmouseleave.bind(this)
        }), Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["convertToArabic"])(item.content && ((_item$content = +item.content) === null || _item$content === void 0 ? void 0 : _item$content.toFixed(2))));
      })), provided.placeholder)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("p", {
        style: {
          float: "left",
          textAlign: "left",
          fontSize: "20px"
        }
      }, "\u0637\u0648\u0644 \u0627\u0644\u062D\u062F :", " ", Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["convertToArabic"])(polygon.data[0].totalLength && (+polygon.data[0].totalLength).toFixed(2)))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("div", {
        style: {
          display: "flex"
        }
      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("div", {
        style: itemContainerEast
      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("p", {
        style: {
          textAlign: "center",
          fontSize: "18px"
        }
      }, "\u0627\u0644\u0634\u0631\u0642"), inputs === null || inputs === void 0 ? void 0 : (_inputs$east5 = inputs.east) === null || _inputs$east5 === void 0 ? void 0 : _inputs$east5.map((input, index) => {
        return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("input", {
          name: input.name,
          type: input.type || "text",
          className: "ant-input",
          placeholder: input.placeholder,
          required: "required",
          value: this.state[input.name + key],
          onChange: this.onInputTextChange.bind(this, polygon, key)
        });
      }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(react_beautiful_dnd__WEBPACK_IMPORTED_MODULE_20__["Droppable"], {
        droppableId: "droppable_East"
      }, (provided, snapshot) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("div", {
        ref: provided.innerRef,
        style: getListStyle(snapshot.isDraggingOver)
      }, this.state["eastBoundries" + key] && this.state["eastBoundries" + key].map((item, index) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(react_beautiful_dnd__WEBPACK_IMPORTED_MODULE_20__["Draggable"], {
        key: item.id,
        draggableId: item.id,
        index: index
      }, (provided, snapshot) => {
        var _item$content2;
        return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("div", _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_6___default()({
          ref: provided.innerRef
        }, provided.draggableProps, provided.dragHandleProps, {
          style: getItemStyle(snapshot.isDragging, provided.draggableProps.style),
          onMouseOver: this.onmouseover.bind(this, item.data),
          onMouseLeave: this.onmouseleave.bind(this)
        }), Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["convertToArabic"])(item.content && ((_item$content2 = +item.content) === null || _item$content2 === void 0 ? void 0 : _item$content2.toFixed(2))));
      })), provided.placeholder)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("p", {
        style: {
          float: "left",
          textAlign: "left",
          fontSize: "20px"
        }
      }, "\u0637\u0648\u0644 \u0627\u0644\u062D\u062F :", " ", Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["convertToArabic"])(polygon.data[1].totalLength && (+polygon.data[1].totalLength).toFixed(2)))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("div", {
        style: itemContainerEmpty
      }, " "), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("div", {
        style: itemContainerWest
      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("p", {
        style: {
          textAlign: "center",
          fontSize: "18px"
        }
      }, "\u0627\u0644\u063A\u0631\u0628"), inputs === null || inputs === void 0 ? void 0 : (_inputs$west5 = inputs.west) === null || _inputs$west5 === void 0 ? void 0 : _inputs$west5.map((input, index) => {
        return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("input", {
          name: input.name,
          type: input.type || "text",
          className: "ant-input",
          placeholder: input.placeholder,
          required: "required",
          value: this.state[input.name + key],
          onChange: this.onInputTextChange.bind(this, polygon, key)
        });
      }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(react_beautiful_dnd__WEBPACK_IMPORTED_MODULE_20__["Droppable"], {
        droppableId: "droppable_West"
      }, (provided, snapshot) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("div", {
        ref: provided.innerRef,
        style: getListStyle(snapshot.isDraggingOver)
      }, this.state["westBoundries" + key] && this.state["westBoundries" + key].map((item, index) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(react_beautiful_dnd__WEBPACK_IMPORTED_MODULE_20__["Draggable"], {
        key: item.id,
        draggableId: item.id,
        index: index
      }, (provided, snapshot) => {
        var _item$content3;
        return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("div", _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_6___default()({
          ref: provided.innerRef
        }, provided.draggableProps, provided.dragHandleProps, {
          style: getItemStyle(snapshot.isDragging, provided.draggableProps.style),
          onMouseOver: this.onmouseover.bind(this, item.data),
          onMouseLeave: this.onmouseleave.bind(this)
        }), Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["convertToArabic"])(item.content && ((_item$content3 = +item.content) === null || _item$content3 === void 0 ? void 0 : _item$content3.toFixed(2))));
      })), provided.placeholder)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("p", {
        style: {
          float: "left",
          textAlign: "left",
          fontSize: "20px"
        }
      }, "\u0637\u0648\u0644 \u0627\u0644\u062D\u062F :", " ", Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["convertToArabic"])(polygon.data[3].totalLength && (+polygon.data[3].totalLength).toFixed(2))))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("div", {
        style: itemContainerSouth
      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("p", {
        style: {
          textAlign: "center",
          fontSize: "18px"
        }
      }, "\u0627\u0644\u062C\u0646\u0648\u0628"), inputs === null || inputs === void 0 ? void 0 : (_inputs$south5 = inputs.south) === null || _inputs$south5 === void 0 ? void 0 : _inputs$south5.map((input, index) => {
        return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("input", {
          name: input.name,
          type: input.type || "text",
          className: "ant-input",
          placeholder: input.placeholder,
          required: "required",
          value: this.state[input.name + key],
          onChange: this.onInputTextChange.bind(this, polygon, key)
        });
      }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(react_beautiful_dnd__WEBPACK_IMPORTED_MODULE_20__["Droppable"], {
        droppableId: "droppable_South"
      }, (provided, snapshot) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("div", {
        ref: provided.innerRef,
        style: getListStyle(snapshot.isDraggingOver)
      }, this.state["southBoundries" + key] && this.state["southBoundries" + key].map((item, index) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(react_beautiful_dnd__WEBPACK_IMPORTED_MODULE_20__["Draggable"], {
        key: item.id,
        draggableId: item.id,
        index: index
      }, (provided, snapshot) => {
        var _item$content4;
        return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("div", _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_6___default()({
          ref: provided.innerRef
        }, provided.draggableProps, provided.dragHandleProps, {
          style: getItemStyle(snapshot.isDragging, provided.draggableProps.style),
          onMouseOver: this.onmouseover.bind(this, item.data),
          onMouseLeave: this.onmouseleave.bind(this)
        }), Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["convertToArabic"])(item.content && ((_item$content4 = +item.content) === null || _item$content4 === void 0 ? void 0 : _item$content4.toFixed(2))));
      })), provided.placeholder)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("p", {
        style: {
          float: "left",
          textAlign: "left",
          fontSize: "20px"
        }
      }, "\u0637\u0648\u0644 \u0627\u0644\u062D\u062F :", " ", Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["convertToArabic"])(polygon.data[4].totalLength && (+polygon.data[4].totalLength).toFixed(2)))))), key == this.state["activeKey"] - 1 && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_12___default.a.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(antd_lib_row__WEBPACK_IMPORTED_MODULE_1___default.a, {
        gutter: [24, 16]
      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(antd_lib_col__WEBPACK_IMPORTED_MODULE_5___default.a, {
        span: 4
      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("input", {
        name: "parcelSliceNo",
        type: "number",
        placeholder: "\u0631\u0642\u0645 \u0627\u0644\u062A\u0642\u0633\u064A\u0645",
        className: "form-control",
        value: this.state[`parcelSliceNo${key}`],
        disabled: requestType == 2,
        onChange: this.onParcelTextChange.bind(this, polygon, key)
      })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(antd_lib_col__WEBPACK_IMPORTED_MODULE_5___default.a, {
        span: 1
      }, "/"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(antd_lib_col__WEBPACK_IMPORTED_MODULE_5___default.a, {
        span: 4
      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(antd_lib_select__WEBPACK_IMPORTED_MODULE_3___default.a, {
        getPopupContainer: trigger => trigger.parentNode
        // autoFocus
        ,

        name: "parcel_name",
        onChange: val => {
          this.onParcelTextChange(polygon, key, {
            target: {
              value: val,
              name: "parcel_name"
            }
          });
        },
        placeholder: "\u0631\u0642\u0645 \u0642\u0637\u0639\u0629 \u0627\u0644\u0627\u0631\u0636",
        value: this.state[`parcel_name${key}`]
      }, parcels.map((e, i) => {
        return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(Option, {
          key: e.attributes.PARCEL_SPATIAL_ID,
          value: e.attributes.PARCEL_PLAN_NO
        }, Object(_common_common_func__WEBPACK_IMPORTED_MODULE_17__["localizeNumber"])(e.attributes.PARCEL_PLAN_NO));
      })))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(antd_lib_row__WEBPACK_IMPORTED_MODULE_1___default.a, {
        gutter: [24, 16]
      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(antd_lib_col__WEBPACK_IMPORTED_MODULE_5___default.a, {
        span: 9
      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("input", {
        name: "area",
        type: "text",
        className: "form-control",
        placeholder: "\u0627\u0644\u0645\u0633\u0627\u062D\u0629 (\u0645\u06F2)",
        required: "required",
        value: this.state[`area${key}`],
        onChange: this.onInputTextChange.bind(this, polygon, key)
      })))), reqType == "duplex" && key == this.state["activeKey"] - 1 && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(antd_lib_row__WEBPACK_IMPORTED_MODULE_1___default.a, {
        gutter: [24, 16]
      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(antd_lib_col__WEBPACK_IMPORTED_MODULE_5___default.a, {
        span: 4
      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("input", {
        type: "radio",
        name: "duplixType",
        value: "splited",
        checked: this.state[`duplixType${key}`] === "splited",
        onChange: this.duplixTypeChange.bind(this, "splited", polygon, key)
      }), " ", "\u0641\u0644\u0644 \u0645\u0646\u0641\u0635\u0644\u0629"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(antd_lib_col__WEBPACK_IMPORTED_MODULE_5___default.a, {
        span: 5
      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("input", {
        type: "radio",
        name: "duplixType",
        value: "marged",
        checked: this.state[`duplixType${key}`] === "marged",
        onChange: this.duplixTypeChange.bind(this, "marged", polygon, key)
      }), " ", "\u0641\u0644\u0644 \u0645\u062A\u0635\u0644\u0629")));
    }))))));
  }
}
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_24__["connect"])(_mapping__WEBPACK_IMPORTED_MODULE_23__["mapStateToProps"], _mapping__WEBPACK_IMPORTED_MODULE_23__["mapDispatchToProps"])(Object(react_i18next__WEBPACK_IMPORTED_MODULE_16__["translate"])("cadData")(cadSuggestedDataComponent)));

/***/ }),

/***/ "./src/app/components/inputs/fields/label/index.js":
/*!*********************************************************!*\
  !*** ./src/app/components/inputs/fields/label/index.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/get */ "./node_modules/lodash/get.js");
/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_get__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _typeofData__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./typeofData */ "./src/app/components/inputs/fields/label/typeofData/index.js");
/* harmony import */ var react_i18next__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-i18next */ "./node_modules/react-i18next/dist/es/index.js");
/* harmony import */ var _mapping__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./mapping */ "./src/app/components/inputs/fields/label/mapping.js");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");






class labelComponent extends react__WEBPACK_IMPORTED_MODULE_1__["Component"] {
  componentDidMount() {
    const {
      init_data
    } = this.props;
    if (init_data) {
      init_data(this.props);
    }
  }
  render() {
    const {
      className,
      input: {
        value
      },
      type,
      data = {},
      t
    } = this.props;
    let initialVal = lodash_get__WEBPACK_IMPORTED_MODULE_0___default()(data, value, value);
    const Val = lodash_get__WEBPACK_IMPORTED_MODULE_0___default()(_typeofData__WEBPACK_IMPORTED_MODULE_2__, type, () => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("label", null, initialVal));
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(Val, {
      className,
      data: value,
      t: t
    });
  }
}
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_5__["connect"])(_mapping__WEBPACK_IMPORTED_MODULE_4__["mapStateToProps"], _mapping__WEBPACK_IMPORTED_MODULE_4__["mapDispatchToProps"])(Object(react_i18next__WEBPACK_IMPORTED_MODULE_3__["translate"])('labels')(labelComponent)));

/***/ }),

/***/ "./src/app/components/inputs/fields/label/mapping.js":
/*!***********************************************************!*\
  !*** ./src/app/components/inputs/fields/label/mapping.js ***!
  \***********************************************************/
/*! exports provided: mapStateToProps, mapDispatchToProps */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mapStateToProps", function() { return mapStateToProps; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mapDispatchToProps", function() { return mapDispatchToProps; });
/* harmony import */ var redux_form__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! redux-form */ "./node_modules/redux-form/es/index.js");

const mapStateToProps = ({
  wizard: {
    mainObject
  },
  selectors = {},
  mainApp,
  mapViewer,
  ...state
}, {
  moduleName,
  path,
  value_key,
  ...props
}) => {
  return {
    mainObject: {
      ...mainObject
    }
  };
};
const mapDispatchToProps = (dispatch, {
  moduleName
}) => {
  return {
    getValues(name = 'stepForm') {
      return Object(redux_form__WEBPACK_IMPORTED_MODULE_0__["formValueSelector"])('name');
    }
  };
};

/***/ }),

/***/ "./src/app/components/inputs/fields/label/typeofData/boolean.js":
/*!**********************************************************************!*\
  !*** ./src/app/components/inputs/fields/label/typeofData/boolean.js ***!
  \**********************************************************************/
/*! exports provided: boolean */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "boolean", function() { return boolean; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);

class boolean extends react__WEBPACK_IMPORTED_MODULE_0__["Component"] {
  render() {
    const {
      data,
      t
    } = this.props;
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", null, data ? t('Yes') : t('No'));
  }
}

/***/ }),

/***/ "./src/app/components/inputs/fields/label/typeofData/date.js":
/*!*******************************************************************!*\
  !*** ./src/app/components/inputs/fields/label/typeofData/date.js ***!
  \*******************************************************************/
/*! exports provided: date */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "date", function() { return date; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_1__);


class date extends react__WEBPACK_IMPORTED_MODULE_0__["Component"] {
  render() {
    const {
      data
    } = this.props;
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", null, moment__WEBPACK_IMPORTED_MODULE_1___default()(data));
  }
}

/***/ }),

/***/ "./src/app/components/inputs/fields/label/typeofData/index.js":
/*!********************************************************************!*\
  !*** ./src/app/components/inputs/fields/label/typeofData/index.js ***!
  \********************************************************************/
/*! exports provided: object, string, date, number, list, boolean */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _object__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./object */ "./src/app/components/inputs/fields/label/typeofData/object.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "object", function() { return _object__WEBPACK_IMPORTED_MODULE_0__["object"]; });

/* harmony import */ var _string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./string */ "./src/app/components/inputs/fields/label/typeofData/string.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "string", function() { return _string__WEBPACK_IMPORTED_MODULE_1__["string"]; });

/* harmony import */ var _date__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./date */ "./src/app/components/inputs/fields/label/typeofData/date.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "date", function() { return _date__WEBPACK_IMPORTED_MODULE_2__["date"]; });

/* harmony import */ var _number__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./number */ "./src/app/components/inputs/fields/label/typeofData/number.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "number", function() { return _number__WEBPACK_IMPORTED_MODULE_3__["number"]; });

/* harmony import */ var _list__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./list */ "./src/app/components/inputs/fields/label/typeofData/list.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "list", function() { return _list__WEBPACK_IMPORTED_MODULE_4__["list"]; });

/* harmony import */ var _boolean__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./boolean */ "./src/app/components/inputs/fields/label/typeofData/boolean.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "boolean", function() { return _boolean__WEBPACK_IMPORTED_MODULE_5__["boolean"]; });








/***/ }),

/***/ "./src/app/components/inputs/fields/label/typeofData/number.js":
/*!*********************************************************************!*\
  !*** ./src/app/components/inputs/fields/label/typeofData/number.js ***!
  \*********************************************************************/
/*! exports provided: number */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "number", function() { return number; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);

class number extends react__WEBPACK_IMPORTED_MODULE_0__["Component"] {
  render() {
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", null, this.props.data && (+this.props.data).toFixed(2));
  }
}

/***/ }),

/***/ "./src/app/components/inputs/fields/label/typeofData/object.js":
/*!*********************************************************************!*\
  !*** ./src/app/components/inputs/fields/label/typeofData/object.js ***!
  \*********************************************************************/
/*! exports provided: object */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "object", function() { return object; });
/* harmony import */ var lodash_isEmpty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/isEmpty */ "./node_modules/lodash/isEmpty.js");
/* harmony import */ var lodash_isEmpty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_isEmpty__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash/get */ "./node_modules/lodash/get.js");
/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_get__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _helpers_fieldValues__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../helpers/fieldValues */ "./src/app/helpers/fieldValues/index.js");




class object extends react__WEBPACK_IMPORTED_MODULE_2__["Component"] {
  render() {
    const {
      data,
      t
    } = this.props;
    let files = data && data.length ? data.filter(singleData => lodash_get__WEBPACK_IMPORTED_MODULE_1___default()(singleData, 'uid', null) ? singleData : null) : null;
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement("div", null, !lodash_isEmpty__WEBPACK_IMPORTED_MODULE_0___default()(files) ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement("div", null, Object(_helpers_fieldValues__WEBPACK_IMPORTED_MODULE_3__["fileUploader"])(data)) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement("div", {
      style: {
        display: 'flex'
      }
    }, data.map((val, index) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement("div", {
      style: {
        padding: '5px'
      },
      key: index
    }, index == 0 ? ` ${t(val)} ` : ` - ${t(val)} `))));
  }
}

/***/ }),

/***/ "./src/app/components/inputs/fields/label/typeofData/string.js":
/*!*********************************************************************!*\
  !*** ./src/app/components/inputs/fields/label/typeofData/string.js ***!
  \*********************************************************************/
/*! exports provided: string */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "string", function() { return string; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _date__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./date */ "./src/app/components/inputs/fields/label/typeofData/date.js");


class string extends react__WEBPACK_IMPORTED_MODULE_0__["Component"] {
  render() {
    const {
      data,
      t
    } = this.props;
    const datetime = /\d{4,4}-\d{2,2}-\d{2,2}/;
    let item = datetime.test(data) ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_date__WEBPACK_IMPORTED_MODULE_1__["date"], {
      data: data
    }) : data;
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", null, item);
  }
}

/***/ })

}]);
//# sourceMappingURL=16.min.js.map