{"version":3,"file":"111.min.js","sources":["webpack:///./src/app/components/inputs/fields/select/gis_select.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { serverFieldMapper } from \"app/helpers/functions\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport { esriRequest } from \"../identify/Component/common/esri_request\";\r\nimport {\r\n  queryTask,\r\n  getFeatureDomainName,\r\n  getInfo,\r\n} from \"../identify/Component/common/common_func\";\r\nimport { mapUrl } from \"../identify/Component/mapviewer/config/map\";\r\nimport { Select, Button, Checkbox, Form } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport { querySetting } from \"../identify/Component/ThirdIdentifier/Helpers\";\r\nimport { loadModules } from \"esri-loader\";\r\n// import SelectGis from './select';\r\n// import SelectGis2 from './select2';\r\n// import SelectGis3 from './select3';\r\nimport ThirdIdentifier from \"../identify/Component/ThirdIdentifier\";\r\nimport { mapStateToProps, mapDispatchToProps } from \"./mapping\";\r\nconst { Option } = Select;\r\n// import {aaa}from './gis_fields'\r\nconst plainOptions = [\r\n  \"حدود البلديه\",\r\n  \"حدود البلدية الفرعية\",\r\n  \"حدود التقسيم\",\r\n  \"حدود المخططات\",\r\n  \"حدود االحياء\",\r\n  \"حدود البلكات\",\r\n  \"الراضي\",\r\n  \"الشوارع\",\r\n];\r\nconst layerAlias = {\r\n  \"حدود البلديه\": \"Municipality_Boundary\",\r\n  \"حدود البلدية الفرعية\": \"Sub_Municipality_Boundary\",\r\n  \"حدود التقسيم\": \"Subdivision\",\r\n  \"حدود المخططات\": \"Plan_Data\",\r\n  \"حدود االحياء\": \"District_Boundary\",\r\n  \"حدود البلكات\": \"Survey_Block\",\r\n  الراضي: \"Landbase_Parcel\",\r\n  الشوارع: \"Street_Naming\",\r\n};\r\n\r\nconst CheckboxGroup = Checkbox.Group;\r\nclass IdentifyWizerd extends Component {\r\n  constructor() {\r\n    super();\r\n    this.MUNICIPALITY_NAME = null;\r\n    this.MUNICIPALITY_code = null;\r\n    this.SUB_MUNICIPALITY_NAME = null;\r\n    this.SUB_MUNICIPALITY_code = null;\r\n    this.distrectname = null;\r\n    this.distrectcode = null;\r\n    this.LayersName = [];\r\n    this.layersid = [];\r\n    this.PlanNum = [];\r\n    this.datatype = null;\r\n    this.state = {\r\n      TableEle: [],\r\n      munval: undefined,\r\n      planeval: undefined,\r\n      subTypeval: undefined,\r\n      subNameval: undefined,\r\n      subDivNames: [],\r\n      muns: false,\r\n      MunicipalityNames: [],\r\n      PlanNum: [],\r\n    };\r\n  }\r\n  Del = (index) => {\r\n    let a = this.state.TableEle.filter((e, i) => i !== index);\r\n    this.setState({ TableEle: a });\r\n  };\r\n  AddRequest = () => {\r\n    let a = this.state.TableEle.concat({\r\n      munic: this.MUNICIPALITY_NAME,\r\n      municCode: this.MUNICIPALITY_code,\r\n      sub: this.SUB_MUNICIPALITY_NAME,\r\n      subCode: this.SUB_MUNICIPALITY_code,\r\n      distrect: this.distrectname,\r\n      distrectCode: this.distrectcode,\r\n      Layers: this.LayersName.join(\"-\"),\r\n      LayersId: this.layersid,\r\n    });\r\n    this.setState({ TableEle: a });\r\n    console.log(this.TableEle);\r\n  };\r\n  componentDidMount() {\r\n    //  const {setData}=this.props\r\n    getInfo().then((res) => {\r\n      this.LayerID = res;\r\n      esriRequest(mapUrl + \"/\" + this.LayerID.Municipality_Boundary).then(\r\n        (response) => {\r\n          console.log(response);\r\n          this.setState({\r\n            MunicipalityNames:\r\n              response.types[0].domains.MUNICIPALITY_NAME.codedValues,\r\n            muns: true,\r\n          });\r\n          // setData(this.state.MunicipalityNames)\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  onMunChange = (e) => {\r\n    this.setState({\r\n      munval: e,\r\n\r\n      planeval: undefined,\r\n      subNameval: undefined,\r\n      PlanNum: [],\r\n      planId: null,\r\n      subDivNames: [],\r\n    });\r\n    this.SUB_MUNICIPALITY_NAME = null;\r\n    this.SUB_MUNICIPALITY_code = null;\r\n    this.distrectname = null;\r\n    this.distrectcode = null;\r\n    this.MUNICIPALITY_code = e;\r\n    this.MUNICIPALITY_NAME = this.state.MunicipalityNames?.find(\r\n      (m) => m.code == e\r\n    ).name;\r\n\r\n    esriRequest(mapUrl + \"/\" + this.LayerID.Sub_Municipality_Boundary).then(\r\n      (response) => {\r\n        let subtypes = response.types.find((ele) => ele.id === e).domains\r\n          .SUB_MUNICIPALITY_NAME.codedValues;\r\n        this.setState({ PlanNum: subtypes, secondry_muns: true });\r\n      }\r\n    );\r\n    queryTask({\r\n      returnDistinctValues: true,\r\n      ...querySetting(\r\n        this.LayerID.Landbase_Parcel,\r\n        `MUNICIPALITY_NAME=\"${e}\"`,\r\n        false,\r\n        [\"DISTRICT_NAME\"]\r\n      ),\r\n      callbackResult: (res) => {\r\n        getFeatureDomainName(res.features, this.LayerID.Landbase_Parcel).then(\r\n          (result) => {\r\n            this.setState({ subDivNames: result, districts: true });\r\n          }\r\n        );\r\n      },\r\n    });\r\n  };\r\n  LayerBox = (e) => {\r\n    this.LayersName = e;\r\n    this.layersid = e.map((h) => this.LayerID[layerAlias[h]]);\r\n\r\n    console.log(e);\r\n  };\r\n\r\n  onPlaneChange = (f) => {\r\n    this.setState({\r\n      planeval: f,\r\n      subTypeval: undefined,\r\n      subNameval: undefined,\r\n      subDivNames: [],\r\n    });\r\n\r\n    this.distrectname = null;\r\n    this.distrectcode = null;\r\n    this.SUB_MUNICIPALITY_NAME = this.state.PlanNum.find(\r\n      (m) => m.code == f\r\n    ).name;\r\n    this.SUB_MUNICIPALITY_code = f;\r\n    queryTask({\r\n      returnDistinctValues: true,\r\n      ...querySetting(\r\n        this.LayerID.Landbase_Parcel,\r\n        `SUB_MUNICIPALITY_NAME=\"${f}\"`,\r\n        false,\r\n        [\"DISTRICT_NAME\"]\r\n      ),\r\n      callbackResult: (res) => {\r\n        getFeatureDomainName(res.features, this.LayerID.Landbase_Parcel).then(\r\n          (result) => {\r\n            this.setState({ subDivNames: result });\r\n          }\r\n        );\r\n      },\r\n    });\r\n  };\r\n  DataTypeChange = (e) => {\r\n    this.datatype = e;\r\n  };\r\n  onSubNameChange = (e) => {\r\n    this.setState({ subNameval: e });\r\n    this.distrectcode = e;\r\n    this.distrectname = this.state.subDivNames.find(\r\n      (m) => m.attributes.DISTRICT_NAME_Code == e\r\n    ).attributes.DISTRICT_NAME;\r\n  };\r\n  ssss(values) {\r\n    console.log(\"ddu\", values);\r\n  }\r\n  handleChange(value, options) {\r\n    const {\r\n      input: { onChange },\r\n      resetFields,\r\n      change,\r\n    } = this.props;\r\n    resetFields && resetFields.map((f) => change(f, \"\"));\r\n    let newVal = value ? value : \"\";\r\n    onChange(newVal);\r\n  }\r\n  render() {\r\n    const {\r\n      input: { value, ...input },\r\n      handleSubmit,\r\n      showArrow,\r\n      selectors,\r\n      showSearch = false,\r\n      label,\r\n      placeholder,\r\n      data = [],\r\n      label_key = \"label\",\r\n      value_key = \"value\",\r\n      t,\r\n      disabled,\r\n      ux_pattern,\r\n    } = this.props;\r\n    console.log(this.props);\r\n    let districts =\r\n      this.state.subDivNames &&\r\n      this.state.subDivNames.filter((e) => e.attributes.DISTRICT_NAME);\r\n    const { muns, MunicipalityNames, PlanNum, secondry_muns, district } =\r\n      this.state;\r\n    return (\r\n      <div>\r\n        <Form style={{ direction: \"rtl\" }}>\r\n          <div className=\"wizard_identify\">\r\n            <label>البلدية</label>\r\n            <Field\r\n              value={this.state.munval}\r\n              name=\"muns\"\r\n              component={SelectGis}\r\n              data={muns ? MunicipalityNames : []}\r\n              chang={this.onMunChange}\r\n            />\r\n            <label>البلدية الفرعية</label>\r\n            <Field\r\n              name=\"secondry_muns\"\r\n              value={this.state.planeval}\r\n              component={SelectGis2}\r\n              data={secondry_muns ? PlanNum : []}\r\n              chang={this.onPlaneChange}\r\n            />\r\n            {/* <label>الحى</label> \r\n                        <Field value={this.state.subNameval} name=\"district\" component={SelectGis3} data={district ? districts : []} chang={this.onSubNameChange} />  */}\r\n          </div>\r\n          {/* <Select                   getPopupContainer={trigger => trigger.parentNode}\r\n\r\n           autoFocus\r\n           onChange={this.onMunChange}\r\n           showSearch\r\n           value={this.state.munval}\r\n           style={{ width: 200 }}\r\n           placeholder=\"اختر اسم البلديه\"\r\n           disabled={!this.state.MunicipalityNames?.length}\r\n           optionFilterProp=\"children\"\r\n           filterOption={(input, option) =>{\r\n             \r\n             if(option.props.children){\r\n               return option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n              }else{\r\n                return false\r\n              }\r\n            }\r\n          }\r\n          >\r\n           {this.state.MunicipalityNames?.map(e=><Option  key={e.code} value={e.code}>{e.name}</Option>)}\r\n           </Select> */}\r\n          {/* <div className=\"wizard_identify\">\r\n          <label>البلدية الفرعيه</label>\r\n             <Select                   getPopupContainer={trigger => trigger.parentNode}\r\n\r\n                onChange={this.onPlaneChange}\r\n                showSearch\r\n                autoFocus\r\n                disabled={!this.state.PlanNum.length}\r\n                optionFilterProp=\"children\"\r\n                filterOption={(input, option) =>{\r\n                  if(option.props.children){\r\n                    return option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                  }else{\r\n                    return false\r\n                  }\r\n                }\r\n              }\r\n              \r\n              style={{ width: 200 }}\r\n              value={this.state.planeval}\r\n              placeholder=\"البلدية الفرعية \"\r\n              notFoundContent=\"not found\"\r\n              >\r\n                 {this.state.PlanNum.map((d,i)=>{\r\n                   return( <Option key={i}  value={d.code}>{d.name}</Option>)\r\n                  })}\r\n             </Select>\r\n             </div>\r\n\r\n        <div className=\"wizard_identify\">\r\n          <label>الحى</label>\r\n             <Select                   getPopupContainer={trigger => trigger.parentNode}\r\n\r\n                onChange={this.onSubNameChange}\r\n                showSearch\r\n                disabled={!this.state.subDivNames.length}\r\n                style={{ width: 200 }}\r\n                placeholder=\"اسم الحى\"\r\n                value={this.state.subNameval}\r\n                optionFilterProp=\"children\"\r\n                filterOption={(input, option)=>\r\n                  option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                }\r\n                >\r\n                 {this.state.subDivNames.filter(e=>e.attributes.DISTRICT_NAME).map((e,i)=><Option key={i} value={e.attributes.DISTRICT_NAME_Code}>{e.attributes.DISTRICT_NAME}</Option>)}\r\n             </Select>               \r\n               </div> */}\r\n\r\n          {/* <CheckboxGroup\r\n          options={plainOptions}\r\n          onChange={this.LayerBox}\r\n          />\r\n\r\n        < Button type=\"primary\" onClick={this.AddRequest} disabled={!this.MUNICIPALITY_NAME&&!this.LayersName.length>0}>أضافة الارض</Button>\r\n\r\n        {this.state.TableEle.length>0&&<table className=\"table table-bordered\" style={{width:'40vw'}}>\r\n        <thead>\r\n            <tr>\r\n                <th>الرقم</th>\r\n                <th> البلديه</th>\r\n                <th>البلديه الفرعيه </th>\r\n                <th>الحى </th>\r\n                <th>الطبقات </th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n\r\n            {this.state.TableEle.map((e,i)=>{\r\n              console.log(this.state.selectedParcels)\r\n              return(\r\n                <tr key={i}>\r\n               <th>{i+1}</th>\r\n               <td>{e.munic}</td>\r\n               <td>{e.sub}</td>\r\n               <td>{e.distrect}</td>\r\n               <td>{e.Layers}</td>\r\n               <td><Button  type=\"danger\" onClick={()=>{this.Del(i)}}>مسح</Button></td>\r\n            </tr>\r\n\r\n)})}\r\n        </tbody>\r\n    </table>}\r\n    <div>\r\n\r\n  <label>نوع البيانات</label>\r\n    <div>\r\n    \r\n             <Select                   getPopupContainer={trigger => trigger.parentNode}\r\n\r\n                onChange={this.DataTypeChange}\r\n                style={{ width: 200 }}\r\n                placeholder=\"نوع البيانات\"\r\n                optionFilterProp=\"children\"\r\n                filterOption={(input, option)=>\r\n                  option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                }\r\n                >\r\n                 <Option value={0}>Shape File</Option>\r\n                 <Option value={1}>CAD File</Option>\r\n                 <Option value={2}>KML File</Option>\r\n             </Select>               \r\n               </div>\r\n                </div> */}\r\n          {/* <Button className=\"login-button\" onClick={handleSubmit(this.ssss.bind(this))}  type='primary'>{t(\"Sign in\")}</Button> */}\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default reduxForm({\r\n  form: \"identify\", // a unique identifier for this form\r\n})(IdentifyWizerd);\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAwBA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAmBA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAMA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AAMA;AACA;AAEA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AAGA;AApJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAmBA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AA6FA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAsIA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}