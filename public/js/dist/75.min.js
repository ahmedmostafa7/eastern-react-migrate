(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[75],{

/***/ "./src/app/components/inputs/fields/identify/Component/serviceIdentifyComponnent/Helpers.js":
/*!**************************************************************************************************!*\
  !*** ./src/app/components/inputs/fields/identify/Component/serviceIdentifyComponnent/Helpers.js ***!
  \**************************************************************************************************/
/*! exports provided: selectDis, DataQuery, queryOption, querySetting, DataReqest */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectDis", function() { return selectDis; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DataQuery", function() { return DataQuery; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryOption", function() { return queryOption; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "querySetting", function() { return querySetting; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DataReqest", function() { return DataReqest; });
/* harmony import */ var esri_loader__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! esri-loader */ "./node_modules/esri-loader/dist/umd/esri-loader.js");
/* harmony import */ var esri_loader__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(esri_loader__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _mapviewer_config_map__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../mapviewer/config/map */ "./src/app/components/inputs/fields/identify/Component/mapviewer/config/map.js");


const options = {
  url: 'https://js.arcgis.com/3.13'
};
const selectDis = e => {
  var a = [];
  e.forEach(el => {
    el.features.forEach(element => {
      if (!a.find(t => t.attributes.PARCEL_SPATIAL_ID == element.attributes.PARCEL_SPATIAL_ID)) {
        a.push(element);
      }
    });
  });
  return a;
};
const DataQuery = (layerNum, QueryOptions, CallBack) => {
  Object(esri_loader__WEBPACK_IMPORTED_MODULE_0__["loadModules"])(["esri/symbols/SimpleLineSymbol", "esri/Color", "esri/layers/FeatureLayer", "esri/tasks/RelationshipQuery", "esri/tasks/QueryTask", "esri/tasks/query", "esri/request", "esri/geometry/Polygon", "esri/symbols/SimpleFillSymbol", "esri/graphic"], options).then(([SimpleLineSymbol, Color, FeatureLayer, RQuery, QueryTask, Query, request, Polygon, SimpleFillSymbol, Graphic]) => {
    var query = new Query();
    var qt = new QueryTask(_mapviewer_config_map__WEBPACK_IMPORTED_MODULE_1__["mapUrl"] + `/${layerNum}`);
    QueryOptions.forEach(e => {
      query[e.name] = e.value;
    });
    qt.execute(query, CallBack, res => {
      console.log(res);
    });
  });
};
const queryOption = (where, geo, outfields) => {
  return [{
    name: "where",
    value: where
  }, {
    name: "returnGeometry",
    value: geo
  }, {
    name: "outFields",
    value: outfields
  }];
};
const querySetting = (num, where, geo, outfields, url) => {
  return {
    url: (url || _mapviewer_config_map__WEBPACK_IMPORTED_MODULE_1__["mapUrl"]) + "/" + num,
    where,
    returnGeometry: geo,
    outFields: outfields
  };
};
const DataReqest = (url, callBack) => {
  Object(esri_loader__WEBPACK_IMPORTED_MODULE_0__["loadModules"])(["esri/request"], options).then(([request]) => {
    request({
      url: url,
      content: {
        f: "json"
      },
      handleAs: "json",
      callbackParamName: "callback"
    }).then(callBack);
  });
};

/***/ }),

/***/ "./src/app/components/inputs/fields/identify/Component/serviceIdentifyComponnent/index.js":
/*!************************************************************************************************!*\
  !*** ./src/app/components/inputs/fields/identify/Component/serviceIdentifyComponnent/index.js ***!
  \************************************************************************************************/
/*! exports provided: appMapDispatchToProps, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "appMapDispatchToProps", function() { return appMapDispatchToProps; });
/* harmony import */ var antd_lib_divider_style__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antd/lib/divider/style */ "./node_modules/antd/lib/divider/style/index.js");
/* harmony import */ var antd_lib_divider_style__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(antd_lib_divider_style__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var antd_lib_divider__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! antd/lib/divider */ "./node_modules/antd/lib/divider/index.js");
/* harmony import */ var antd_lib_divider__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(antd_lib_divider__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var antd_lib_tooltip_style__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! antd/lib/tooltip/style */ "./node_modules/antd/lib/tooltip/style/index.js");
/* harmony import */ var antd_lib_tooltip_style__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(antd_lib_tooltip_style__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var antd_lib_tooltip__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! antd/lib/tooltip */ "./node_modules/antd/lib/tooltip/index.js");
/* harmony import */ var antd_lib_tooltip__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(antd_lib_tooltip__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var antd_lib_button_style__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! antd/lib/button/style */ "./node_modules/antd/lib/button/style/index.js");
/* harmony import */ var antd_lib_button_style__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(antd_lib_button_style__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var antd_lib_button__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! antd/lib/button */ "./node_modules/antd/lib/button/index.js");
/* harmony import */ var antd_lib_button__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(antd_lib_button__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var antd_lib_input_number_style__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! antd/lib/input-number/style */ "./node_modules/antd/lib/input-number/style/index.js");
/* harmony import */ var antd_lib_input_number_style__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(antd_lib_input_number_style__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var antd_lib_input_number__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! antd/lib/input-number */ "./node_modules/antd/lib/input-number/index.js");
/* harmony import */ var antd_lib_input_number__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(antd_lib_input_number__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/extends.js");
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var antd_lib_select_style__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! antd/lib/select/style */ "./node_modules/antd/lib/select/style/index.js");
/* harmony import */ var antd_lib_select_style__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(antd_lib_select_style__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var antd_lib_select__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! antd/lib/select */ "./node_modules/antd/lib/select/index.js");
/* harmony import */ var antd_lib_select__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(antd_lib_select__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var _common_esri_request__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../common/esri_request */ "./src/app/components/inputs/fields/identify/Component/common/esri_request.js");
/* harmony import */ var number_to_arabic_words_dist_index_node_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! number-to-arabic-words/dist/index-node.js */ "./node_modules/number-to-arabic-words/dist/index-node.js");
/* harmony import */ var number_to_arabic_words_dist_index_node_js__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(number_to_arabic_words_dist_index_node_js__WEBPACK_IMPORTED_MODULE_14__);
/* harmony import */ var _common_common_func__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../common/common_func */ "./src/app/components/inputs/fields/identify/Component/common/common_func.js");
/* harmony import */ var _common_filters_objects__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../common/filters_objects */ "./src/app/components/inputs/fields/identify/Component/common/filters_objects.js");
/* harmony import */ var _fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @fortawesome/react-fontawesome */ "./node_modules/@fortawesome/react-fontawesome/index.es.js");
/* harmony import */ var _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @fortawesome/free-solid-svg-icons */ "./node_modules/@fortawesome/free-solid-svg-icons/index.es.js");
/* harmony import */ var _main_helpers_functions_filters__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../../../../../../main_helpers/functions/filters */ "./src/main_helpers/functions/filters/index.js");
/* harmony import */ var _mapviewer_config_map__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../mapviewer/config/map */ "./src/app/components/inputs/fields/identify/Component/mapviewer/config/map.js");
/* harmony import */ var antd_dist_antd_css__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! antd/dist/antd.css */ "./node_modules/antd/dist/antd.css");
/* harmony import */ var antd_dist_antd_css__WEBPACK_IMPORTED_MODULE_21___default = /*#__PURE__*/__webpack_require__.n(antd_dist_antd_css__WEBPACK_IMPORTED_MODULE_21__);
/* harmony import */ var _MapComponent_MapComponent__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../MapComponent/MapComponent */ "./src/app/components/inputs/fields/identify/Component/MapComponent/MapComponent.js");
/* harmony import */ var _MapBtnsComponent__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../MapBtnsComponent */ "./src/app/components/inputs/fields/identify/Component/MapBtnsComponent/index.js");
/* harmony import */ var _mapping__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../mapping */ "./src/app/components/inputs/fields/identify/Component/mapping.js");
/* harmony import */ var _main_helpers_actions_main__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ../../../../../../../main_helpers/actions/main */ "./src/main_helpers/actions/main/index.js");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var _Helpers__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./Helpers */ "./src/app/components/inputs/fields/identify/Component/serviceIdentifyComponnent/Helpers.js");
/* harmony import */ var react_sticky__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! react-sticky */ "./node_modules/react-sticky/lib/index.js");
/* harmony import */ var react_sticky__WEBPACK_IMPORTED_MODULE_28___default = /*#__PURE__*/__webpack_require__.n(react_sticky__WEBPACK_IMPORTED_MODULE_28__);
/* harmony import */ var _common_esri_loader__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ../common/esri_loader */ "./src/app/components/inputs/fields/identify/Component/common/esri_loader.js");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! axios */ "./node_modules/axios/index.js");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_30___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_30__);
/* harmony import */ var _helpers_apiMethods__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ../../../../../../helpers/apiMethods */ "./src/app/helpers/apiMethods/index.js");
/* harmony import */ var _helpers_errors__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ../../../../../../helpers/errors */ "./src/app/helpers/errors/index.js");




























var uniqid = __webpack_require__(/*! uniqid */ "./node_modules/uniqid/index.js");





const {
  Option
} = antd_lib_select__WEBPACK_IMPORTED_MODULE_11___default.a;
const appMapDispatchToProps = dispatch => {
  return {
    ...Object(_mapping__WEBPACK_IMPORTED_MODULE_24__["mapDispatchToProps"])(dispatch, "serviceLands"),
    ...Object(_main_helpers_actions_main__WEBPACK_IMPORTED_MODULE_25__["default"])(dispatch)
  };
};
class ServiceIdentifyComponent extends react__WEBPACK_IMPORTED_MODULE_12__["Component"] {
  constructor(props) {
    var _props$input, _props$input$value, _props$input$value$pa, _props$input2, _props$input2$value, _props$input2$value$p, _serviceParcel, _serviceParcel$munval, _props$input$value6, _props$input$value6$t, _serviceParcel2, _serviceParcel2$plane, _props$input$value7, _props$input$value7$t, _serviceParcel3, _serviceParcel3$plane, _props$input$value8, _props$input$value8$t, _serviceParcel4, _serviceParcel4$subTy, _props$input$value9, _props$input$value9$t, _serviceParcel5, _serviceParcel5$subTy, _props$input$value10, _props$input$value10$, _serviceParcel6, _serviceParcel6$subNa, _props$input$value11, _props$input$value11$, _serviceParcel7, _serviceParcel7$subNa, _props$input$value12, _props$input$value12$, _serviceParcel8, _serviceParcel8$block, _props$input$value13, _props$input$value13$, _serviceParcel9, _serviceParcel9$block, _props$input$value14, _props$input$value14$, _props$input3, _props$input3$value, _props$input$value15, _props$input$value15$, _serviceParcel10, _serviceParcel11, _serviceParcel12, _serviceParcel13, _serviceParcel14;
    super(props);
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "LayerID", []);
    // onMunChange = (e) => {
    //   //
    //   clearGraphicFromLayer(this.map, "SelectLandsGraphicLayer");
    //   clearGraphicFromLayer(this.map, "ParcelPlanNoGraphicLayer");
    //   let serviceDataItem =
    //     this.state.serviceData?.find(
    //       (item) =>
    //         item.munval?.code == e &&
    //         item.planeval?.code == undefined &&
    //         item.subNameval?.code == undefined &&
    //         item.blockval?.code == undefined
    //     ) || {};
    //   const {
    //     values,
    //     currentModule: { id },
    //   } = this.props;
    //   this.setState({
    //     munval: e,
    //     planeval: undefined,
    //     plan_no: undefined,
    //     subTypeval: undefined,
    //     subType_name: undefined,
    //     subNameval: undefined,
    //     subName_name: undefined,
    //     blockval: undefined,
    //     block_no: undefined,
    //     parcelval: undefined,
    //     PlanNum: [],
    //     blockNum: [],
    //     subDivNames: [],
    //     subDivType: [],
    //     parcelId: null,
    //     parcelNum: [],
    //     parcelData: this.parcelData,
    //     parcelElectricData: this.parcelElectricData,
    //     parcelShatfaData: this.parcelShatfaData,
    //     plan_no: undefined,
    //     noOfParcels: serviceDataItem?.noOfParcels || 0,
    //   });
    //   this.planId = null;
    //   queryTask({
    //     ...querySetting(
    //       this.LayerID.Municipality_Boundary,
    //       `MUNICIPALITY_NAME='${e}'`,
    //       true,
    //       ["MUNICIPALITY_NAME"]
    //     ),
    //     callbackResult: (res) => {
    //       this.pol = res.features[0];
    //       highlightFeature(res.features[0], this.map, {
    //         layerName: "SelectGraphicLayer",
    //         isZoom: true,
    //         isHiglightSymbol: true,
    //         highlighColor: [0, 0, 0, 0.25],
    //       });
    //     },
    //   });
    //   this.GetPlansByMunID(e).then(() => {});
    //   this.getServiceParcels(e, null, null, null);
    // };
    // GetPlansByMunID = (e) => {
    //   return new Promise((resolve, reject) => {
    //     queryTask({
    //       ...querySetting(
    //         this.LayerID.Plan_Data,
    //         `MUNICIPALITY_NAME='${e}'`,
    //         false,
    //         ["PLAN_SPATIAL_ID", "PLAN_NO"]
    //       ),
    //       callbackResult: (res) => {
    //         let plans = res.features.map((e, i) => {
    //           return {
    //             ...e,
    //             i: uniqid(),
    //           };
    //         });
    //         this.setState({
    //           PlanNum: plans,
    //         });
    //         return resolve(plans);
    //       },
    //     });
    //   });
    // };
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "resetFields", () => {
      Object(_common_common_func__WEBPACK_IMPORTED_MODULE_15__["resetMapData"])(this.map);
      Object(_common_filters_objects__WEBPACK_IMPORTED_MODULE_16__["onMunChange"])(this, undefined, () => {});
      this.props.input.onChange({});
      this.setState({
        serviceData: []
      });
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "getServiceParcels", (munval, planeval, subNameval, blockval) => {
      var _plan$, _plan$$attributes;
      var plan = this.state.PlanNum.filter(m => m.i == planeval //|| m?.attributes?.PLAN_NO == planeval
      );
      let whereStr = `PARCEL_MAIN_LUSE IN (20, 30, 40)`;
      if (munval) {
        whereStr += munval && ` ${whereStr ? " AND " : " "}MUNICIPALITY_NAME=${munval}` || "";
      }
      if (plan !== null && plan !== void 0 && (_plan$ = plan[0]) !== null && _plan$ !== void 0 && (_plan$$attributes = _plan$.attributes) !== null && _plan$$attributes !== void 0 && _plan$$attributes.PLAN_SPATIAL_ID) {
        var _plan$2, _plan$2$attributes;
        whereStr += plan && ` ${whereStr ? " AND " : " "}PLAN_SPATIAL_ID=${plan === null || plan === void 0 ? void 0 : (_plan$2 = plan[0]) === null || _plan$2 === void 0 ? void 0 : (_plan$2$attributes = _plan$2.attributes) === null || _plan$2$attributes === void 0 ? void 0 : _plan$2$attributes.PLAN_SPATIAL_ID} AND PARCEL_PLAN_NO IS NOT NULL` || "";
      }
      if (subNameval) {
        whereStr += subNameval && ` ${whereStr ? " AND " : " "}SUBDIVISION_SPATIAL_ID=${subNameval}` || "";
      }
      if (blockval) {
        whereStr += blockval && ` ${whereStr ? " AND " : " "}BLOCK_SPATIAL_ID=${blockval}` || "";
      }
      this.parcelFilterWhere = whereStr;
      Object(_common_common_func__WEBPACK_IMPORTED_MODULE_15__["queryTask"])({
        ...Object(_Helpers__WEBPACK_IMPORTED_MODULE_27__["querySetting"])(this.LayerID.Landbase_Parcel, `${whereStr}`, false, ["*"]),
        returnGeometry: true,
        callbackResult: res => {
          var _this$state$Municipal, _this$state$blockNum$;
          let mun = (_this$state$Municipal = this.state.MunicipalityNames) === null || _this$state$Municipal === void 0 ? void 0 : _this$state$Municipal.filter(e => (e === null || e === void 0 ? void 0 : e.code) == munval).map(e => ({
            code: e.code,
            name: e.name
          }))[0];
          let plan = this.state.PlanNum.filter((d, i) => d.i == planeval).map(e => {
            var _e$attributes;
            return {
              code: e.i,
              name: e === null || e === void 0 ? void 0 : (_e$attributes = e.attributes) === null || _e$attributes === void 0 ? void 0 : _e$attributes.PLAN_NO
            };
          })[0];
          let block = (_this$state$blockNum$ = this.state.blockNum.filter(block => {
            var _block$attributes;
            return (block === null || block === void 0 ? void 0 : (_block$attributes = block.attributes) === null || _block$attributes === void 0 ? void 0 : _block$attributes.BLOCK_SPATIAL_ID) == blockval;
          })) === null || _this$state$blockNum$ === void 0 ? void 0 : _this$state$blockNum$.map(e => {
            var _e$attributes2, _e$attributes3;
            return {
              code: e === null || e === void 0 ? void 0 : (_e$attributes2 = e.attributes) === null || _e$attributes2 === void 0 ? void 0 : _e$attributes2.BLOCK_SPATIAL_ID,
              name: e === null || e === void 0 ? void 0 : (_e$attributes3 = e.attributes) === null || _e$attributes3 === void 0 ? void 0 : _e$attributes3.BLOCK_NO
            };
          })[0];
          let subName = this.state.subDivNames.filter((e, i) => e.attributes.SUBDIVISION_SPATIAL_ID == subNameval).map(e => ({
            code: e.attributes.SUBDIVISION_SPATIAL_ID,
            name: e.attributes.SUBDIVISION_DESCRIPTION
          }))[0];
          let index = this.state.serviceData.findIndex(serviceDataItem => {
            var _serviceDataItem$munv, _serviceDataItem$plan, _serviceDataItem$subN, _serviceDataItem$bloc;
            return ((_serviceDataItem$munv = serviceDataItem.munval) === null || _serviceDataItem$munv === void 0 ? void 0 : _serviceDataItem$munv.code) == munval && ((_serviceDataItem$plan = serviceDataItem.planeval) === null || _serviceDataItem$plan === void 0 ? void 0 : _serviceDataItem$plan.code) == planeval && ((_serviceDataItem$subN = serviceDataItem.subNameval) === null || _serviceDataItem$subN === void 0 ? void 0 : _serviceDataItem$subN.code) == subNameval && ((_serviceDataItem$bloc = serviceDataItem.blockval) === null || _serviceDataItem$bloc === void 0 ? void 0 : _serviceDataItem$bloc.code) == blockval;
          });

          //;
          if (index == -1 && res.features.filter(parcel => parcel.attributes.PARCEL_PLAN_NO != null).length && this.state.parcelId) {
            var _res$features;
            this.setState({
              parcelSearch: null,
              parcelNum: res.features.map((e, i) => {
                return {
                  ...e,
                  i
                };
              }),
              serviceData: [...this.state.serviceData, {
                munval: mun,
                planeval: plan,
                subNameval: subName,
                blockval: block,
                selectedLands: [],
                selectedLandsT: [],
                parcelNum: res.features.map((e, i) => {
                  return {
                    ...e,
                    i
                  };
                }),
                noOfAvailableServiceParcels: ((_res$features = res.features) === null || _res$features === void 0 ? void 0 : _res$features.length) || 0
              }]
            });
          } else {
            this.setState({
              parcelSearch: null,
              parcelNum: res.features.map((e, i) => {
                return {
                  ...e,
                  i
                };
              })
            });
          }
        }
      });
    });
    // onPlaneChange = (f) => {
    //   clearGraphicFromLayer(this.map, "SelectLandsGraphicLayer");
    //   clearGraphicFromLayer(this.map, "ParcelPlanNoGraphicLayer");
    //   let serviceDataItem =
    //     this.state.serviceData?.find(
    //       (item) =>
    //         item.munval?.code == this.state.munval &&
    //         item.planeval?.code == f &&
    //         item.subNameval?.code == undefined &&
    //         item.blockval?.code == undefined
    //     ) || {};
    //   const {
    //     values,
    //     currentModule: { id },
    //   } = this.props;
    //   var planSpatialId = this.state.PlanNum.filter((m) => m.i == f)?.[0]
    //     ?.attributes?.PLAN_SPATIAL_ID;
    //   this.setState({
    //     plan_no: this.state.PlanNum.filter((m) => m.i == f)?.[0]?.attributes
    //       ?.PLAN_NO,
    //     planeval: f,
    //     subTypeval: undefined,
    //     subType_name: undefined,
    //     subNameval: undefined,
    //     subName_name: undefined,
    //     blockval: undefined,
    //     block_no: undefined,
    //     parcelval: undefined,
    //     blockNum: [],
    //     subDivNames: [],
    //     subDivType: [],
    //     parcelId: null,
    //     parcelNum: [],
    //     parcelData: this.parcelData,
    //     parcelElectricData: this.parcelElectricData,
    //     parcelShatfaData: this.parcelShatfaData,
    //     noOfParcels: serviceDataItem?.noOfParcels || 0,
    //   });
    //   queryTask({
    //     ...querySetting(
    //       this.LayerID.Plan_Data,
    //       `PLAN_SPATIAL_ID='${planSpatialId}'`,
    //       true,
    //       ["MUNICIPALITY_NAME"]
    //     ),
    //     callbackResult: (res) => {
    //       this.pol = res.features[0];
    //       highlightFeature(res.features[0], this.map, {
    //         layerName: "SelectGraphicLayer",
    //         isZoom: true,
    //         isHiglightSymbol: true,
    //         highlighColor: [0, 0, 0, 0.25],
    //       });
    //       this.planId = planSpatialId;
    //     },
    //   });
    //   this.GetBlocksByPlanID(planSpatialId);
    //   this.getServiceParcels(this.state.munval, f, null, null);
    //   esriRequest(mapUrl + "/" + this.LayerID.Subdivision).then((response) => {
    //     this.setState({ subDivType: response.fields[7].domain.codedValues });
    //   });
    // };
    // GetBlocksByPlanID = (planSpatialId) => {
    //   queryTask({
    //     ...querySetting(
    //       this.LayerID.Survey_Block,
    //       `PLAN_SPATIAL_ID='${planSpatialId}'`,
    //       false,
    //       ["*"]
    //     ),
    //     callbackResult: (res) => {
    //       console.log(res.features);
    //       let blocks = [];
    //       res.features.forEach((feature) => {
    //         if (feature.attributes.BLOCK_NO) {
    //           blocks.push(feature);
    //         }
    //       });
    //       this.setState({ blockNum: blocks });
    //     },
    //   });
    // };
    // onSubTypeChange = (e) => {
    //   clearGraphicFromLayer(this.map, "SelectLandsGraphicLayer");
    //   clearGraphicFromLayer(this.map, "ParcelPlanNoGraphicLayer");
    //   let serviceDataItem =
    //     this.state.serviceData?.find(
    //       (item) =>
    //         item.munval?.code == this.state.munval &&
    //         item.planeval?.code == this.state.planeval &&
    //         item.subTypeval?.code == e &&
    //         item.blockval?.code == undefined
    //     ) || {};
    //   this.setState({
    //     subType_name: this.state.subDivType.filter((m) => m?.code == e)[0].name,
    //     subTypeval: e,
    //     subNameval: undefined,
    //     subName_name: undefined,
    //     blockval: undefined,
    //     block_no: undefined,
    //     parcelval: undefined,
    //     noOfParcels: serviceDataItem?.noOfParcels || 0,
    //   });
    //   this.getSubNamesBySubType(e);
    // };
    // getSubNamesBySubType = (e) => {
    //   queryTask({
    //     ...querySetting(
    //       this.LayerID.Subdivision,
    //       `SUBDIVISION_TYPE=${e} AND PLAN_SPATIAL_ID=${this.planId}`,
    //       false,
    //       ["SUBDIVISION_DESCRIPTION", "SUBDIVISION_SPATIAL_ID"]
    //     ),
    //     callbackResult: (res) => {
    //       this.setState({ subDivNames: res.features });
    //     },
    //   });
    // };
    // onSubNameChange = (e) => {
    //   clearGraphicFromLayer(this.map, "SelectLandsGraphicLayer");
    //   clearGraphicFromLayer(this.map, "ParcelPlanNoGraphicLayer");
    //   let serviceDataItem =
    //     this.state.serviceData?.find(
    //       (item) =>
    //         item.munval?.code == this.state.munval &&
    //         item.planeval?.code == this.state.planeval &&
    //         item.subNameval?.code == e &&
    //         item.blockval?.code == undefined
    //     ) || {};
    //   const {
    //     values,
    //     currentModule: { id },
    //   } = this.props;
    //   this.setState({
    //     subName_name: this.state.subDivNames.filter(
    //       (m) => m.attributes.SUBDIVISION_SPATIAL_ID == e
    //     )?.[0]?.attributes?.SUBDIVISION_DESCRIPTION,
    //     subNameval: e,
    //     blockval: undefined,
    //     block_no: undefined,
    //     parcelval: undefined,
    //     parcelNum: [],
    //     parcelId: null,
    //     noOfParcels: serviceDataItem?.noOfParcels || 0,
    //   });
    //   queryTask({
    //     ...querySetting(
    //       this.LayerID.Subdivision,
    //       `SUBDIVISION_SPATIAL_ID=${e}`,
    //       true,
    //       ["SUBDIVISION_SPATIAL_ID"]
    //     ),
    //     callbackResult: (res) => {
    //       this.pol = res.features[0];
    //       highlightFeature(res.features[0], this.map, {
    //         layerName: "SelectGraphicLayer",
    //         isZoom: true,
    //         isHiglightSymbol: true,
    //         highlighColor: [0, 0, 0, 0.25],
    //       });
    //     },
    //   });
    //   this.getServiceParcels(this.state.munval, this.state.planeval, e, null);
    // };
    // onBlockChange = (e) => {
    //   clearGraphicFromLayer(this.map, "SelectLandsGraphicLayer");
    //   clearGraphicFromLayer(this.map, "ParcelPlanNoGraphicLayer");
    //   let serviceDataItem =
    //     this.state.serviceData?.find(
    //       (item) =>
    //         item.munval?.code == this.state.munval &&
    //         item.planeval?.code == this.state.planeval &&
    //         item.subNameval?.code == this.state.subNameval &&
    //         item.blockval?.code == e
    //     ) || {};
    //   const {
    //     values,
    //     currentModule: { id },
    //   } = this.props;
    //   this.setState({
    //     block_no: this.state.blockNum.filter(
    //       (m) => m.attributes.BLOCK_SPATIAL_ID == e
    //     )?.[0]?.attributes?.BLOCK_NO,
    //     blockval: e,
    //     parcelval: undefined,
    //     parcelId: null,
    //     parcelNum: [],
    //     noOfParcels: serviceDataItem?.noOfParcels || 0,
    //   });
    //   queryTask({
    //     ...querySetting(
    //       this.LayerID.Survey_Block,
    //       `BLOCK_SPATIAL_ID=${e}`,
    //       true,
    //       ["BLOCK_SPATIAL_ID"]
    //     ),
    //     callbackResult: (res) => {
    //       this.pol = res.features[0];
    //       highlightFeature(res.features[0], this.map, {
    //         layerName: "SelectGraphicLayer",
    //         isZoom: true,
    //         isHiglightSymbol: true,
    //         highlighColor: [0, 0, 0, 0.25],
    //       });
    //     },
    //   });
    //   this.getServiceParcels(
    //     this.state.munval,
    //     this.state.planeval,
    //     this.state.subNameval,
    //     e
    //   );
    // };
    // onLandParcelChange = (f) => {
    //   let serviceDataItem = this.state.serviceData?.find(
    //     (item) =>
    //       item.munval?.code == this.state.munval &&
    //       item.planeval?.code == this.state.planeval &&
    //       item.subNameval?.code == this.state.subNameval &&
    //       item.blockval?.code == this.state.blockval
    //   );
    //   let selectedLands = serviceDataItem?.selectedLands || [];
    //   var e = (serviceDataItem?.parcelNum || this.state.parcelNum)?.filter(
    //     (m) => m.i === f
    //   )?.[0]?.attributes?.PARCEL_SPATIAL_ID;
    //   this.setState({
    //     parcelId: e,
    //     parcelval: f,
    //     noOfParcels: serviceDataItem?.noOfParcels || this.state.noOfParcels || 0,
    //   });
    //   this.RolBackPol = this.pol;
    //   this.RolBackParcelNum =
    //     serviceDataItem?.parcelNum || this.state.parcelNum || [];
    //   queryTask({
    //     ...querySetting(
    //       this.LayerID.Landbase_Parcel,
    //       `PARCEL_SPATIAL_ID='${e}'`,
    //       true,
    //       ["PARCEL_SPATIAL_ID"]
    //     ),
    //     returnGeometry: true,
    //     callbackResult: (res) => {
    //       if (serviceDataItem && !selectedLands.length) {
    //         serviceDataItem.selectedLandsT = [];
    //       }
    //       highlightFeature(res.features[0], this.map, {
    //         layerName: "SelectGraphicLayer",
    //         strokeColor: [0, 0, 0],
    //         highlightWidth: 3,
    //         isHighlighPolygonBorder: true,
    //         isZoom: true,
    //         zoomFactor: 50,
    //       });
    //     },
    //   });
    // };
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "onLandParcelChangeById", f => {
      var _this$state$serviceDa;
      //;
      let serviceDataItem = (_this$state$serviceDa = this.state.serviceData) === null || _this$state$serviceDa === void 0 ? void 0 : _this$state$serviceDa.find(item => {
        var _item$munval, _item$planeval, _item$subNameval, _item$blockval;
        return ((_item$munval = item.munval) === null || _item$munval === void 0 ? void 0 : _item$munval.code) == this.state.munval && ((_item$planeval = item.planeval) === null || _item$planeval === void 0 ? void 0 : _item$planeval.code) == this.state.planeval && ((_item$subNameval = item.subNameval) === null || _item$subNameval === void 0 ? void 0 : _item$subNameval.code) == this.state.subNameval && ((_item$blockval = item.blockval) === null || _item$blockval === void 0 ? void 0 : _item$blockval.code) == this.state.blockval;
      });
      let selectedLands = (serviceDataItem === null || serviceDataItem === void 0 ? void 0 : serviceDataItem.selectedLands) || [];
      this.setState({
        parcelId: f,
        // parcelval: serviceDataItem?.parcelNum?.findIndex(
        //   (m) => m.attributes.PARCEL_SPATIAL_ID === f
        // )?.toString(),
        noOfParcels: (serviceDataItem === null || serviceDataItem === void 0 ? void 0 : serviceDataItem.noOfParcels) || this.state.noOfParcels || 0
      });
      this.RolBackPol = this.pol;
      this.RolBackParcelNum = (serviceDataItem === null || serviceDataItem === void 0 ? void 0 : serviceDataItem.parcelNum) || [];
      Object(_common_common_func__WEBPACK_IMPORTED_MODULE_15__["queryTask"])({
        ...Object(_Helpers__WEBPACK_IMPORTED_MODULE_27__["querySetting"])(this.LayerID.Landbase_Parcel, `PARCEL_SPATIAL_ID='${f}'`, true, ["PARCEL_SPATIAL_ID", "PARCEL_PLAN_NO"]),
        returnGeometry: true,
        callbackResult: res => {
          if (serviceDataItem && !selectedLands.length) {
            serviceDataItem.selectedLandsT = [];
          }
          Object(_common_common_func__WEBPACK_IMPORTED_MODULE_15__["clearGraphicFromLayer"])(this.map, "SelectLandsGraphicLayer");
          Object(_common_common_func__WEBPACK_IMPORTED_MODULE_15__["clearGraphicFromLayer"])(this.map, "SelectGraphicLayer");
          Object(_common_common_func__WEBPACK_IMPORTED_MODULE_15__["clearGraphicFromLayer"])(this.map, "ParcelPlanNoGraphicLayer");
          Object(_common_common_func__WEBPACK_IMPORTED_MODULE_15__["highlightFeature"])(res.features[0], this.map, {
            layerName: "SelectGraphicLayer",
            strokeColor: [0, 0, 0],
            highlightWidth: 3,
            isHighlighPolygonBorder: true,
            isZoom: true,
            zoomFactor: 50
          });
          Object(_common_common_func__WEBPACK_IMPORTED_MODULE_15__["addParcelNo"])(new esri.geometry.Polygon(res.features[0].geometry).getExtent().getCenter(), this.map, res.features[0].attributes.PARCEL_PLAN_NO + "", "ParcelPlanNoGraphicLayer", 14, [0, 0, 0]);
        }
      });
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "addParcelToSelect", () => {
      var _this$state$serviceDa2;
      let serviceDataItem = (_this$state$serviceDa2 = this.state.serviceData) === null || _this$state$serviceDa2 === void 0 ? void 0 : _this$state$serviceDa2.find(item => {
        var _item$munval2, _item$planeval2, _item$subNameval2, _item$blockval2;
        return ((_item$munval2 = item.munval) === null || _item$munval2 === void 0 ? void 0 : _item$munval2.code) == this.state.munval && ((_item$planeval2 = item.planeval) === null || _item$planeval2 === void 0 ? void 0 : _item$planeval2.code) == this.state.planeval && ((_item$subNameval2 = item.subNameval) === null || _item$subNameval2 === void 0 ? void 0 : _item$subNameval2.code) == this.state.subNameval && ((_item$blockval2 = item.blockval) === null || _item$blockval2 === void 0 ? void 0 : _item$blockval2.code) == this.state.blockval;
      });
      let selectedLands = (serviceDataItem === null || serviceDataItem === void 0 ? void 0 : serviceDataItem.selectedLands) || [];
      if (selectedLands && selectedLands.length > 0) {
        var _selectedLands;
        this.setState({
          parcelId: (_selectedLands = selectedLands[selectedLands.length - 1]) === null || _selectedLands === void 0 ? void 0 : _selectedLands.id
        });

        // highlightFeature(selectedLands[selectedLands.length - 1], this.map, {
        //   layerName: "SelectGraphicLayer",
        //   strokeColor: [0, 0, 0],
        //   highlightWidth: 3,
        //   isHighlighPolygonBorder: true,
        //   isZoom: true,
        //   zoomFactor: 50,
        // });
        // addParcelNo(
        //   new esri.geometry.Polygon(selectedLands[selectedLands.length - 1].geometry)
        //     .getExtent()
        //     .getCenter(),
        //   this.map,
        //   selectedLands[selectedLands.length - 1].attributes.PARCEL_PLAN_NO + "",
        //   "ParcelPlanNoGraphicLayer",
        //   14,
        //   [0, 0, 0]
        // );

        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_15__["intersectQueryTask"])({
          outFields: ["MUNICIPALITY_NAME", "PARCEL_AREA", "PARCEL_LAT_COORD", "PARCEL_LONG_COORD", "PARCEL_MAIN_LUSE", "PLAN_NO", "PARCEL_PLAN_NO", "USING_SYMBOL", "PARCEL_SPATIAL_ID"],
          geometry: new esri.geometry.Polygon(selectedLands[selectedLands.length - 1].geometry),
          url: _mapviewer_config_map__WEBPACK_IMPORTED_MODULE_20__["mapUrl"] + "/" + this.LayerID.Landbase_Parcel,
          where: "PARCEL_PLAN_NO is not null AND (USING_SYMBOL = 'خ' OR USING_SYMBOL = 'م' OR USING_SYMBOL like '%ت%')",
          callbackResult: res => {
            Object(_common_common_func__WEBPACK_IMPORTED_MODULE_15__["getFeatureDomainName"])(res.features, this.LayerID.Landbase_Parcel).then(r => {
              debugger;
              res.features = res.features.filter(r => r.attributes.PARCEL_SPATIAL_ID).map((e, i) => {
                var _e$attributes$PARCEL_;
                return {
                  ...e,
                  i: (_e$attributes$PARCEL_ = e.attributes.PARCEL_SPATIAL_ID) === null || _e$attributes$PARCEL_ === void 0 ? void 0 : _e$attributes$PARCEL_.toString()
                };
              });
              debugger;
              serviceDataItem.selectedLandsT.push(res);
              this.DrawGraph();
            });
          }
        });
        //this.DrawGraph();
      }
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "DrawGraph", () => {
      var _this$state$serviceDa3;
      const values = Object(_main_helpers_functions_filters__WEBPACK_IMPORTED_MODULE_19__["default"])({
        key: "FormValues",
        form: "stepForm"
      });
      let serviceDataItem = (_this$state$serviceDa3 = this.state.serviceData) === null || _this$state$serviceDa3 === void 0 ? void 0 : _this$state$serviceDa3.find(item => {
        var _item$munval3, _item$planeval3, _item$subNameval3, _item$blockval3;
        return ((_item$munval3 = item.munval) === null || _item$munval3 === void 0 ? void 0 : _item$munval3.code) == this.state.munval && ((_item$planeval3 = item.planeval) === null || _item$planeval3 === void 0 ? void 0 : _item$planeval3.code) == this.state.planeval && ((_item$subNameval3 = item.subNameval) === null || _item$subNameval3 === void 0 ? void 0 : _item$subNameval3.code) == this.state.subNameval && ((_item$blockval3 = item.blockval) === null || _item$blockval3 === void 0 ? void 0 : _item$blockval3.code) == this.state.blockval;
      });
      let selectedLands = (serviceDataItem === null || serviceDataItem === void 0 ? void 0 : serviceDataItem.selectedLands) || [];
      if (!selectedLands.length) {
        this.map.graphics.clear();
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_15__["clearGraphicFromLayer"])(this.map, "SelectLandsGraphicLayer");
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_15__["highlightFeature"])(this.RolBackPol, this.map, {
          layerName: "SelectGraphicLayer",
          isZoom: true,
          isHiglightSymbol: true,
          highlighColor: [255, 0, 0, 0.25]
        });
        this.setState({
          parcelSearch: null,
          parcelNum: this.RolBackParcelNum,
          parcelval: undefined
        });
      } else {
        this.parcelDis = Object(_Helpers__WEBPACK_IMPORTED_MODULE_27__["selectDis"])((serviceDataItem === null || serviceDataItem === void 0 ? void 0 : serviceDataItem.selectedLandsT) || []);
        // console.log(this.parcelDis);
        this.setAdjacentToStore(this.parcelDis);
        this.setState({
          parcelSearch: null
        }); //, parcelNum: this.parcelDis

        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_15__["clearGraphicFromLayer"])(this.map, "SelectLandsGraphicLayer");
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_15__["clearGraphicFromLayer"])(this.map, "SelectGraphicLayer");
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_15__["clearGraphicFromLayer"])(this.map, "ParcelPlanNoGraphicLayer");

        // highlightFeature(
        //   this.parcelDis.filter(
        //     (element) =>
        //       !selectedLands.find(
        //         (i) => i.id === element.attributes.PARCEL_SPATIAL_ID
        //       )
        //   ),
        //   this.map,
        //   {
        //     layerName: "SelectLandsGraphicLayer",
        //     noclear: false,
        //     isZoom: false,
        //     isHiglightSymbol: true,
        //     highlighColor: [0, 255, 0, 0.5],
        //     zoomFactor: 50,
        //   }
        // );

        // this.parcelDis
        //   .filter(
        //     (element) =>
        //       !selectedLands.find(
        //         (i) => i.id === element.attributes.PARCEL_SPATIAL_ID
        //       )
        //   )
        //   .forEach((f) => {
        //     addParcelNo(
        //       f.geometry.getExtent().getCenter(),
        //       this.map,
        //       f.attributes.PARCEL_PLAN_NO + "",
        //       "ParcelPlanNoGraphicLayer",
        //       14,
        //       [0, 0, 0]
        //     );
        //   });

        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_15__["highlightFeature"])(this.parcelDis.filter(element => selectedLands.find(i => i.id === element.attributes.PARCEL_SPATIAL_ID)), this.map, {
          layerName: "SelectLandsGraphicLayer",
          noclear: true,
          attr: {
            isParcel: true
          },
          isZoom: true,
          isHighlighPolygonBorder: true,
          zoomFactor: 50
        });
        this.parcelDis.filter(element => selectedLands.find(i => i.id === element.attributes.PARCEL_SPATIAL_ID)).forEach(f => {
          Object(_common_common_func__WEBPACK_IMPORTED_MODULE_15__["addParcelNo"])(f.geometry.getExtent().getCenter(), this.map, f.attributes.PARCEL_PLAN_NO + "", "ParcelPlanNoGraphicLayer", 14, [0, 0, 0]);
        });
      }
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "mapload", map => {
      this.map = map;
      setTimeout(() => {
        var _this$state, _this$state$serviceDa4;
        if ((_this$state = this.state) !== null && _this$state !== void 0 && (_this$state$serviceDa4 = _this$state.serviceData) !== null && _this$state$serviceDa4 !== void 0 && _this$state$serviceDa4.length) {
          var _this$state2, _this$state2$serviceD, _this$state2$serviceD2, _this$state2$serviceD3, _this$state5, _this$state5$serviceD, _this$state5$serviceD2;
          if ((_this$state2 = this.state) !== null && _this$state2 !== void 0 && (_this$state2$serviceD = _this$state2.serviceData) !== null && _this$state2$serviceD !== void 0 && (_this$state2$serviceD2 = _this$state2$serviceD[0]) !== null && _this$state2$serviceD2 !== void 0 && (_this$state2$serviceD3 = _this$state2$serviceD2.selectedLands) !== null && _this$state2$serviceD3 !== void 0 && _this$state2$serviceD3.length) {
            var _this$state3, _this$state3$serviceD, _this$state3$serviceD2, _this$state3$serviceD3, _this$state4, _this$state4$serviceD;
            this.highlight((_this$state3 = this.state) === null || _this$state3 === void 0 ? void 0 : (_this$state3$serviceD = _this$state3.serviceData) === null || _this$state3$serviceD === void 0 ? void 0 : (_this$state3$serviceD2 = _this$state3$serviceD[0]) === null || _this$state3$serviceD2 === void 0 ? void 0 : (_this$state3$serviceD3 = _this$state3$serviceD2.selectedLands) === null || _this$state3$serviceD3 === void 0 ? void 0 : _this$state3$serviceD3[0], (_this$state4 = this.state) === null || _this$state4 === void 0 ? void 0 : (_this$state4$serviceD = _this$state4.serviceData) === null || _this$state4$serviceD === void 0 ? void 0 : _this$state4$serviceD[0], null);
          } else if ((_this$state5 = this.state) !== null && _this$state5 !== void 0 && (_this$state5$serviceD = _this$state5.serviceData) !== null && _this$state5$serviceD !== void 0 && (_this$state5$serviceD2 = _this$state5$serviceD[0]) !== null && _this$state5$serviceD2 !== void 0 && _this$state5$serviceD2.currentExtent) {
            var _this$state6, _this$state6$serviceD, _this$state6$serviceD2, _this$state7, _this$state7$serviceD;
            this.highlight((_this$state6 = this.state) === null || _this$state6 === void 0 ? void 0 : (_this$state6$serviceD = _this$state6.serviceData) === null || _this$state6$serviceD === void 0 ? void 0 : (_this$state6$serviceD2 = _this$state6$serviceD[0]) === null || _this$state6$serviceD2 === void 0 ? void 0 : _this$state6$serviceD2.currentExtent, (_this$state7 = this.state) === null || _this$state7 === void 0 ? void 0 : (_this$state7$serviceD = _this$state7.serviceData) === null || _this$state7$serviceD === void 0 ? void 0 : _this$state7$serviceD[0], null);
          }
        }
      }, 1500);
      this.setState({
        mapLoaded: true
      });
      this.props.setCurrentMap(map);
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "myChangeHandler", (name, mainIndex, i, e, event) => {
      if (name == "PARCEL_AREA" && event.target.value) {
        e.attributes.PARCEL_AREA_TEXT = Object(_common_common_func__WEBPACK_IMPORTED_MODULE_15__["reformatNumLetters"])(Object(number_to_arabic_words_dist_index_node_js__WEBPACK_IMPORTED_MODULE_14__["toArabicWord"])((+event.target.value).toFixed(2)), "متر مربع");
      }
      this["edit_" + name + "_" + mainIndex + "_" + i] = event.target.value;
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "validation", item => {
      const {
        t
      } = this.props;
      return new Promise((resolve, reject) => {
        axios__WEBPACK_IMPORTED_MODULE_30___default.a.post(host + "/IsHasSubmission/" + item.attributes.PARCEL_SPATIAL_ID + "/" + (this.props.currentModule.record.id || 0), {
          PARCEL_PLAN_NO: item.attributes.PARCEL_PLAN_NO,
          PARCEL_BLOCK_NO: item.attributes.PARCEL_BLOCK_NO,
          PLAN_NO: item.attributes.PLAN_NO
        }).then(data => {
          if (data.status == 204 || item.attributes.IS_EDITED_Code != 1) {
            return resolve();
          } else {
            window.notifySystem("warning", t("messages:global.PARCELSWARNING"));
            return reject();
          }
        }, err => {
          window.notifySystem("warning", t(`messages:${err.msg || err && err.response && err.response.data && err.response.data.msg}`));
          return reject();
        });
        // if (item.attributes.IS_EDITED_Code != 1) {
        //   return resolve();
        // } else {
        //   window.notifySystem("warning", t("messages:PARCELSWARNING"));
        //   return reject();
        // }
      });
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "checkAllocated", () => {
      return new Promise((resolve, reject) => {
        Object(_helpers_apiMethods__WEBPACK_IMPORTED_MODULE_31__["fetchData"])(`/submission/CheckAllocated?spatialId=${this.state.parcelId}&submissionId=${this.props.currentModule.record.id || 0}`).then(result => {
          resolve(result);
        }, err => {
          Object(_helpers_errors__WEBPACK_IMPORTED_MODULE_32__["handleErrorMessages"])(err, t);
          reject();
        });
      });
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "OnParcelSelect", () => {
      this.checkAllocated().then(result => {
        if (!result) {
          var _values$landData, _this$state$serviceDa5;
          const values = Object(_main_helpers_functions_filters__WEBPACK_IMPORTED_MODULE_19__["default"])({
            key: "FormValues",
            form: "stepForm"
          });
          if ((values === null || values === void 0 ? void 0 : (_values$landData = values.landData) === null || _values$landData === void 0 ? void 0 : _values$landData.landData_type) == 2 && !this.state.noOfParcels) {
            window.notifySystem("error", "يجب ادخال عدد الأراضي الغير معلومة", 5);
            return;
          }
          this.setState({
            parcelval: undefined
          });
          Object(_common_common_func__WEBPACK_IMPORTED_MODULE_15__["clearGraphicFromLayer"])(this.map, "SelectGraphicLayer");
          Object(_common_common_func__WEBPACK_IMPORTED_MODULE_15__["clearGraphicFromLayer"])(this.map, "SelectLandsGraphicLayer");
          let serviceDataItem = (_this$state$serviceDa5 = this.state.serviceData) === null || _this$state$serviceDa5 === void 0 ? void 0 : _this$state$serviceDa5.find(item => {
            var _item$munval4, _item$planeval4, _item$subNameval4, _item$blockval4;
            return ((_item$munval4 = item.munval) === null || _item$munval4 === void 0 ? void 0 : _item$munval4.code) == this.state.munval && ((_item$planeval4 = item.planeval) === null || _item$planeval4 === void 0 ? void 0 : _item$planeval4.code) == this.state.planeval && ((_item$subNameval4 = item.subNameval) === null || _item$subNameval4 === void 0 ? void 0 : _item$subNameval4.code) == this.state.subNameval && ((_item$blockval4 = item.blockval) === null || _item$blockval4 === void 0 ? void 0 : _item$blockval4.code) == this.state.blockval;
          });
          let selectedLands = (serviceDataItem === null || serviceDataItem === void 0 ? void 0 : serviceDataItem.selectedLands) || [];
          if (!selectedLands.filter(e => e.id === this.state.parcelId).length) {
            Object(_common_common_func__WEBPACK_IMPORTED_MODULE_15__["queryTask"])({
              ...Object(_Helpers__WEBPACK_IMPORTED_MODULE_27__["querySetting"])(this.LayerID.Landbase_Parcel, `PARCEL_SPATIAL_ID =${this.state.parcelId}`, true, ["PARCEL_AREA", "PARCEL_MAIN_LUSE", "PARCEL_LAT_COORD", "PARCEL_LONG_COORD", "PLAN_NO", "PARCEL_PLAN_NO", "USING_SYMBOL", "PARCEL_BLOCK_NO", "DISTRICT_NAME", "SUBDIVISION_DESCRIPTION", "SUBDIVISION_TYPE", "PARCEL_SPATIAL_ID", "MUNICIPALITY_NAME", "DETAILED_LANDUSE", "SUB_MUNICIPALITY_NAME", "PARCEL_SUB_LUSE"]),
              callbackResult: res => {
                //this.validation(res.features[0]).then((result) => {
                Object(_common_common_func__WEBPACK_IMPORTED_MODULE_15__["getFeatureDomainName"])(res.features, this.LayerID.Landbase_Parcel).then(r => {
                  Object(_common_common_func__WEBPACK_IMPORTED_MODULE_15__["intersectQueryTask"])({
                    outFields: ["SRVC_SUBTYPE"],
                    geometry: new esri.geometry.Polygon(r[0].geometry),
                    url: _mapviewer_config_map__WEBPACK_IMPORTED_MODULE_20__["mapUrl"] + "/" + this.LayerID.Service_Data,
                    callbackResult: serviceRes => {
                      //
                      Object(_common_common_func__WEBPACK_IMPORTED_MODULE_15__["getFeatureDomainName"])(serviceRes.features, this.LayerID.Service_Data).then(serviceDomainsRes => {
                        var _values$landData2;
                        r[0].attributes = {
                          ...r[0].attributes,
                          SRVC_SUBTYPE: serviceDomainsRes.length && serviceDomainsRes[0].attributes.SRVC_SUBTYPE || null,
                          // SRVC_SUBTYPE_DESC:
                          //   (serviceDomainsRes.length &&
                          //     serviceDomainsRes[0].attributes.SRVC_SUBTYPE) +
                          //     ` (${r[0].attributes.DETAILED_LANDUSE})` || null,
                          SRVC_SUBTYPE_Code: serviceDomainsRes.length && serviceDomainsRes[0].attributes.SRVC_SUBTYPE_Code || null,
                          PARCEL_AREA_TEXT: Object(_common_common_func__WEBPACK_IMPORTED_MODULE_15__["reformatNumLetters"])(Object(number_to_arabic_words_dist_index_node_js__WEBPACK_IMPORTED_MODULE_14__["toArabicWord"])(r[0].attributes.PARCEL_AREA), "متر مربع")
                        };
                        //
                        this.setToStore(r, values === null || values === void 0 ? void 0 : (_values$landData2 = values.landData) === null || _values$landData2 === void 0 ? void 0 : _values$landData2.landData_type);
                        this.addParcelToSelect();
                        //this.DrawGraph();
                      });
                    }
                  });
                });
              }
            });
          }
        } else {
          window.notifySystem("error", "تم تخصيص الأرض من قبل", 5);
          return;
        }
      });
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "setToStore", (r, landData_type) => {
      var _this$state$serviceDa6, _this$state$Municipal2, _this$state$blockNum$2;
      const values = Object(_main_helpers_functions_filters__WEBPACK_IMPORTED_MODULE_19__["default"])({
        key: "FormValues",
        form: "stepForm"
      });
      let index = (_this$state$serviceDa6 = this.state.serviceData) === null || _this$state$serviceDa6 === void 0 ? void 0 : _this$state$serviceDa6.findIndex(item => {
        var _item$munval5, _item$planeval5, _item$subNameval5, _item$blockval5;
        return ((_item$munval5 = item.munval) === null || _item$munval5 === void 0 ? void 0 : _item$munval5.code) == this.state.munval && ((_item$planeval5 = item.planeval) === null || _item$planeval5 === void 0 ? void 0 : _item$planeval5.code) == this.state.planeval && ((_item$subNameval5 = item.subNameval) === null || _item$subNameval5 === void 0 ? void 0 : _item$subNameval5.code) == this.state.subNameval && ((_item$blockval5 = item.blockval) === null || _item$blockval5 === void 0 ? void 0 : _item$blockval5.code) == this.state.blockval;
      });
      const {
        input: {
          value
        }
      } = this.props;
      let mun = (_this$state$Municipal2 = this.state.MunicipalityNames) === null || _this$state$Municipal2 === void 0 ? void 0 : _this$state$Municipal2.filter(e => (e === null || e === void 0 ? void 0 : e.code) == this.state.munval).map(e => ({
        code: e.code,
        name: e.name
      }))[0];
      let plan = this.state.PlanNum.filter((d, i) => d.i == this.state.planeval).map(e => {
        var _e$attributes4;
        return {
          code: e.i,
          name: e === null || e === void 0 ? void 0 : (_e$attributes4 = e.attributes) === null || _e$attributes4 === void 0 ? void 0 : _e$attributes4.PLAN_NO
        };
      })[0];
      let block = (_this$state$blockNum$2 = this.state.blockNum.filter(block => {
        var _block$attributes2;
        return (block === null || block === void 0 ? void 0 : (_block$attributes2 = block.attributes) === null || _block$attributes2 === void 0 ? void 0 : _block$attributes2.BLOCK_SPATIAL_ID) == this.state.blockval;
      })) === null || _this$state$blockNum$2 === void 0 ? void 0 : _this$state$blockNum$2.map(e => {
        var _e$attributes5, _e$attributes6;
        return {
          code: e === null || e === void 0 ? void 0 : (_e$attributes5 = e.attributes) === null || _e$attributes5 === void 0 ? void 0 : _e$attributes5.BLOCK_SPATIAL_ID,
          name: e === null || e === void 0 ? void 0 : (_e$attributes6 = e.attributes) === null || _e$attributes6 === void 0 ? void 0 : _e$attributes6.BLOCK_NO
        };
      })[0];
      let subName = this.state.subDivNames.filter((e, i) => e.attributes.SUBDIVISION_SPATIAL_ID == this.state.subNameval).map(e => ({
        code: e.attributes.SUBDIVISION_SPATIAL_ID,
        name: e.attributes.SUBDIVISION_DESCRIPTION
      }))[0];
      let subType = this.state.subDivType.filter((e, i) => e.code == this.state.subTypeval).map(e => ({
        code: e.code,
        name: e.name
      }))[0];
      if (r && landData_type == 1) {
        if (index != -1) {
          this.state.serviceData[index].selectedLands = [...this.state.serviceData[index].selectedLands, {
            attributes: r[0].attributes,
            id: this.state.parcelId,
            geometry: JSON.parse(JSON.stringify(r[0].geometry))
          }];
        } else {
          var _values$landData3, _this$state8, _this$state9, _this$state10, _this$state11;
          this.state.serviceData.push({
            munval: mun,
            planeval: plan,
            subNameval: subName,
            blockval: block,
            subTypeval: subType,
            landData_type: values === null || values === void 0 ? void 0 : (_values$landData3 = values.landData) === null || _values$landData3 === void 0 ? void 0 : _values$landData3.landData_type,
            PlanNum: this.state.PlanNum,
            parcelNum: ((_this$state8 = this.state) === null || _this$state8 === void 0 ? void 0 : _this$state8.parcelNum) || [],
            blockNum: ((_this$state9 = this.state) === null || _this$state9 === void 0 ? void 0 : _this$state9.blockNum) || [],
            subDivNames: ((_this$state10 = this.state) === null || _this$state10 === void 0 ? void 0 : _this$state10.subDivNames) || [],
            subDivType: ((_this$state11 = this.state) === null || _this$state11 === void 0 ? void 0 : _this$state11.subDivType) || [],
            selectedLands: [{
              attributes: r[0].attributes,
              id: this.state.parcelId,
              geometry: JSON.parse(JSON.stringify(r[0].geometry))
            }],
            selectedLandsT: []
          });
        }
      } else if (r && landData_type == 2) {
        //;
        if (index != -1) {
          var _this$state$serviceDa7, _this$state12, _this$state12$parcelN;
          this.state.serviceData[index].noOfParcels = r.noOfParcels || ((_this$state$serviceDa7 = this.state.serviceData[index]) === null || _this$state$serviceDa7 === void 0 ? void 0 : _this$state$serviceDa7.noOfParcels);
          this.state.serviceData[index].noOfAvailableServiceParcels = ((_this$state12 = this.state) === null || _this$state12 === void 0 ? void 0 : (_this$state12$parcelN = _this$state12.parcelNum) === null || _this$state12$parcelN === void 0 ? void 0 : _this$state12$parcelN.length) || 0;
          if ((r === null || r === void 0 ? void 0 : r[0]) != undefined) {
            this.state.serviceData[index].selectedLands = !this.state.serviceData[index].selectedLands.length && [{
              attributes: r[0].attributes,
              id: this.state.parcelId,
              geometry: JSON.parse(JSON.stringify(r[0].geometry))
            }] || [...this.state.serviceData[index].selectedLands, {
              attributes: r[0].attributes,
              id: this.state.parcelId,
              geometry: JSON.parse(JSON.stringify(r[0].geometry))
            }] || [];
          }
        } else {
          var _values$landData4, _this$state13, _this$state14, _this$state14$parcelN, _this$state15, _this$state16, _this$state17, _this$state18;
          this.state.serviceData.push({
            munval: mun,
            planeval: plan,
            subNameval: subName,
            blockval: block,
            subTypeval: subType,
            landData_type: values === null || values === void 0 ? void 0 : (_values$landData4 = values.landData) === null || _values$landData4 === void 0 ? void 0 : _values$landData4.landData_type,
            noOfParcels: r.noOfParcels || ((_this$state13 = this.state) === null || _this$state13 === void 0 ? void 0 : _this$state13.noOfParcels),
            currentExtent: r.currentExtent || this.pol,
            noOfAvailableServiceParcels: ((_this$state14 = this.state) === null || _this$state14 === void 0 ? void 0 : (_this$state14$parcelN = _this$state14.parcelNum) === null || _this$state14$parcelN === void 0 ? void 0 : _this$state14$parcelN.length) || 0,
            PlanNum: this.state.PlanNum,
            parcelNum: ((_this$state15 = this.state) === null || _this$state15 === void 0 ? void 0 : _this$state15.parcelNum) || [],
            blockNum: ((_this$state16 = this.state) === null || _this$state16 === void 0 ? void 0 : _this$state16.blockNum) || [],
            subDivNames: ((_this$state17 = this.state) === null || _this$state17 === void 0 ? void 0 : _this$state17.subDivNames) || [],
            subDivType: ((_this$state18 = this.state) === null || _this$state18 === void 0 ? void 0 : _this$state18.subDivType) || [],
            selectedLands: (r === null || r === void 0 ? void 0 : r[0]) != undefined && [{
              attributes: r[0].attributes,
              id: this.state.parcelId,
              geometry: JSON.parse(JSON.stringify(r[0].geometry))
            }] || [],
            selectedLandsT: []
          });
        }
      }

      //;
      this.state.landsData = {
        ...value,
        mapGraphics: [],
        submission_data: {
          ...this.state.submission_data
        },
        temp: {
          mun: this.state.munval,
          plan: this.state.plan_no,
          planeval: this.state.planeval,
          subtype: this.state.subType_name,
          subname: this.state.subName_name,
          parcelDis: this.RolBackParcelNum,
          block: this.state.block_no,
          parcel: this.state.parcelval
        },
        parcels: [...this.state.serviceData]
      };
      this.props.input.onChange({
        ...this.state.landsData
      });
      this.setState({
        serviceData: [...this.state.serviceData]
      });
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "setAdjacentToStore", r => {
      let store = this.props.input.value;
      store.temp.parcelDis = r;
      this.props.input.onChange(store);
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "resetFilters", () => {
      debugger;
      this.loadLists = true;
      if (this.state.munval) {
        Object(_common_filters_objects__WEBPACK_IMPORTED_MODULE_16__["onMunChange"])(this, this.state.munval, () => {
          Object(_common_filters_objects__WEBPACK_IMPORTED_MODULE_16__["onPlaneChange"])(this, this.state.planeval, () => {
            Object(_common_filters_objects__WEBPACK_IMPORTED_MODULE_16__["onSubTypeChange"])(this, this.state.subTypeval, () => {
              Object(_common_filters_objects__WEBPACK_IMPORTED_MODULE_16__["onSubNameChange"])(this, this.state.subNameval, () => {
                Object(_common_filters_objects__WEBPACK_IMPORTED_MODULE_16__["onBlockChange"])(this, this.state.blockval, () => {
                  Object(_common_filters_objects__WEBPACK_IMPORTED_MODULE_16__["onLandParcelChange"])(this, this.state.parcelval, () => {});
                });
              });
            });
          });
        });
      }
      this.loadLists = false;
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "LandHoverOn", f => {
      var _this$state$serviceDa8;
      let serviceDataItem = (_this$state$serviceDa8 = this.state.serviceData) === null || _this$state$serviceDa8 === void 0 ? void 0 : _this$state$serviceDa8.find(item => {
        var _item$munval6, _item$planeval6, _item$subNameval6, _item$blockval6;
        return ((_item$munval6 = item.munval) === null || _item$munval6 === void 0 ? void 0 : _item$munval6.code) == this.state.munval && ((_item$planeval6 = item.planeval) === null || _item$planeval6 === void 0 ? void 0 : _item$planeval6.code) == this.state.planeval && ((_item$subNameval6 = item.subNameval) === null || _item$subNameval6 === void 0 ? void 0 : _item$subNameval6.code) == this.state.subNameval && ((_item$blockval6 = item.blockval) === null || _item$blockval6 === void 0 ? void 0 : _item$blockval6.code) == this.state.blockval;
      });
      let selectedLands = (serviceDataItem === null || serviceDataItem === void 0 ? void 0 : serviceDataItem.selectedLands) || [];
      if (selectedLands.length) {
        var _serviceDataItem$parc;
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_15__["clearGraphicFromLayer"])(this.map, "SelectGraphicLayer");
        var parcel = serviceDataItem === null || serviceDataItem === void 0 ? void 0 : (_serviceDataItem$parc = serviceDataItem.parcelNum) === null || _serviceDataItem$parc === void 0 ? void 0 : _serviceDataItem$parc.filter(m => m.i == f.key)[0];
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_15__["highlightFeature"])(parcel, this.map, {
          layerName: "SelectGraphicLayer",
          strokeColor: [0, 0, 0],
          isHighlighPolygonBorder: true,
          highlightWidth: 3
        });
      }
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "LandHoverOff", f => {
      var _this$state$serviceDa9;
      let serviceDataItem = (_this$state$serviceDa9 = this.state.serviceData) === null || _this$state$serviceDa9 === void 0 ? void 0 : _this$state$serviceDa9.find(item => {
        var _item$munval7, _item$planeval7, _item$subNameval7, _item$blockval7;
        return ((_item$munval7 = item.munval) === null || _item$munval7 === void 0 ? void 0 : _item$munval7.code) == this.state.munval && ((_item$planeval7 = item.planeval) === null || _item$planeval7 === void 0 ? void 0 : _item$planeval7.code) == this.state.planeval && ((_item$subNameval7 = item.subNameval) === null || _item$subNameval7 === void 0 ? void 0 : _item$subNameval7.code) == this.state.subNameval && ((_item$blockval7 = item.blockval) === null || _item$blockval7 === void 0 ? void 0 : _item$blockval7.code) == this.state.blockval;
      });
      let selectedLands = (serviceDataItem === null || serviceDataItem === void 0 ? void 0 : serviceDataItem.selectedLands) || [];
      if (selectedLands.length) {
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_15__["clearGraphicFromLayer"])(this.map, "SelectGraphicLayer");
      }
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "remove", (mainIndex, index) => {
      const {
        input: {
          value
        }
      } = this.props;
      if (index != -1) {
        this.state.serviceData[mainIndex].selectedLands.splice(index, 1);
        if (!this.state.serviceData[mainIndex].selectedLands.length) {
          Object(_common_common_func__WEBPACK_IMPORTED_MODULE_15__["clearGraphicFromLayer"])(this.map, "SelectGraphicLayer");
          Object(_common_common_func__WEBPACK_IMPORTED_MODULE_15__["clearGraphicFromLayer"])(this.map, "SelectLandsGraphicLayer");
          Object(_common_common_func__WEBPACK_IMPORTED_MODULE_15__["clearGraphicFromLayer"])(this.map, "ParcelPlanNoGraphicLayer");
          // onMunChange(
          //   this,
          //   this.state.serviceData[mainIndex].munval.code,
          //   () => {}
          // );
          // onPlaneChange(this.state.serviceData[mainIndex].planeval.code);
          this.resetFilters();
          // highlightFeature(this.pol, this.map, {
          //   layerName: "SelectGraphicLayer",
          //   isZoom: true,
          //   isHiglightSymbol: true,
          //   highlighColor: [0, 0, 0, 0.25],
          // });
          debugger;
          this.getServiceParcels(this.state.munval, this.state.planeval, this.state.subNameval, this.state.blockval);
        } else {
          let length = this.state.serviceData[mainIndex].selectedLands.length;
          this.doHighlightOrZoom(this.state.serviceData[mainIndex].selectedLands[length - 1], this.state.serviceData[mainIndex], false);
        }
      } else {
        this.state.serviceData.splice(mainIndex, 1);
      }

      // if (this.state.serviceDataT?.length) {
      //   this.state.serviceDataT.pop(item);
      // }

      this.state.landsData = {
        ...value,
        mapGraphics: [],
        submission_data: {
          ...this.state.submission_data
        },
        temp: {
          mun: this.state.munval,
          planeval: this.state.planeval,
          plan: this.state.plan_no,
          subtype: this.state.subType_name,
          subname: this.state.subName_name,
          parcelDis: this.RolBackParcelNum,
          block: this.state.block_no,
          parcel: this.state.parcelval
        },
        parcels: [...this.state.serviceData]
      };
      this.props.input.onChange({
        ...this.state.landsData
      });
      this.setState({
        serviceData: [...this.state.serviceData]
      });
      this.DrawGraph();
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "setNoOfParcels", evt => {
      //;
      this.setState({
        noOfParcels: evt.target.value
      });
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "assignNoOfParcels", () => {
      var _values$landData5;
      const values = Object(_main_helpers_functions_filters__WEBPACK_IMPORTED_MODULE_19__["default"])({
        key: "FormValues",
        form: "stepForm"
      });
      this.setToStore({
        noOfParcels: this.state.noOfParcels,
        currentExtent: this.pol
      }, values === null || values === void 0 ? void 0 : (_values$landData5 = values.landData) === null || _values$landData5 === void 0 ? void 0 : _values$landData5.landData_type);
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "openPopup", (mainIndex, index, fieldsObj) => {
      var _this$fieldsObj, _this$state$serviceDa10;
      const values = Object(_main_helpers_functions_filters__WEBPACK_IMPORTED_MODULE_19__["default"])({
        key: "FormValues",
        form: "stepForm"
      });
      var fields = this === null || this === void 0 ? void 0 : (_this$fieldsObj = this[fieldsObj]) === null || _this$fieldsObj === void 0 ? void 0 : _this$fieldsObj.fields;
      let thisScope = this;
      this.props.setMain("Popup", {
        popup: {
          type: "create",
          childProps: {
            fields,
            initialValues: {
              ...(((_this$state$serviceDa10 = this.state.serviceData[mainIndex].selectedLands[index]) === null || _this$state$serviceDa10 === void 0 ? void 0 : _this$state$serviceDa10[fieldsObj]) || {})
            },
            ok(values) {
              var _values$landData6;
              thisScope.state.serviceData[mainIndex].selectedLands[index][fieldsObj] = values;
              thisScope.setToStore(null, values === null || values === void 0 ? void 0 : (_values$landData6 = values.landData) === null || _values$landData6 === void 0 ? void 0 : _values$landData6.landData_type);
              return Promise.resolve(true);
            }
          }
        }
      });
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "zoom", (e, serviceDataItem, evt) => {
      this.doHighlightOrZoom(e, serviceDataItem, false);
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "doHighlightOrZoom", (e, serviceDataItem, isHighlight) => {
      var _serviceDataItem$munv2, _serviceDataItem$plan2, _serviceDataItem$plan3, _serviceDataItem$subT, _serviceDataItem$subN2, _serviceDataItem$bloc2;
      const {
        currentModule: {
          id
        }
      } = this.props;
      // let planeval;
      // this.state.munval = serviceDataItem?.munval?.code;
      // this.state.blockval = serviceDataItem?.blockval?.code;
      // this.state.subNameval = serviceDataItem?.subNameval?.code;
      // this.state.subTypeval = serviceDataItem?.subTypeval?.code;
      Object(_common_common_func__WEBPACK_IMPORTED_MODULE_15__["clearGraphicFromLayer"])(this.map, "SelectLandsGraphicLayer");
      Object(_common_common_func__WEBPACK_IMPORTED_MODULE_15__["clearGraphicFromLayer"])(this.map, "SelectGraphicLayer");
      Object(_common_common_func__WEBPACK_IMPORTED_MODULE_15__["clearGraphicFromLayer"])(this.map, "ParcelPlanNoGraphicLayer");
      Object(_common_common_func__WEBPACK_IMPORTED_MODULE_15__["highlightFeature"])(e, this.map, {
        layerName: "SelectLandsGraphicLayer",
        noclear: false,
        isZoom: true,
        isHiglightSymbol: isHighlight,
        highlighColor: [0, 255, 0, 0.5],
        zoomFactor: 50
      });

      //;
      this.setState({
        noOfParcels: serviceDataItem === null || serviceDataItem === void 0 ? void 0 : serviceDataItem.noOfParcels,
        munval: (serviceDataItem === null || serviceDataItem === void 0 ? void 0 : (_serviceDataItem$munv2 = serviceDataItem.munval) === null || _serviceDataItem$munv2 === void 0 ? void 0 : _serviceDataItem$munv2.code) || undefined,
        planeval: (serviceDataItem === null || serviceDataItem === void 0 ? void 0 : (_serviceDataItem$plan2 = serviceDataItem.planeval) === null || _serviceDataItem$plan2 === void 0 ? void 0 : _serviceDataItem$plan2.code) || undefined,
        plan_no: (serviceDataItem === null || serviceDataItem === void 0 ? void 0 : (_serviceDataItem$plan3 = serviceDataItem.planeval) === null || _serviceDataItem$plan3 === void 0 ? void 0 : _serviceDataItem$plan3.name) || undefined,
        subTypeval: (serviceDataItem === null || serviceDataItem === void 0 ? void 0 : (_serviceDataItem$subT = serviceDataItem.subTypeval) === null || _serviceDataItem$subT === void 0 ? void 0 : _serviceDataItem$subT.code) || undefined,
        subNameval: (serviceDataItem === null || serviceDataItem === void 0 ? void 0 : (_serviceDataItem$subN2 = serviceDataItem.subNameval) === null || _serviceDataItem$subN2 === void 0 ? void 0 : _serviceDataItem$subN2.code) || undefined,
        blockval: (serviceDataItem === null || serviceDataItem === void 0 ? void 0 : (_serviceDataItem$bloc2 = serviceDataItem.blockval) === null || _serviceDataItem$bloc2 === void 0 ? void 0 : _serviceDataItem$bloc2.code) || undefined,
        parcelId: (e === null || e === void 0 ? void 0 : e.id) || undefined,
        PlanNum: (serviceDataItem === null || serviceDataItem === void 0 ? void 0 : serviceDataItem.PlanNum) || [],
        blockNum: (serviceDataItem === null || serviceDataItem === void 0 ? void 0 : serviceDataItem.blockNum) || [],
        subDivNames: (serviceDataItem === null || serviceDataItem === void 0 ? void 0 : serviceDataItem.subDivNames) || [],
        subDivType: (serviceDataItem === null || serviceDataItem === void 0 ? void 0 : serviceDataItem.subDivType) || [],
        parcelNum: (serviceDataItem === null || serviceDataItem === void 0 ? void 0 : serviceDataItem.parcelNum) || []
      });
      if (serviceDataItem !== null && serviceDataItem !== void 0 && serviceDataItem.selectedLands.length) {
        this.onLandParcelChangeById(e === null || e === void 0 ? void 0 : e.id);
      } else {
        var _serviceDataItem$munv3, _serviceDataItem$plan4, _serviceDataItem$subN3, _serviceDataItem$bloc3;
        this.state.parcelId = null;
        this.getServiceParcels(serviceDataItem === null || serviceDataItem === void 0 ? void 0 : (_serviceDataItem$munv3 = serviceDataItem.munval) === null || _serviceDataItem$munv3 === void 0 ? void 0 : _serviceDataItem$munv3.code, serviceDataItem === null || serviceDataItem === void 0 ? void 0 : (_serviceDataItem$plan4 = serviceDataItem.planeval) === null || _serviceDataItem$plan4 === void 0 ? void 0 : _serviceDataItem$plan4.code, serviceDataItem === null || serviceDataItem === void 0 ? void 0 : (_serviceDataItem$subN3 = serviceDataItem.subNameval) === null || _serviceDataItem$subN3 === void 0 ? void 0 : _serviceDataItem$subN3.code, serviceDataItem === null || serviceDataItem === void 0 ? void 0 : (_serviceDataItem$bloc3 = serviceDataItem.blockval) === null || _serviceDataItem$bloc3 === void 0 ? void 0 : _serviceDataItem$bloc3.code);
      }

      // if (serviceDataItem?.munval?.code && serviceDataItem?.planeval?.name) {
      //   this.GetPlansByMunID(serviceDataItem?.munval?.code).then((plans) => {
      //     if (serviceDataItem?.planeval?.name) {
      //       planeval = plans.find(
      //         (plan) => plan.attributes.PLAN_NO == serviceDataItem?.planeval?.name
      //       )?.i;

      //       this.state.planeval = planeval;
      //       this.state.plan_no = serviceDataItem?.planeval?.name;
      //       this.planId = plans.find(
      //         (plan) => plan.attributes.PLAN_NO == serviceDataItem?.planeval?.name
      //       )?.attributes.PLAN_SPATIAL_ID;

      //       if (serviceDataItem?.blockval?.code) {
      //         this.GetBlocksByPlanID(this.planId);
      //       }
      //     }

      //     if (
      //       serviceDataItem?.subNameval?.code &&
      //       serviceDataItem?.subTypeval?.code
      //     ) {
      //       this.getSubNamesBySubType(serviceDataItem?.subTypeval?.code);
      //     }

      //     if (serviceDataItem?.selectedLands.length) {
      //       this.state.parcelNum = serviceDataItem?.parcelNum || [];
      //       this.onLandParcelChangeById(e?.id);
      //     } else {
      //       this.state.parcelId = null;
      //       this.getServiceParcels(
      //         serviceDataItem?.munval?.code,
      //         serviceDataItem?.planeval?.name,
      //         serviceDataItem?.subNameval?.code,
      //         serviceDataItem?.blockval?.code
      //       );
      //     }
      //     if (serviceDataItem?.landData_type == 2) {
      //       this.setState({ noOfParcels: serviceDataItem?.noOfParcels });
      //     }
      //   });
      // } else {
      //   if (serviceDataItem?.selectedLands.length) {
      //     this.state.parcelNum = serviceDataItem?.parcelNum || [];
      //     this.onLandParcelChangeById(e?.id);
      //   } else {
      //     this.state.parcelId = null;
      //     this.getServiceParcels(
      //       serviceDataItem?.munval?.code,
      //       serviceDataItem?.planeval?.name,
      //       serviceDataItem?.subNameval?.code,
      //       serviceDataItem?.blockval?.code
      //     );
      //   }
      //   if (serviceDataItem?.landData_type == 2) {
      //     this.setState({ noOfParcels: serviceDataItem?.noOfParcels });
      //   }
      // }
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "highlight", (e, serviceDataItem, evt) => {
      this.doHighlightOrZoom(e, serviceDataItem, true);
    });
    this.isLoaded = true;
    this.PlanNum = [];
    this.planId = null;
    this.parcelTs = [];
    this.selectedLandsT = [];
    this.selectedLands = [];
    this.selectionMode = false;
    this.parcel_fields = ["PARCEL_PLAN_NO", "PARCEL_AREA", "PARCEL_AREA_TEXT", "PARCEL_BLOCK_NO", "DISTRICT_NAME", "SUBDIVISION_TYPE", "SUBDIVISION_DESCRIPTION", "PARCEL_MAIN_LUSE", "USING_SYMBOL", "DETAILED_LANDUSE", "SRVC_SUBTYPE"];
    this.parcelData = {
      label: "حدود الموقع حسب الصك",
      className: "parcelInfo",
      type: "inputs",
      required: true,
      fields: {
        north_length: {
          label: "طول الحد الشمالي",
          value: 0,
          required: true,
          field: "inputNumber",
          onClick: (props, val) => {
            debugger;
            props.change("north_length_text", Object(_common_common_func__WEBPACK_IMPORTED_MODULE_15__["reformatNumLetters"])(Object(number_to_arabic_words_dist_index_node_js__WEBPACK_IMPORTED_MODULE_14__["toArabicWord"])(val), "متر"));
          }
        },
        north_length_text: {
          label: "طول الحد الشمالي بالأحرف",
          value: 0,
          required: true,
          disabled: true
        },
        north_desc: {
          label: "وصف الحد الشمالي",
          value: "",
          required: true
        },
        south_length: {
          label: "طول الحد الجنوبي",
          value: 0,
          required: true,
          field: "inputNumber",
          onClick: (props, val) => {
            debugger;
            props.change("south_length_text", Object(_common_common_func__WEBPACK_IMPORTED_MODULE_15__["reformatNumLetters"])(Object(number_to_arabic_words_dist_index_node_js__WEBPACK_IMPORTED_MODULE_14__["toArabicWord"])(val), "متر"));
          }
        },
        south_length_text: {
          label: "طول الحد الجنوبي بالأحرف",
          value: 0,
          required: true,
          disabled: true
        },
        south_desc: {
          label: "وصف الحد الجنوبي",
          value: "",
          required: true
        },
        east_length: {
          label: "طول الحد الشرقي",
          value: 0,
          required: true,
          field: "inputNumber",
          onClick: (props, val) => {
            debugger;
            props.change("east_length_text", Object(_common_common_func__WEBPACK_IMPORTED_MODULE_15__["reformatNumLetters"])(Object(number_to_arabic_words_dist_index_node_js__WEBPACK_IMPORTED_MODULE_14__["toArabicWord"])(val), "متر"));
          }
        },
        east_length_text: {
          label: "طول الحد الشرقي بالأحرف",
          value: 0,
          required: true,
          disabled: true
        },
        east_desc: {
          label: "وصف الحد الشرقي",
          value: "",
          required: true
        },
        west_length: {
          label: "طول الحد الغربي",
          value: 0,
          required: true,
          field: "inputNumber",
          onClick: (props, val) => {
            debugger;
            props.change("west_length_text", Object(_common_common_func__WEBPACK_IMPORTED_MODULE_15__["reformatNumLetters"])(Object(number_to_arabic_words_dist_index_node_js__WEBPACK_IMPORTED_MODULE_14__["toArabicWord"])(val), "متر"));
          }
        },
        west_length_text: {
          label: "طول الحد الغربي بالأحرف",
          value: 0,
          required: true,
          disabled: true
        },
        west_desc: {
          label: "وصف الحد الغربي",
          value: "",
          required: true
        }
      }
    };
    this.parcelShatfa = {
      label: "الشطفات",
      fields: {
        SHATFA_NORTH_EAST_DIRECTION: {
          label: "مساحة الشطفة في إتجاة (شمال / شرق) ",
          placeholder: " من فضلك ادخل مساحة الشطفة في إتجاة (شمال / شرق) ",
          field: "inputNumber",
          name: "SHATFA_NORTH_EAST_DIRECTION",
          required: false
        },
        SHATFA_NORTH_WEST_DIRECTION: {
          label: "مساحة الشطفة في إتجاة (شمال / غرب) ",
          placeholder: "من فضلك ادخل مساحة الشطفة في إتجاة (شمال / غرب)",
          field: "inputNumber",
          name: "SHATFA_NORTH_WEST_DIRECTION",
          required: false
        },
        SHATFA_SOUTH_EAST_DIRECTION: {
          label: "مساحة الشطفة في إتجاة (جنوب / شرق) ",
          placeholder: "من فضلك ادخل مساحة الشطفة في إتجاة (جنوب / شرق)",
          field: "inputNumber",
          name: "SHATFA_SOUTH_EAST_DIRECTION",
          required: false
        },
        SHATFA_SOUTH_WEST_DIRECTION: {
          label: "مساحة الشطفة في إتجاة (جنوب / غرب) ",
          placeholder: "من فضلك ادخل مساحة الشطفة في إتجاة (جنوب / غرب)",
          field: "inputNumber",
          name: "SHATFA_SOUTH_WEST_DIRECTION",
          required: false
        }
      }
    };
    this.parcelElectric = {
      label: "مساحة غرفة الكهرباء",
      // fields: {
      //   electric_room_area: {
      //     label: "مساحة غرفة الكهرباء",
      //     placeholder: "من فضلك ادخل مساحة غرفة الكهرباء",
      //     field: "inputNumber",
      //     name: "electric_room_area",
      //     required: false,
      //   },
      //   electric_room_place: {
      //     label: "مكان غرفة الكهرباء",
      //     placeholder: "من فضلك ادخل مكان غرفة الكهرباء",
      //     field: "select",
      //     init: (props) => {
      //       props.setData([
      //         { label: "(شمال / شرق)", value: "(شمال / شرق)" },
      //         { label: "(شمال / غرب)", value: "(شمال / غرب)" },
      //         { label: "(جنوب / شرق)", value: "(جنوب / شرق)" },
      //         { label: "(جنوب / غرب)", value: "(جنوب / غرب)" },
      //       ])
      //     },
      //     name: "electric_room_place",
      //     required: false,
      //     label_key: "label",
      //     value_key: "value",
      //   },
      // },
      fields: {
        ELEC_NORTH_EAST_DIRECTION: {
          label: "مساحة غرفة الكهرباء في إتجاة (شمال / شرق) ",
          placeholder: " من فضلك ادخل مساحة غرفة الكهرباء في إتجاة (شمال / شرق) ",
          field: "inputNumber",
          name: "ELEC_NORTH_EAST_DIRECTION",
          required: false
        },
        ELEC_NORTH_WEST_DIRECTION: {
          label: "مساحة غرفة الكهرباء في إتجاة (شمال / غرب) ",
          placeholder: "من فضلك ادخل مساحة غرفة الكهرباء في إتجاة (شمال / غرب)",
          field: "inputNumber",
          name: "ELEC_NORTH_WEST_DIRECTION",
          required: false
        },
        ELEC_SOUTH_EAST_DIRECTION: {
          label: "مساحة غرفة الكهرباء في إتجاة (جنوب / شرق) ",
          placeholder: "من فضلك ادخل مساحة غرفة الكهرباء في إتجاة (جنوب / شرق)",
          field: "inputNumber",
          name: "ELEC_SOUTH_EAST_DIRECTION",
          required: false
        },
        ELEC_SOUTH_WEST_DIRECTION: {
          label: "مساحة غرفة الكهرباء في إتجاة (جنوب / غرب) ",
          placeholder: "من فضلك ادخل مساحة غرفة الكهرباء في إتجاة (جنوب / غرب)",
          field: "inputNumber",
          name: "ELEC_SOUTH_WEST_DIRECTION",
          required: false
        }
      }
    };
    let serviceParcel;
    const _values = Object(_main_helpers_functions_filters__WEBPACK_IMPORTED_MODULE_19__["default"])({
      key: "FormValues",
      form: "stepForm"
    });
    console.log(_values);
    //;
    // if (values.landData?.landData_type == 2) {
    //   //;
    serviceParcel = (_props$input = props.input) === null || _props$input === void 0 ? void 0 : (_props$input$value = _props$input.value) === null || _props$input$value === void 0 ? void 0 : (_props$input$value$pa = _props$input$value.parcels) === null || _props$input$value$pa === void 0 ? void 0 : _props$input$value$pa.find(parcel => {
      var _parcel$munval, _props$input$value2, _props$input$value2$t, _parcel$planeval, _props$input$value3, _props$input$value3$t, _parcel$subNameval, _props$input$value4, _props$input$value4$t, _parcel$blockval, _props$input$value5, _props$input$value5$t;
      return ((_parcel$munval = parcel.munval) === null || _parcel$munval === void 0 ? void 0 : _parcel$munval.code) == ((_props$input$value2 = props.input.value) === null || _props$input$value2 === void 0 ? void 0 : (_props$input$value2$t = _props$input$value2.temp) === null || _props$input$value2$t === void 0 ? void 0 : _props$input$value2$t.mun) && ((_parcel$planeval = parcel.planeval) === null || _parcel$planeval === void 0 ? void 0 : _parcel$planeval.code) == ((_props$input$value3 = props.input.value) === null || _props$input$value3 === void 0 ? void 0 : (_props$input$value3$t = _props$input$value3.temp) === null || _props$input$value3$t === void 0 ? void 0 : _props$input$value3$t.planeval) && ((_parcel$subNameval = parcel.subNameval) === null || _parcel$subNameval === void 0 ? void 0 : _parcel$subNameval.code) == ((_props$input$value4 = props.input.value) === null || _props$input$value4 === void 0 ? void 0 : (_props$input$value4$t = _props$input$value4.temp) === null || _props$input$value4$t === void 0 ? void 0 : _props$input$value4$t.subname) && ((_parcel$blockval = parcel.blockval) === null || _parcel$blockval === void 0 ? void 0 : _parcel$blockval.code) == ((_props$input$value5 = props.input.value) === null || _props$input$value5 === void 0 ? void 0 : (_props$input$value5$t = _props$input$value5.temp) === null || _props$input$value5$t === void 0 ? void 0 : _props$input$value5$t.block);
    });
    //}

    (_props$input2 = props.input) === null || _props$input2 === void 0 ? void 0 : (_props$input2$value = _props$input2.value) === null || _props$input2$value === void 0 ? void 0 : (_props$input2$value$p = _props$input2$value.parcels) === null || _props$input2$value$p === void 0 ? void 0 : _props$input2$value$p.forEach(r => {
      if (r.selectedLands.length) {
        r.selectedLands.forEach(d => {
          d.attributes.PARCEL_AREA_TEXT = Object(_common_common_func__WEBPACK_IMPORTED_MODULE_15__["reformatNumLetters"])(Object(number_to_arabic_words_dist_index_node_js__WEBPACK_IMPORTED_MODULE_14__["toArabicWord"])((+d.attributes.PARCEL_AREA).toFixed(2)), "متر مربع");
        });
      }
    });
    this.state = {
      whereClause: `USING_SYMBOL = 'خ'`,
      mapLoaded: false,
      munval: ((_serviceParcel = serviceParcel) === null || _serviceParcel === void 0 ? void 0 : (_serviceParcel$munval = _serviceParcel.munval) === null || _serviceParcel$munval === void 0 ? void 0 : _serviceParcel$munval.code) || ((_props$input$value6 = props.input.value) === null || _props$input$value6 === void 0 ? void 0 : (_props$input$value6$t = _props$input$value6.temp) === null || _props$input$value6$t === void 0 ? void 0 : _props$input$value6$t.mun) || undefined,
      planeval: ((_serviceParcel2 = serviceParcel) === null || _serviceParcel2 === void 0 ? void 0 : (_serviceParcel2$plane = _serviceParcel2.planeval) === null || _serviceParcel2$plane === void 0 ? void 0 : _serviceParcel2$plane.code) || ((_props$input$value7 = props.input.value) === null || _props$input$value7 === void 0 ? void 0 : (_props$input$value7$t = _props$input$value7.temp) === null || _props$input$value7$t === void 0 ? void 0 : _props$input$value7$t.planeval) || undefined,
      plan_no: ((_serviceParcel3 = serviceParcel) === null || _serviceParcel3 === void 0 ? void 0 : (_serviceParcel3$plane = _serviceParcel3.planeval) === null || _serviceParcel3$plane === void 0 ? void 0 : _serviceParcel3$plane.name) || ((_props$input$value8 = props.input.value) === null || _props$input$value8 === void 0 ? void 0 : (_props$input$value8$t = _props$input$value8.temp) === null || _props$input$value8$t === void 0 ? void 0 : _props$input$value8$t.plan) || undefined,
      subTypeval: ((_serviceParcel4 = serviceParcel) === null || _serviceParcel4 === void 0 ? void 0 : (_serviceParcel4$subTy = _serviceParcel4.subTypeval) === null || _serviceParcel4$subTy === void 0 ? void 0 : _serviceParcel4$subTy.code) || ((_props$input$value9 = props.input.value) === null || _props$input$value9 === void 0 ? void 0 : (_props$input$value9$t = _props$input$value9.temp) === null || _props$input$value9$t === void 0 ? void 0 : _props$input$value9$t.subtype) || undefined,
      subType_name: ((_serviceParcel5 = serviceParcel) === null || _serviceParcel5 === void 0 ? void 0 : (_serviceParcel5$subTy = _serviceParcel5.subTypeval) === null || _serviceParcel5$subTy === void 0 ? void 0 : _serviceParcel5$subTy.name) || ((_props$input$value10 = props.input.value) === null || _props$input$value10 === void 0 ? void 0 : (_props$input$value10$ = _props$input$value10.temp) === null || _props$input$value10$ === void 0 ? void 0 : _props$input$value10$.subtype) || undefined,
      subNameval: ((_serviceParcel6 = serviceParcel) === null || _serviceParcel6 === void 0 ? void 0 : (_serviceParcel6$subNa = _serviceParcel6.subNameval) === null || _serviceParcel6$subNa === void 0 ? void 0 : _serviceParcel6$subNa.code) || ((_props$input$value11 = props.input.value) === null || _props$input$value11 === void 0 ? void 0 : (_props$input$value11$ = _props$input$value11.temp) === null || _props$input$value11$ === void 0 ? void 0 : _props$input$value11$.subname) || undefined,
      subName_name: ((_serviceParcel7 = serviceParcel) === null || _serviceParcel7 === void 0 ? void 0 : (_serviceParcel7$subNa = _serviceParcel7.subNameval) === null || _serviceParcel7$subNa === void 0 ? void 0 : _serviceParcel7$subNa.name) || ((_props$input$value12 = props.input.value) === null || _props$input$value12 === void 0 ? void 0 : (_props$input$value12$ = _props$input$value12.temp) === null || _props$input$value12$ === void 0 ? void 0 : _props$input$value12$.subname) || undefined,
      blockval: ((_serviceParcel8 = serviceParcel) === null || _serviceParcel8 === void 0 ? void 0 : (_serviceParcel8$block = _serviceParcel8.blockval) === null || _serviceParcel8$block === void 0 ? void 0 : _serviceParcel8$block.code) || ((_props$input$value13 = props.input.value) === null || _props$input$value13 === void 0 ? void 0 : (_props$input$value13$ = _props$input$value13.temp) === null || _props$input$value13$ === void 0 ? void 0 : _props$input$value13$.block) || undefined,
      block_no: ((_serviceParcel9 = serviceParcel) === null || _serviceParcel9 === void 0 ? void 0 : (_serviceParcel9$block = _serviceParcel9.blockval) === null || _serviceParcel9$block === void 0 ? void 0 : _serviceParcel9$block.name) || ((_props$input$value14 = props.input.value) === null || _props$input$value14 === void 0 ? void 0 : (_props$input$value14$ = _props$input$value14.temp) === null || _props$input$value14$ === void 0 ? void 0 : _props$input$value14$.block) || undefined,
      serviceData: ((_props$input3 = props.input) === null || _props$input3 === void 0 ? void 0 : (_props$input3$value = _props$input3.value) === null || _props$input3$value === void 0 ? void 0 : _props$input3$value.parcels) || [],
      parcelval: ((_props$input$value15 = props.input.value) === null || _props$input$value15 === void 0 ? void 0 : (_props$input$value15$ = _props$input$value15.temp) === null || _props$input$value15$ === void 0 ? void 0 : _props$input$value15$.parcel) || undefined,
      blockNum: ((_serviceParcel10 = serviceParcel) === null || _serviceParcel10 === void 0 ? void 0 : _serviceParcel10.blockNum) || [],
      subDivNames: ((_serviceParcel11 = serviceParcel) === null || _serviceParcel11 === void 0 ? void 0 : _serviceParcel11.subDivNames) || [],
      subDivType: ((_serviceParcel12 = serviceParcel) === null || _serviceParcel12 === void 0 ? void 0 : _serviceParcel12.subDivType) || [],
      parcelNum: ((_serviceParcel13 = serviceParcel) === null || _serviceParcel13 === void 0 ? void 0 : _serviceParcel13.parcelNum) || [],
      MunicipalityNames: [],
      PlanNum: ((_serviceParcel14 = serviceParcel) === null || _serviceParcel14 === void 0 ? void 0 : _serviceParcel14.PlanNum) || [],
      parcelId: null,
      mapExtend: null,
      parcelSearch: null,
      poly: null,
      landsData: {},
      noOfParcels: serviceParcel && serviceParcel.landData_type == 2 && serviceParcel.noOfParcels || 0
    };
  }
  convertToArabic(num) {
    if (num) {
      var id = ["۰", "۱", "۲", "۳", "٤", "٥", "٦", "۷", "۸", "۹"];
      return num.replace(/[0-9]/g, function (w) {
        return id[+w];
      });
    } else {
      return "";
    }
  }
  replaceAll(str, find, replace) {
    return str.replace(new RegExp(find, "g"), replace);
  }
  componentDidUpdate() {
    const {
      input,
      mainObject,
      currentModule: {
        id
      }
    } = this.props;
    if (input.value.isReset) {
      input.value.isReset = false;
      this.resetFields();
    }
  }
  componentDidMount() {
    const {
      currentModule: {
        id
      }
    } = this.props;
    if (window.isAkarApp) {
      console.log("window", window);
      this.parcel_fields = ["PARCEL_PLAN_NO", "PARCEL_AREA", "PARCEL_AREA_TEXT", "PARCEL_BLOCK_NO", "DISTRICT_NAME", "SUBDIVISION_TYPE", "SUBDIVISION_DESCRIPTION", "USING_SYMBOL", "DETAILED_LANDUSE", "SRVC_SUBTYPE"];
    }
    Object(_common_common_func__WEBPACK_IMPORTED_MODULE_15__["getInfo"])().then(res => {
      this.LayerID = res;
      Object(_common_filters_objects__WEBPACK_IMPORTED_MODULE_16__["getParcels"])(this, null, "", {
        returnDistinctValues: true
      }, ["MUNICIPALITY_NAME"]).then(features => {
        Object(_common_common_func__WEBPACK_IMPORTED_MODULE_15__["getFeatureDomainName"])(features, this.LayerID.Landbase_Parcel).then(features => {
          debugger;
          let fcs = features.filter(r => r.attributes.MUNICIPALITY_NAME)
          // .reduce((a, b) => {
          //   if (!a.find(r => r.attributes.MUNICIPALITY_NAME_Code == b.attributes.MUNICIPALITY_NAME_Code)) {
          //     a.push(b);
          //   }
          //   return a;
          // }, [])
          .map(r => {
            return {
              code: r.attributes.MUNICIPALITY_NAME_Code,
              name: r.attributes.MUNICIPALITY_NAME,
              ...r
            };
          });
          this.setState({
            MunicipalityNames: [2188].indexOf(this.props.currentModule.record.workflow_id) == -1 ? fcs : fcs.filter(codeValue => {
              if (this.props.currentModule.record.workflow_id == 2188 && (codeValue === null || codeValue === void 0 ? void 0 : codeValue.code) == 10506) {
                return codeValue;
              }
            })
          }, () => {
            this.resetFilters();
          });
        });
      });
    });
  }
  enableEdit(name, mainIndex, i) {
    this.setState({
      [name + "_isEdit_" + mainIndex + "_" + i]: true
    });
  }
  showEditBtn(name, value) {
    if (name == "USING_SYMBOL") {
      return value == null;
    } else {
      const {
        currentModule: {
          id
        }
      } = this.props;
      let editables = ["PARCEL_BLOCK_NO", "DISTRICT_NAME", "SUBDIVISION_TYPE", "SUBDIVISION_DESCRIPTION", "Natural_Area", "DETAILED_LANDUSE"];
      if (id == 92) {
        editables = ["PARCEL_AREA", "PARCEL_AREA_TEXT", ...editables];
      }
      return editables.indexOf(name) > -1;
    }
  }
  saveEdit(id, name, mainIndex, i) {
    let serviceDataItem = this.state.serviceData[mainIndex];
    let selectedLands = (serviceDataItem === null || serviceDataItem === void 0 ? void 0 : serviceDataItem.selectedLands) || [];
    let findParcel = selectedLands[i];
    findParcel.attributes[name] = this["edit_" + name + "_" + mainIndex + "_" + i] || findParcel.attributes[name];
    let selectLand = selectedLands.find(p => {
      var _p$attributes;
      return [p === null || p === void 0 ? void 0 : p.id, p === null || p === void 0 ? void 0 : (_p$attributes = p.attributes) === null || _p$attributes === void 0 ? void 0 : _p$attributes.PARCEL_SPATIAL_ID].indexOf(id) != -1;
    });
    selectLand.attributes[name] = this["edit_" + name + "_" + mainIndex + "_" + i] || selectLand.attributes[name];
    this.state.landsData = {
      ...this.props.input.value,
      parcels: [...this.state.serviceData]
    };
    this.props.input.onChange({
      ...this.state.landsData
    });
    this.setState({
      [name + "_isEdit_" + mainIndex + "_" + i]: false,
      serviceData: [...this.state.serviceData]
    });
  }
  render() {
    var _values$landData7, _values$landData8, _this$state$Municipal3, _values$landData9, _values$landData10, _values$landData11, _this$state$blockNum, _this$state$blockNum$3, _this$state$blockNum$4, _values$landData12, _values$landData13, _values$landData14, _values$landData15;
    const {
      parcelData,
      parcelElectricData,
      parcelShatfaData,
      serviceData,
      MunicipalityNames,
      subDivType,
      subDivNames,
      subNameval,
      blockNum,
      blockval,
      PlanNum,
      mapLoaded,
      planeval,
      parcelSearch,
      parcelNum,
      parcelval,
      noOfParcels
    } = this.state;
    let serviceDataItem = (serviceData === null || serviceData === void 0 ? void 0 : serviceData.find(item => {
      var _item$munval8, _item$planeval8, _item$subNameval8, _item$blockval8;
      return ((_item$munval8 = item.munval) === null || _item$munval8 === void 0 ? void 0 : _item$munval8.code) == this.state.munval && ((_item$planeval8 = item.planeval) === null || _item$planeval8 === void 0 ? void 0 : _item$planeval8.code) == this.state.planeval && ((_item$subNameval8 = item.subNameval) === null || _item$subNameval8 === void 0 ? void 0 : _item$subNameval8.code) == this.state.subNameval && ((_item$blockval8 = item.blockval) === null || _item$blockval8 === void 0 ? void 0 : _item$blockval8.code) == this.state.blockval;
    })) || {};
    const {
      fullMapWidth,
      currentModule: {
        id
      },
      t
    } = this.props;
    const values = Object(_main_helpers_functions_filters__WEBPACK_IMPORTED_MODULE_19__["default"])({
      key: "FormValues",
      form: "stepForm"
    });
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("div", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(react_sticky__WEBPACK_IMPORTED_MODULE_28__["StickyContainer"], {
      style: {
        direction: "ltr"
      }
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(react_sticky__WEBPACK_IMPORTED_MODULE_28__["Sticky"], {
      bottomOffset: 80
    }, ({
      style
    }) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(_MapBtnsComponent__WEBPACK_IMPORTED_MODULE_23__["default"], _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_8___default()({
      style: style
    }, this.props)))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("div", {
      className: !fullMapWidth && id != 92 ? "content-section implementation" : ""
    }, mapLoaded && id != 92 && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("div", {
      style: {
        padding: "10px"
      }
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(antd_lib_select__WEBPACK_IMPORTED_MODULE_11___default.a, {
      getPopupContainer: trigger => trigger.parentNode,
      autoFocus: true,
      onChange: val => {
        Object(_common_filters_objects__WEBPACK_IMPORTED_MODULE_16__["onMunChange"])(this, val);
      },
      showSearch: true,
      value: this.state.munval,
      placeholder: "\u0627\u062E\u062A\u0631 \u0627\u0633\u0645 \u0627\u0644\u0628\u0644\u062F\u064A\u0647",
      disabled: !(values !== null && values !== void 0 && (_values$landData7 = values.landData) !== null && _values$landData7 !== void 0 && _values$landData7.landData_type) || (values === null || values === void 0 ? void 0 : (_values$landData8 = values.landData) === null || _values$landData8 === void 0 ? void 0 : _values$landData8.landData_type) && this.state.munval || !((_this$state$Municipal3 = this.state.MunicipalityNames) !== null && _this$state$Municipal3 !== void 0 && _this$state$Municipal3.length),
      optionFilterProp: "children",
      filterOption: (input, option) => {
        if (option.props.children) {
          return option.props.children.find(i => {
            return i && i.indexOf(input.trim().toLowerCase()) >= 0;
          }) != null;
        } else {
          return false;
        }
      }
    }, MunicipalityNames === null || MunicipalityNames === void 0 ? void 0 : MunicipalityNames.map(e => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(Option, {
      key: e.code,
      value: e.code
    }, e.name, " "))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(antd_lib_select__WEBPACK_IMPORTED_MODULE_11___default.a, {
      getPopupContainer: trigger => trigger.parentNode,
      onChange: val => {
        Object(_common_filters_objects__WEBPACK_IMPORTED_MODULE_16__["onPlaneChange"])(this, val);
      },
      showSearch: true,
      autoFocus: true,
      disabled: !PlanNum.length,
      optionFilterProp: "children",
      filterOption: (input, option) => {
        if (option.props.children) {
          return Object(_common_common_func__WEBPACK_IMPORTED_MODULE_15__["convertToEnglish"])(option.props.children).replaceAll(" ", "").indexOf(input.replaceAll(" ", "")) != -1;
        } else {
          return false;
        }
      },
      value: planeval,
      placeholder: "\u0631\u0642\u0645 \u0627\u0644\u0645\u062E\u0637\u0637",
      notFoundContent: "not found"
    }, id == 91 && serviceData.length && serviceData.find(item => {
      var _item$planeval9;
      return (item === null || item === void 0 ? void 0 : (_item$planeval9 = item.planeval) === null || _item$planeval9 === void 0 ? void 0 : _item$planeval9.code) != undefined;
    }) != undefined && PlanNum
    //.slice(0, 100)
    .map((d, i) => {
      return serviceData.find(item => {
        var _item$planeval10;
        return (item === null || item === void 0 ? void 0 : (_item$planeval10 = item.planeval) === null || _item$planeval10 === void 0 ? void 0 : _item$planeval10.code) == d.i;
      }) != undefined && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(Option, {
        key: d.attributes.PLAN_SPATIAL_ID,
        value: d.i
      }, Object(_common_common_func__WEBPACK_IMPORTED_MODULE_15__["localizeNumber"])(d.attributes.PLAN_NO));
    }) || PlanNum.map((d, i) => {
      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(Option, {
        key: d.attributes.PLAN_SPATIAL_ID,
        value: d.i
      }, Object(_common_common_func__WEBPACK_IMPORTED_MODULE_15__["localizeNumber"])(d.attributes.PLAN_NO));
    })), !blockval && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_12___default.a.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(antd_lib_select__WEBPACK_IMPORTED_MODULE_11___default.a, {
      getPopupContainer: trigger => trigger.parentNode,
      autoFocus: true,
      onChange: val => {
        Object(_common_filters_objects__WEBPACK_IMPORTED_MODULE_16__["onSubTypeChange"])(this, val);
      },
      showSearch: true,
      disabled: [90, 91].indexOf(id) == -1 || !(values !== null && values !== void 0 && (_values$landData9 = values.landData) !== null && _values$landData9 !== void 0 && _values$landData9.landData_type) || !subDivType.length,
      value: this.state.subTypeval,
      placeholder: "نوع التقسيم",
      optionFilterProp: "children",
      filterOption: (input, option) => {
        if (option.props.children) {
          var _option$props$childre;
          return ((_option$props$childre = option.props.children) === null || _option$props$childre === void 0 ? void 0 : _option$props$childre.indexOf(Object(_common_common_func__WEBPACK_IMPORTED_MODULE_15__["convertToArabic"])(input))) != -1;
        } else {
          return false;
        }
      }
    }, subDivType
    //.slice(0, 100)
    .map((e, i) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(Option, {
      key: i,
      value: e.code
    }, " ", e.name, " "))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(antd_lib_select__WEBPACK_IMPORTED_MODULE_11___default.a, {
      getPopupContainer: trigger => trigger.parentNode,
      autoFocus: true,
      onChange: val => {
        Object(_common_filters_objects__WEBPACK_IMPORTED_MODULE_16__["onSubNameChange"])(this, val);
      },
      showSearch: true,
      disabled: [90, 91].indexOf(id) == -1 || !(values !== null && values !== void 0 && (_values$landData10 = values.landData) !== null && _values$landData10 !== void 0 && _values$landData10.landData_type) || !subDivNames.length,
      placeholder: "\u0627\u0633\u0645 \u0627\u0644\u062A\u0642\u0633\u064A\u0645",
      value: subNameval,
      optionFilterProp: "children",
      filterOption: (input, option) => {
        var _option$props$childre2;
        return ((_option$props$childre2 = option.props.children) === null || _option$props$childre2 === void 0 ? void 0 : _option$props$childre2.indexOf(Object(_common_common_func__WEBPACK_IMPORTED_MODULE_15__["convertToArabic"])(input))) != -1;
      }
    }, subDivNames
    //.slice(0, 100)
    .map((e, i) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(Option, {
      key: e.attributes.SUBDIVISION_SPATIAL_ID,
      value: e.i
    }, e.attributes.SUBDIVISION_DESCRIPTION)))), !this.state.subTypeval && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(antd_lib_select__WEBPACK_IMPORTED_MODULE_11___default.a, {
      getPopupContainer: trigger => trigger.parentNode,
      autoFocus: true,
      onChange: val => {
        Object(_common_filters_objects__WEBPACK_IMPORTED_MODULE_16__["onBlockChange"])(this, val);
      },
      showSearch: true,
      disabled: [90, 91].indexOf(id) == -1 || !(values !== null && values !== void 0 && (_values$landData11 = values.landData) !== null && _values$landData11 !== void 0 && _values$landData11.landData_type) || !blockNum.length,
      value: (_this$state$blockNum = this.state.blockNum) === null || _this$state$blockNum === void 0 ? void 0 : (_this$state$blockNum$3 = _this$state$blockNum.filter(m => m.attributes.BLOCK_SPATIAL_ID == blockval)) === null || _this$state$blockNum$3 === void 0 ? void 0 : (_this$state$blockNum$4 = _this$state$blockNum$3[0]) === null || _this$state$blockNum$4 === void 0 ? void 0 : _this$state$blockNum$4.i,
      placeholder: "\u0631\u0642\u0645 \u0627\u0644\u0628\u0644\u0643",
      optionFilterProp: "children",
      filterOption: (input, option) => {
        var _option$props$childre3;
        return ((_option$props$childre3 = option.props.children) === null || _option$props$childre3 === void 0 ? void 0 : _option$props$childre3.indexOf(Object(_common_common_func__WEBPACK_IMPORTED_MODULE_15__["convertToArabic"])(input))) != -1;
      }
    }, blockNum
    //.slice(0, 100)
    .map((e, i) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(Option, {
      key: e.attributes.BLOCK_SPATIAL_ID,
      value: e.i
    }, Object(_common_common_func__WEBPACK_IMPORTED_MODULE_15__["localizeNumber"])(e.attributes.BLOCK_NO)))), (values === null || values === void 0 ? void 0 : (_values$landData12 = values.landData) === null || _values$landData12 === void 0 ? void 0 : _values$landData12.landData_type) == 2 && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_12___default.a.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(antd_lib_input_number__WEBPACK_IMPORTED_MODULE_7___default.a, {
      type: "number",
      placeholder: "\u0639\u062F\u062F \u0642\u0637\u0639 \u0627\u0644\u0623\u0631\u0627\u0636\u064A",
      value: noOfParcels,
      onBlur: this.setNoOfParcels.bind(this),
      disabled: id == 91 && (values === null || values === void 0 ? void 0 : (_values$landData13 = values.landData) === null || _values$landData13 === void 0 ? void 0 : _values$landData13.landData_type) == 2 && noOfParcels != 0 && noOfParcels != "" && noOfParcels != undefined || !this.state.munval,
      style: {
        minWidth: "350px",
        marginTop: "4px",
        height: "40px"
      }
    }), id == 90 && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(antd_lib_button__WEBPACK_IMPORTED_MODULE_5___default.a, {
      className: "add-gis",
      disabled: !noOfParcels,
      onClick: this.assignNoOfParcels.bind(this)
    }, "\u0625\u0636\u0627\u0641\u0629 \u0627\u0644\u0623\u0631\u0636")), (id == 91 || (values === null || values === void 0 ? void 0 : (_values$landData14 = values.landData) === null || _values$landData14 === void 0 ? void 0 : _values$landData14.landData_type) == 1) && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_12___default.a.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(antd_lib_select__WEBPACK_IMPORTED_MODULE_11___default.a, {
      getPopupContainer: trigger => trigger.parentNode,
      autoFocus: true,
      onChange: val => {
        this.setState({
          isOnSearch: false
        }, () => {
          Object(_common_filters_objects__WEBPACK_IMPORTED_MODULE_16__["onLandParcelChange"])(this, val);
        });
      },
      showSearch: true,
      disabled: !this.state.isOnSearch && parcelNum && !parcelNum.filter(parcel => parcel.attributes.PARCEL_PLAN_NO != null).length || (values === null || values === void 0 ? void 0 : (_values$landData15 = values.landData) === null || _values$landData15 === void 0 ? void 0 : _values$landData15.landData_type) == 1 && this.props.currentModule.id != 90
      // onSearch={(e) => {
      //   this.setState(
      //     { parcelSearch: e, isOnSearch: true },
      //     () => {
      //       onSearch(this, e);
      //     }
      //   );
      // }}
      ,

      filterOption: (input, option) => {
        if (option.props.children) {
          var _option$props$childre4;
          return ((_option$props$childre4 = option.props.children) === null || _option$props$childre4 === void 0 ? void 0 : _option$props$childre4.indexOf(Object(_common_common_func__WEBPACK_IMPORTED_MODULE_15__["convertToArabic"])(input))) != -1;
        } else {
          return false;
        }
      },
      value: parcelval,
      placeholder: "\u0631\u0642\u0645 \u0642\u0637\u0639\u0629 \u0627\u0644\u0627\u0631\u0636"
    }, parcelNum && parcelNum.filter((e, i) => {
      if (parcelSearch) {
        var _serviceDataItem$sele;
        if (serviceDataItem !== null && serviceDataItem !== void 0 && (_serviceDataItem$sele = serviceDataItem.selectedLands) !== null && _serviceDataItem$sele !== void 0 && _serviceDataItem$sele.length) {
          var _serviceDataItem$sele2;
          return !(serviceDataItem !== null && serviceDataItem !== void 0 && (_serviceDataItem$sele2 = serviceDataItem.selectedLands) !== null && _serviceDataItem$sele2 !== void 0 && _serviceDataItem$sele2.find(tt => tt.attributes.PARCEL_SPATIAL_ID == e.attributes.PARCEL_SPATIAL_ID));
        } else {
          return e.attributes.PARCEL_PLAN_NO && e.attributes.PARCEL_PLAN_NO.toLowerCase().indexOf(parcelSearch.toLowerCase()) >= 0;
        }
      } else {
        var _serviceDataItem$sele3;
        if (serviceDataItem !== null && serviceDataItem !== void 0 && (_serviceDataItem$sele3 = serviceDataItem.selectedLands) !== null && _serviceDataItem$sele3 !== void 0 && _serviceDataItem$sele3.length) {
          var _serviceDataItem$sele4;
          return !(serviceDataItem !== null && serviceDataItem !== void 0 && (_serviceDataItem$sele4 = serviceDataItem.selectedLands) !== null && _serviceDataItem$sele4 !== void 0 && _serviceDataItem$sele4.find(tt => tt.attributes.PARCEL_SPATIAL_ID == e.attributes.PARCEL_SPATIAL_ID)) && e.attributes.PARCEL_PLAN_NO;
        } else {
          return e.attributes.PARCEL_PLAN_NO;
        }
      }
    }).slice(0, 100).map((e, i) => {
      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(Option, {
        onMouseEnter: this.LandHoverOn,
        onMouseLeave: this.LandHoverOff,
        key: e.attributes.PARCEL_SPATIAL_ID,
        value: e.i
      }, Object(_common_common_func__WEBPACK_IMPORTED_MODULE_15__["localizeNumber"])(e.attributes.PARCEL_PLAN_NO));
    })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(antd_lib_button__WEBPACK_IMPORTED_MODULE_5___default.a, {
      className: "add-gis",
      disabled: this.state.parcelId === null,
      onClick: this.OnParcelSelect
    }, "\u0625\u0636\u0627\u0641\u0629 \u0627\u0644\u0623\u0631\u0636"))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(_MapComponent_MapComponent__WEBPACK_IMPORTED_MODULE_22__["default"], _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_8___default()({
      mapload: this.mapload.bind(this)
    }, this.props))), mapLoaded && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("div", {
      style: {
        gridColumn: "1/3"
      }
    }, serviceData && serviceData.length > 0 && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("div", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("h1", {
      className: "titleSelectedParcel"
    }, "\u0627\u0644\u0623\u0631\u0627\u0636\u064A \u0627\u0644\u0645\u062E\u062A\u0627\u0631\u0629"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("table", {
      className: "table table-bordered",
      style: {
        marginTop: "1%"
      }
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("tbody", null, serviceData.map((serviceDataItem, mainIndex) => {
      var _serviceDataItem$sele5, _serviceDataItem$munv4, _serviceDataItem$plan5, _serviceDataItem$plan6, _serviceDataItem$subN4, _serviceDataItem$subN5, _serviceDataItem$bloc4, _serviceDataItem$bloc5, _serviceDataItem$sele6, _serviceDataItem$sele7;
      return ((serviceDataItem === null || serviceDataItem === void 0 ? void 0 : serviceDataItem.landData_type) == 1 && (serviceDataItem === null || serviceDataItem === void 0 ? void 0 : (_serviceDataItem$sele5 = serviceDataItem.selectedLands) === null || _serviceDataItem$sele5 === void 0 ? void 0 : _serviceDataItem$sele5.length) > 0 || (serviceDataItem === null || serviceDataItem === void 0 ? void 0 : serviceDataItem.landData_type) == 2) && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_12___default.a.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("tr", {
        key: mainIndex
      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("td", null, "\u0627\u0644\u0628\u0644\u062F\u064A\u0629"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("td", null, serviceDataItem === null || serviceDataItem === void 0 ? void 0 : (_serviceDataItem$munv4 = serviceDataItem.munval) === null || _serviceDataItem$munv4 === void 0 ? void 0 : _serviceDataItem$munv4.name), (serviceDataItem === null || serviceDataItem === void 0 ? void 0 : (_serviceDataItem$plan5 = serviceDataItem.planeval) === null || _serviceDataItem$plan5 === void 0 ? void 0 : _serviceDataItem$plan5.name) && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_12___default.a.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("td", null, "\u0627\u0644\u0645\u062E\u0637\u0637"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("td", null, Object(_common_common_func__WEBPACK_IMPORTED_MODULE_15__["convertToArabic"])(serviceDataItem === null || serviceDataItem === void 0 ? void 0 : (_serviceDataItem$plan6 = serviceDataItem.planeval) === null || _serviceDataItem$plan6 === void 0 ? void 0 : _serviceDataItem$plan6.name))), (serviceDataItem === null || serviceDataItem === void 0 ? void 0 : (_serviceDataItem$subN4 = serviceDataItem.subNameval) === null || _serviceDataItem$subN4 === void 0 ? void 0 : _serviceDataItem$subN4.name) && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_12___default.a.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("td", null, "\u0627\u0644\u062A\u0642\u0633\u064A\u0645"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("td", null, Object(_common_common_func__WEBPACK_IMPORTED_MODULE_15__["convertToArabic"])(serviceDataItem === null || serviceDataItem === void 0 ? void 0 : (_serviceDataItem$subN5 = serviceDataItem.subNameval) === null || _serviceDataItem$subN5 === void 0 ? void 0 : _serviceDataItem$subN5.name))), (serviceDataItem === null || serviceDataItem === void 0 ? void 0 : (_serviceDataItem$bloc4 = serviceDataItem.blockval) === null || _serviceDataItem$bloc4 === void 0 ? void 0 : _serviceDataItem$bloc4.name) && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_12___default.a.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("td", null, "\u0627\u0644\u0628\u0644\u0643"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("td", null, Object(_common_common_func__WEBPACK_IMPORTED_MODULE_15__["convertToArabic"])(serviceDataItem === null || serviceDataItem === void 0 ? void 0 : (_serviceDataItem$bloc5 = serviceDataItem.blockval) === null || _serviceDataItem$bloc5 === void 0 ? void 0 : _serviceDataItem$bloc5.name))), serviceDataItem.noOfParcels && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_12___default.a.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("td", null, "\u0639\u062F\u062F \u0627\u0644\u0623\u0631\u0627\u0636\u064A"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("td", null, Object(_common_common_func__WEBPACK_IMPORTED_MODULE_15__["convertToArabic"])(serviceDataItem.noOfParcels))), serviceDataItem.landData_type == 2 && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("td", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("span", {
        key: mainIndex,
        className: "toolsBtnStyle center",
        style: {
          width: "100%",
          position: "relative",
          display: "flex",
          justifyContent: "center"
        }
      }, serviceDataItem.currentExtent && !(serviceDataItem !== null && serviceDataItem !== void 0 && (_serviceDataItem$sele6 = serviceDataItem.selectedLands) !== null && _serviceDataItem$sele6 !== void 0 && _serviceDataItem$sele6.length) && /*#__PURE__*/
      // <button
      //   className=" btn btn-primary "
      //   onClick={this.zoom.bind(
      //     this,
      //     serviceDataItem.currentExtent,
      //     serviceDataItem
      //   )}
      // >
      //   اختيار
      // </button>
      react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_12___default.a.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(antd_lib_tooltip__WEBPACK_IMPORTED_MODULE_3___default.a, {
        placement: "bottom",
        title: t(`actions:Zoom`)
      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("span", {
        style: {
          cursor: "pointer"
        },
        onClick: this.zoom.bind(this, serviceDataItem.currentExtent, serviceDataItem)
      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_17__["FontAwesomeIcon"], {
        icon: _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_18__["faSearchPlus"],
        size: "1x"
      }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(antd_lib_divider__WEBPACK_IMPORTED_MODULE_1___default.a, {
        type: "vertical"
      })), id != 92 && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_12___default.a.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(antd_lib_tooltip__WEBPACK_IMPORTED_MODULE_3___default.a, {
        placement: "bottom",
        title: t(`actions:Delete`)
      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("span", {
        style: {
          cursor: "pointer"
        },
        onClick: this.remove.bind(this, mainIndex, -1)
      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_17__["FontAwesomeIcon"], {
        icon: _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_18__["faTrash"],
        size: "1x"
      }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(antd_lib_divider__WEBPACK_IMPORTED_MODULE_1___default.a, {
        type: "vertical"
      }))))), (serviceDataItem === null || serviceDataItem === void 0 ? void 0 : (_serviceDataItem$sele7 = serviceDataItem.selectedLands) === null || _serviceDataItem$sele7 === void 0 ? void 0 : _serviceDataItem$sele7.length) > 0 && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("tr", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("td", {
        colSpan: "100%"
      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("table", {
        className: "table table-bordered",
        style: {
          marginTop: "1%"
        }
      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("thead", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("tr", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("th", null, "\u0631\u0642\u0645 \u0627\u0644\u0642\u0637\u0639\u0647"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("th", null, "\u0627\u0644\u0645\u0633\u0627\u062D\u0629 \u0645\u0646 \u0627\u0644\u0635\u0643 \u0645\u0662"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("th", null, "\u0627\u0644\u0645\u0633\u0627\u062D\u0629 \u0628\u0627\u0644\u062D\u0631\u0648\u0641 (\u0645\u0662)"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("th", null, "\u0631\u0642\u0645 \u0627\u0644\u0628\u0644\u0643"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("th", null, "\u0627\u0644\u062D\u064A"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("th", null, "\u0646\u0648\u0639 \u0627\u0644\u062A\u0642\u0633\u064A\u0645"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("th", null, "\u0627\u0633\u0645 \u0627\u0644\u062A\u0642\u0633\u064A\u0645"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("th", null, "\u0627\u0644\u0627\u0633\u062A\u062E\u062F\u0627\u0645 \u0627\u0644\u0631\u0626\u064A\u0633\u064A"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("th", null, "\u0631\u0645\u0632 \u0627\u0644\u0627\u0633\u062A\u062E\u062F\u0627\u0645"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("th", null, "\u0627\u0644\u0625\u0633\u062A\u062E\u062F\u0627\u0645 \u0627\u0644\u062A\u0641\u0635\u064A\u0644\u064A"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("th", null, "\u0627\u0644\u063A\u0631\u0636 \u0645\u0646 \u0627\u0644\u0623\u0631\u0636"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("th", null, " \u062E\u064A\u0627\u0631\u0627\u062A"))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("tbody", null, serviceDataItem.selectedLands.map((e, i) => {
        return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("tr", {
          key: i
        }, this.parcel_fields.map((field, k) => {
          var _e$attributes$field, _e$attributes7;
          return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("td", {
            key: k
          }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("div", null, !this.state[field + "_isEdit_" + mainIndex + "_" + i] ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("span", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("span", null, Object(_common_common_func__WEBPACK_IMPORTED_MODULE_15__["convertToArabic"])(field == "PARCEL_AREA" && ((_e$attributes$field = +((_e$attributes7 = e.attributes) === null || _e$attributes7 === void 0 ? void 0 : _e$attributes7[field])) === null || _e$attributes$field === void 0 ? void 0 : _e$attributes$field.toFixed(2)) || e.attributes[field] || "غير متوفر")), this.showEditBtn(field, e.attributes[field]) && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("span", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("button", {
            className: "btn",
            style: {
              marginRight: "20px"
            },
            onClick: this.enableEdit.bind(this, field, mainIndex, i)
          }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("i", {
            className: "fas fa-edit"
          })))) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("span", {
            style: {
              display: "grid",
              gridTemplateColumns: "1fr auto"
            }
          }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("input", {
            key: i,
            className: "form-control",
            type: "text",
            defaultValue: this["edit_" + field + "_" + mainIndex + "_" + i] || e.attributes[field] || "غير متوفر",
            onChange: this.myChangeHandler.bind(this, field, mainIndex, i, e)
          }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("button", {
            className: "btn",
            style: {
              marginRight: "20px"
            },
            onClick: this.saveEdit.bind(this, e.id, field, mainIndex, i)
          }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("i", {
            className: "fa fa-floppy-o"
          })))));
        }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("td", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("span", {
          key: i,
          className: "toolsBtnStyle center",
          style: {
            width: "100%",
            position: "relative",
            display: "flex",
            justifyContent: "center"
          }
        }, id == 92 && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_12___default.a.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("button", {
          className: "btn follow",
          onClick: this.openPopup.bind(this, mainIndex, i, "parcelData")
        }, "\u062D\u062F\u0648\u062F \u0648 \u0623\u0628\u0639\u0627\u062F \u0627\u0644\u0623\u0631\u0636"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(antd_lib_divider__WEBPACK_IMPORTED_MODULE_1___default.a, {
          type: "vertical"
        }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("button", {
          className: "btn follow",
          style: {
            margin: "0px 5px"
          },
          onClick: this.openPopup.bind(this, mainIndex, i, "parcelShatfa")
        }, "\u0627\u0644\u0634\u0637\u0641\u0627\u062A"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(antd_lib_divider__WEBPACK_IMPORTED_MODULE_1___default.a, {
          type: "vertical"
        }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("button", {
          className: "btn follow",
          style: {
            margin: "0px 5px"
          },
          onClick: this.openPopup.bind(this, mainIndex, i, "parcelElectric")
        }, "\u063A\u0631\u0641\u0629 \u0627\u0644\u0643\u0647\u0631\u0628\u0627\u0621"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(antd_lib_divider__WEBPACK_IMPORTED_MODULE_1___default.a, {
          type: "vertical"
        })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(antd_lib_tooltip__WEBPACK_IMPORTED_MODULE_3___default.a, {
          placement: "bottom",
          title: t(`actions:Zoom`)
        }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("span", {
          style: {
            cursor: "pointer"
          },
          onClick: this.highlight.bind(this, e, serviceDataItem)
        }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_17__["FontAwesomeIcon"], {
          icon: _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_18__["faSearchPlus"],
          size: "1x"
        }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(antd_lib_divider__WEBPACK_IMPORTED_MODULE_1___default.a, {
          type: "vertical"
        }), id != 92 && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_12___default.a.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(antd_lib_tooltip__WEBPACK_IMPORTED_MODULE_3___default.a, {
          placement: "bottom",
          title: t(`actions:Delete`)
        }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("span", {
          style: {
            cursor: "pointer"
          },
          onClick: this.remove.bind(this, mainIndex, i)
        }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_17__["FontAwesomeIcon"], {
          icon: _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_18__["faTrash"],
          size: "1x"
        }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(antd_lib_divider__WEBPACK_IMPORTED_MODULE_1___default.a, {
          type: "vertical"
        })))));
      }))))));
    }))))));
  }
}
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_26__["connect"])(_mapping__WEBPACK_IMPORTED_MODULE_24__["mapStateToProps"], appMapDispatchToProps)(ServiceIdentifyComponent));

/***/ })

}]);
//# sourceMappingURL=75.min.js.map