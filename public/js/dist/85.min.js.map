{"version":3,"file":"85.min.js","sources":["webpack:///./src/app/components/inputs/fields/select/activeSelect.js","webpack:///./src/app/components/inputs/fields/select/switchSelect.js"],"sourcesContent":["import React, { Component, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { postItem } from \"app/helpers/apiMethods\";\r\nimport SelectComponent from \"./select\";\r\nimport MultiSelectComponent from \"./multiSelect\";\r\nexport default function activeSelect({ isMulti, selectProps }) {\r\n  // console.log( mainObject);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        {(isMulti && <MultiSelectComponent {...selectProps} />) || (\r\n          <SelectComponent {...selectProps} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Select } from \"antd\";\r\nimport { fetchAllData } from \"app/helpers/functions\";\r\nimport {withTranslation} from \"react-i18next\";\r\nimport mainInput from \"app/helpers/main/input\";\r\nimport { fetchData } from \"app/helpers/apiMethods\";\r\nimport { connect } from \"react-redux\";\r\nimport { mapStateToProps, mapDispatchToProps } from \"./mapping\";\r\nimport { withRouter } from \"react-router\";\r\nimport { get, isEqual, omit, map, isFunction } from \"lodash\";\r\nimport ActiveSelect from \"./activeSelect\"\r\nconst Option = Select.Option;\r\n\r\nexport class switchSelectComponent extends mainInput {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const {init_data} = props;\r\n\r\n    if (init_data) {\r\n      init_data(props);\r\n    }\r\n    \r\n    // console.log(props.data);\r\n    // console.log(props.input.value)\r\n  }\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    return (\r\n      //!isEqual(nextProps.data, this.props.data) ||\r\n      !isEqual(nextProps.isMulti, this.props.isMulti) ||\r\n     // !isEqual(nextProps.data, this.props.values.waseka_data_select) ||\r\n      !isEqual(nextProps.lang, this.props.lang) ||\r\n      !isEqual(nextProps.forceUpdate, this.props.forceUpdate)\r\n    );\r\n  }\r\n\r\n  render() {\r\n    \r\n    let { isMulti } = this.props;\r\n    // console.log(this.props);\r\n    //label = (isFunction(visible) ?  visible(values, this.props) : visible) ? label : '';\r\n    \r\n    return (\r\n      <div>\r\n        <ActiveSelect isMulti={isMulti} selectProps={this.props} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(withTranslation(\"labels\")(switchSelectComponent))\r\n);\r\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AASA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAGA;AACA;AAEA;;;;A","sourceRoot":""}