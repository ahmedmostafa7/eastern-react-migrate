{"version":3,"file":"161.min.js","sources":["webpack:///./src/app/components/wizard/components/stepContent/sections/sectionTypes/wizardSummery/components/tabsSummary.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { host, filesHost } from \"config\";\r\nimport {\r\n  convertToArabic,\r\n  localizeNumber,\r\n  remove_duplicate,\r\n  checkImage,\r\n  reformatWasekaData,\r\n  copyUser,\r\n} from \"../../../../../../../inputs/fields/identify/Component/common/common_func\";\r\nimport { Checkbox, Collapse } from \"antd\";\r\nconst { Panel } = Collapse;\r\nimport { mapValues, get, isEqual } from \"lodash\";\r\n\r\nimport axios from \"axios\";\r\nimport {withTranslation} from \"react-i18next\";\r\nimport { mapStateToProps, mapDispatchToProps } from \"../mapping\";\r\nimport getModules from \"../modules\";\r\nimport { connect } from \"react-redux\";\r\nimport ViewData from \"../viewData\";\r\nclass tabsSummary extends Component {\r\n  renderView(treeNode) {\r\n\r\n\r\n    return <ViewData {...{ ...this.props, subTreeNode: treeNode }} />;\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps) {\r\n    return (\r\n      !isEqual(\r\n        nextProps?.treeNode?.option?.module_id,\r\n        this.props?.treeNode?.option?.module_id\r\n      ) ||\r\n      !isEqual(\r\n        nextProps?.treeNode?.option?.stepId,\r\n        this.props?.treeNode?.option?.stepId\r\n      )\r\n    );\r\n  }\r\n  render() {\r\n    const {\r\n      treeNode: {\r\n        option: { tabType, data, module_id, stepId, label },\r\n      },\r\n      mainObject,\r\n      t,\r\n    } = this.props;\r\n    //\r\n    let filteredNodes = [];\r\n    let nodes = getModules(mainObject, this.props.currentModule, false, module_id);\r\n    ////\r\n\r\n    let isSummeryExist = false;\r\n    Object.keys(nodes).map((d, k) => {\r\n      if (\r\n        nodes[d][0] &&\r\n        nodes[d][0]?.module_ids &&\r\n        !nodes[d][0]?.isRequestModule &&\r\n        nodes[d][0]?.module_ids?.indexOf(module_id) != -1\r\n        // &&\r\n        // Object.keys(mainObject[d]).filter(objKey => objKey != 'user').length > 0\r\n      ) {\r\n        //\r\n        let label = \"\";\r\n        if (module_id == 92 && nodes[d][0]?.label == \"submissionType\") {\r\n          label = \"ارفاق الكروكي المساحي\";\r\n        } else if (\r\n          module_id == 94 &&\r\n          nodes[d][0]?.label == \"اصدار قرار التخصيص\"\r\n        ) {\r\n          label = \"اصدار خطاب كتابة العدل\";\r\n        } else {\r\n          label = nodes[d][0]?.label;\r\n        }\r\n        isSummeryExist = true;\r\n        filteredNodes.push({\r\n          label:\r\n            (module_id == 106 && \"طباعة الخطاب وإرساله إلى كتابة العدل\") ||\r\n            (module_id == 105 && \"اصدار خطاب سريان مفعول الصك\") ||\r\n            (module_id == 111 && \"اعتماد خطاب سريان مفعول الصك\") ||\r\n            label,\r\n          name: `${d}`, //`${d}_${module_id}`,\r\n          option: nodes[d][0],\r\n        });\r\n      }\r\n    });\r\n\r\n    //\r\n    if (\r\n      mainObject?.remarks?.length &&\r\n      mainObject?.remarks?.filter(\r\n        (remark) =>\r\n          (remark?.step?.module_id == module_id &&\r\n            remark?.step?.id == stepId) || // && remark?.comment\r\n          (Object.values(remark)[0]?.step?.module_id == module_id &&\r\n            Object.values(remark)[0]?.step?.id == stepId) //&& Object.values(remark)[0]?.comment\r\n      ).length > 0\r\n    ) {\r\n      mainObject?.remarks\r\n        ?.filter(\r\n          (remark) =>\r\n            (remark?.step?.module_id == module_id &&\r\n              remark?.step?.id == stepId) || //&& remark?.comment\r\n            (Object.values(remark)[0]?.step?.module_id == module_id &&\r\n              Object.values(remark)[0]?.step?.id == stepId) //  && Object.values(remark)[0]?.comment\r\n        )\r\n        ?.forEach((remark, index) => {\r\n          isSummeryExist = true;\r\n          ////\r\n          filteredNodes.push({\r\n            label: \"notes\",\r\n            name: `${label}_remarks_${index}`,\r\n            option: {\r\n              label: \"notes\",\r\n              type: \"remarks\",\r\n              data:\r\n                (remark?.step?.module_id == module_id &&\r\n                  remark?.step?.id == stepId &&\r\n                  remark) ||\r\n                (Object.values(remark)[0]?.step?.module_id == module_id &&\r\n                  Object.values(remark)[0]?.step?.id == stepId &&\r\n                  Object.values(remark)[0]),\r\n            },\r\n          });\r\n        });\r\n    }\r\n\r\n    if (!isSummeryExist) {\r\n      filteredNodes.push({\r\n        label: \"notes\",\r\n        name: `${label}_remarks_${0}`,\r\n        option: {\r\n          isEmpty: true,\r\n          label: \"notes\",\r\n          type: \"remarks\",\r\n          data: {\r\n            comments: \"لا يوجد ملاحظات\",\r\n            step: {\r\n              module_id: module_id,\r\n              id: stepId,\r\n              name: label,\r\n            },\r\n            user: copyUser(this.props),\r\n          },\r\n        },\r\n      });\r\n    }\r\n\r\n    return (\r\n      <>\r\n        {filteredNodes && (\r\n          <div>\r\n            {filteredNodes.map((node, k) => {\r\n              return (\r\n                <Collapse\r\n                  className=\"Collapse\"\r\n                  //                defaultActiveKey={(k == 0 && [\"0\"]) || []}\r\n                  defaultActiveKey={[\r\n                    ...filteredNodes.map((r, i) => i.toString()),\r\n                  ]}\r\n                  key={k}\r\n                >\r\n                  <Panel\r\n                    header={t(node.label)}\r\n                    forceRender={true}\r\n                    style={{ margin: \"5px\" }}\r\n                  >\r\n                    {this.renderView({\r\n                      label: node.label,\r\n                      path: `${node.name}.0`,\r\n                      option: node.option,\r\n                    })}\r\n                  </Panel>\r\n                </Collapse>\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n        {module_id == 134 && this.props?.mainObject?.data_msa7y?.msa7yData?.confirm_revision &&\r\n\r\n          <table className=\"table table-bordered\">\r\n            <tbody>\r\n              <tr>\r\n                <td>تم التاكد من صحة البيانات حسب الصك</td>\r\n                <td>\r\n                  <Checkbox checked={true} disabled={true}>\r\n\r\n                  </Checkbox>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withTranslation(\"labels\")(tabsSummary));\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AASA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AAUA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAKA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA;AAEA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAIA;AAKA;AAAA;AAKA;AAAA;AAAA;AASA;AACA;AAEA;;;;A","sourceRoot":""}