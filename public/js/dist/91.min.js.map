{"version":3,"file":"91.min.js","sources":["webpack:///./src/app/helpers/components/show/fileUploader/ImagePreview.js","webpack:///./src/app/helpers/components/show/fileUploader/simple.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { Modal } from \"antd\";\r\nimport { get, last } from \"lodash\";\r\n// import {host} from 'configFiles/config';\r\nimport ReactImageZoom from \"react-image-zooom\";\r\nimport Img from \"app/helpers/components/image\";\r\nconst isObject = (val) => {\r\n  return val instanceof Object;\r\n};\r\nclass ImagePreview extends Component {\r\n  render() {\r\n    \r\n    const { image, onCancel } = this.props;\r\n    const url = get(image, \"url\", \"\");\r\n    console.log(\"img\", image);\r\n    const type = last(\r\n      (!isObject(url) && url.split(\".\")) || url.data.split(\".\")\r\n    ).toLowerCase();\r\n    //\r\n    return (\r\n      <div className=\"eee\">\r\n        {\r\n          <Modal visible={true} footer={null} onCancel={onCancel}>\r\n            {((type.includes(\"pdf\") ||\r\n              type.includes(\"PDF\") ||\r\n              type.includes(\"dwg\") ||\r\n              type.includes(\"docx\")) && <Img type={type} file={url} />) || (\r\n              <ReactImageZoom src={filesHost + url} />\r\n            )}\r\n          </Modal>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImagePreview;\r\n","import React, { Component } from \"react\";\r\nimport {withTranslation} from \"react-i18next\";\r\nimport { map, last, isArray  } from \"lodash\";\r\nimport { host } from \"config\";\r\nimport ImagePreview from \"./ImagePreview\";\r\nimport Img from \"app/helpers/components/image\";\r\nconst isObject = (val) => {\r\n  return val instanceof Object;\r\n}\r\nclass fileUploaderComponent extends Component {\r\n  state = { error: \"\", disabled: false, deleteVisible: false };\r\n\r\n  renderThumb = (file, key) => {\r\n    \r\n    // console.log(\"file\", file);\r\n    //const type = last((file.data || file).split(\".\")).toLowerCase();\r\n    file = !isObject(file) && file || isArray(file) && file[0].data || !isArray(file) && file.data;\r\n    let splitted= file;\r\n    if(splitted && splitted.toLowerCase().includes(\"gisapi\")) {\r\n      file = `${splitted.toLowerCase().split(\"gisapi\")[1].replace(/\\\\/g, \"/\").replace(\"//\", \"/\")}`\r\n    }\r\n     \r\n    const type = last((file || \"\").split('.')).toLowerCase()\r\n    console.log(\"d\", file);\r\n    return (\r\n      <div onClick={this.handlePreview.bind(this, file, key, type)}>\r\n        <Img type={type} file={file} />\r\n      </div>\r\n    );\r\n  };\r\n  handleCancel() {\r\n    this.setState({ ...this.state, previewVisible: false });\r\n  }\r\n  handlePreview(file, key, type) {\r\n    console.log(\"file\", file);\r\n    \r\n    if ([\"dwg\", \"pdf\", \"doc\", \"docx\"].includes(type)) {\r\n      return window.open(window.filesHost + `/${isObject(file) && file.data || file}`);\r\n    }\r\n    this.setState({\r\n      ...this.state,\r\n      previewImage: { url: file },\r\n      previewVisible: true,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      val,\r\n      field: { multiple = true },\r\n    } = this.props;\r\n    const { previewImage, previewVisible } = this.state;\r\n    const fileList = val && (multiple ? val : [val]);\r\n\r\n    return (\r\n      <div className=\"ss\">\r\n        {map(fileList, this.renderThumb)}\r\n        {previewVisible && (\r\n          <ImagePreview\r\n            image={previewImage}\r\n            onCancel={this.handleCancel.bind(this)}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withTranslation(\"messages\", \"labels\")(fileUploaderComponent);\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AACA;AAAA;AAMA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpCA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAIA;AACA;AAAA;AAKA;AACA;AACA;;;;A","sourceRoot":""}