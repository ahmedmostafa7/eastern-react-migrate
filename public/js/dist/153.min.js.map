{"version":3,"file":"153.min.js","sources":["webpack:///./src/app/components/wizard/components/stepContent/sections/sectionTypes/wizardSummery/components/sak_data.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { host, filesHost } from \"config\";\r\nimport {\r\n  convertToArabic,\r\n  localizeNumber,\r\n  remove_duplicate,\r\n  checkImage,\r\n  reformatWasekaData,\r\n} from \"../../../../../../../inputs/fields/identify/Component/common/common_func\";\r\nimport { Collapse } from \"antd\";\r\nimport { get } from \"lodash\";\r\nconst { Panel } = Collapse;\r\nimport axios from \"axios\";\r\nimport {withTranslation} from \"react-i18next\";\r\nimport { mapStateToProps, mapDispatchToProps } from \"../mapping\";\r\nimport { connect } from \"react-redux\";\r\nclass Waseka extends Component {\r\n  convertEnglishNotReverseToArabic(english) {\r\n    var arabicNumbers = [\"۰\", \"١\", \"٢\", \"٣\", \"٤\", \"٥\", \"٦\", \"٧\", \"٨\", \"٩\"];\r\n    if (english == null || english == \"\") {\r\n      return \"\";\r\n    } else {\r\n      var chars = english.split(\"\");\r\n      for (var i = 0; i < chars.length; i++) {\r\n        if (/\\d/.test(chars[i])) {\r\n          chars[i] = arabicNumbers[chars[i]];\r\n        }\r\n      }\r\n      let revesedChars = chars.join(\"\");\r\n      return revesedChars;\r\n    }\r\n  }\r\n  convertEnglishToArabic(english, notreverse) {\r\n    //\r\n    var arabicNumbers = [\"۰\", \"١\", \"٢\", \"٣\", \"٤\", \"٥\", \"٦\", \"٧\", \"٨\", \"٩\"];\r\n    if (english == null || english == \"\") {\r\n      return \"\";\r\n    } else {\r\n      var chars = english.split(\"\");\r\n      for (var i = 0; i < chars.length; i++) {\r\n        if (/\\d/.test(chars[i])) {\r\n          chars[i] = arabicNumbers[chars[i]];\r\n        }\r\n      }\r\n      let revesedChars = chars.join(\"\");\r\n      if (notreverse) return revesedChars; //.split('/').reverse().join('/')\r\n      return revesedChars.split(\"/\").reverse().join(\"/\");\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { mainObject } = this.props;\r\n    let {\r\n      mainObject: {\r\n        sakData: {\r\n          sakData: { saks },\r\n        },\r\n      },\r\n      currentModule,\r\n    } = this.props;\r\n\r\n    var ownerData =\r\n      mainObject.ownerData &&\r\n      mainObject.ownerData.ownerData.owners[\r\n        Object.keys(mainObject.ownerData.ownerData.owners)[0]\r\n      ];\r\n\r\n    Object.values(saks)?.forEach((waseka) => {\r\n      if (\r\n        waseka.sakValid == undefined ||\r\n        waseka.sakValid == null ||\r\n        waseka.sakValid == \"\"\r\n      ) {\r\n        axios\r\n          .get(window.host + \"/api/contracts/IsVarifiedContract\", {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              Accept: \"application/json\",\r\n              Authorization: `Bearer ${localStorage.token}`,\r\n            },\r\n            params: {\r\n              id:\r\n                ownerData &&\r\n                (ownerData.ssn ||\r\n                  ownerData.commercial_registeration ||\r\n                  ownerData.code_regesteration),\r\n              contractDate: waseka?.date?.split(\"/\")?.join(\"-\"),\r\n              contractNo: waseka?.number,\r\n            },\r\n          })\r\n          .then(\r\n            (res) => {\r\n              waseka.sakValid = res.data;\r\n              this.setState({});\r\n            },\r\n            (res) => {\r\n              waseka.sakValid = \"لم يتم التأكد من سريان الصك\";\r\n              this.setState({});\r\n            }\r\n          );\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let appId = localStorage.getItem(\"appId\") == \"16\" ? true : false;\r\n    const {\r\n      mainObject: {\r\n        sakData: {\r\n          sakData: { saks },\r\n        },\r\n      },\r\n      currentModule,\r\n    } = this.props;\r\n\r\n    let waseka_table = (saks && Object.values(saks)) || [];\r\n\r\n    return (\r\n      <>\r\n        {waseka_table && (\r\n          <div>\r\n            {waseka_table.map((d, k) => {\r\n              return (\r\n                <Collapse\r\n                  className=\"Collapse\"\r\n                  defaultActiveKey={[\r\n                    \"0\",\r\n                    \"1\",\r\n                    \"2\",\r\n                    \"3\",\r\n                    \"4\",\r\n                    \"5\",\r\n                    \"6\",\r\n                    \"7\",\r\n                    \"8\",\r\n                    \"9\",\r\n                  ]}\r\n                  key={k}\r\n                >\r\n                  <Panel\r\n                    header={`صك ${k + 1}`}\r\n                    forceRender={true}\r\n                    style={{ margin: \"5px\" }}\r\n                  >\r\n                    <table className=\"table table-bordered\">\r\n                      <tbody>\r\n                        {d.lands && (<tr>\r\n                          <td> الارض المختارة</td>\r\n                          <td>{convertToArabic(d.lands)}</td>\r\n                        </tr>)}\r\n                        <tr>\r\n                          <td>رقم وثيقة الملكية </td>\r\n                          <td>{convertToArabic(d.number)}</td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>تاريخ وثيقة الملكية</td>\r\n                          <td style={{ direction: \"ltr\" }}>\r\n                            {convertToArabic(d.date)}\r\n                          </td>\r\n                        </tr>\r\n                        {d.issuer && (\r\n                          <tr>\r\n                            <td>جهة اصدار وثيقة الملكية</td>\r\n                            <td>{d.issuer}</td>\r\n                          </tr>\r\n                        )}\r\n                        <tr>\r\n                          <td>المرفقات</td>\r\n                          <td>\r\n                            {/* <a href={`${filesHost}/${d.image_waseka}`} download>\r\n                              <img\r\n                                src={`${filesHost}/${d.image_waseka}`}\r\n                                width=\"100px\"\r\n                              />\r\n                            </a> */}\r\n                            {checkImage(this.props, d.image, {\r\n                              width: \"100px\",\r\n                            })}\r\n                          </td>\r\n                        </tr>\r\n                        {d.sakValid && (\r\n                          <tr>\r\n                            <td>التأكد من سريان مفعول الصك</td>\r\n                            <td>{d.sakValid}</td>\r\n                          </tr>\r\n                        )}\r\n                      </tbody>\r\n                    </table>\r\n                  </Panel>\r\n                </Collapse>\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withTranslation(\"labels\")(Waseka));\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AASA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAMA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAKA;AAEA;AACA;AAYA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAYA;AAAA;AAAA;AAAA;AAoBA;AACA;AAcA;AAKA;AACA;AAEA;;;;A","sourceRoot":""}