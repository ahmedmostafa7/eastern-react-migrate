{"version":3,"file":"63.min.js","sources":["webpack:///./src/app/components/inputs/fields/customText/index.js","webpack:///./src/app/components/inputs/fields/customText/mapping.js"],"sourcesContent":["import React from \"react\";\r\nimport { Input } from \"antd\";\r\nimport mainInput from \"app/helpers/main/input\";\r\nimport {withTranslation} from \"react-i18next\";\r\nimport { mapStateToProps, mapDispatchToProps } from './mapping';\r\nimport {connect} from \"react-redux\"\r\nimport { get, isEqual, omit, map , isFunction } from 'lodash';\r\n\r\nclass customTextComp extends mainInput {\r\n  constructor(props)\r\n  {\r\n    \r\n    super(props)\r\n    this.state = {value: isFunction(props.getValue) ? props.getValue() : ''};\r\n  }\r\n\r\n  changeInput = (e) => {\r\n      \r\n    const {\r\n        textInputChanged = () => {},\r\n        input\r\n    } = this.props;\r\n    this.state['value'] = e.target.value;\r\n    input.onChange(e.target.value);\r\n    \r\n    return textInputChanged(e.target.value, this.props, e);\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    \r\n    return (!isEqual(nextProps.data, this.props.data)) ||\r\n        (!isEqual(nextProps.input.value, this.props.input.value)) ||\r\n        (!isEqual(nextProps.lang, this.props.lang)) || \r\n        (!isEqual(nextProps.forceUpdate,this.props.forceUpdate));\r\n  }\r\n  // onBlur = (e) => {\r\n  //   const {\r\n  //     input,\r\n  //     textInputChanged,\r\n  //     disabled\r\n  // } = this.props;\r\n  //   e.target.disabled = isFunction(disabled) ?  (disabled(input.value) != \"\" && disabled(input.value) != null && disabled(input.value) != undefined) : disabled;\r\n  // }\r\n  render() {\r\n    const {\r\n      disabled,\r\n      textAfter,\r\n      className,\r\n      input: {value},\r\n      label,\r\n      type,\r\n      placeholder,\r\n      style,\r\n      defaultValue,\r\n      t,\r\n      textInputChanged,\r\n      defaultDisabled,\r\n      values\r\n    } = this.props;\r\n    console.log(values);\r\n    \r\n    return (\r\n      <>\r\n        {textAfter ? (\r\n          <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n            <Input\r\n              disabled={isFunction(disabled) ?  disabled(values) : disabled}\r\n              {...{ className }}\r\n              value={this.state['value'] || value}\r\n              onChange={this.changeInput}\r\n              //{...input}\r\n              {...{ type }}\r\n              placeholder={t(placeholder ? placeholder : label)}\r\n              {...{ style }}\r\n            />\r\n            <span style={{ fontSize: \"18px\", marginRight: \"10px\" }}>\r\n              {textAfter}\r\n            </span>\r\n          </div>\r\n        ) : (\r\n          <Input\r\n          disabled={isFunction(disabled) ?  disabled(values) : disabled}\r\n            {...{ className }}\r\n            value={this.state['value'] || value}\r\n            onChange={this.changeInput}\r\n            {...defaultValue}\r\n            {...{ type }}\r\n            placeholder={t(placeholder ? placeholder : label)}\r\n            {...{ style }}\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(customTextComp);\r\n","import { get } from 'lodash';\r\nimport {formValueSelector} from 'redux-form'\r\nexport const mapStateToProps = ({ selectors = {}, mainApp, mapViewer, ...state }, { moduleName, path, value_key, ...props }) => {\r\n    return ({\r\n    })\r\n}\r\n\r\nexport const mapDispatchToProps = (dispatch, { moduleName }) => {\r\n    return {\r\n        getValues(name='stepForm'){return formValueSelector('name')},\r\n        \r\n        \r\n    }\r\n}\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AAGA;AACA;AAGA;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAbA;AAAA;AAAA;AACA;AAcA;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAKA;AACA;AAEA;;;;;;;;;;;;AC/FA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAGA;AACA;;;;A","sourceRoot":""}