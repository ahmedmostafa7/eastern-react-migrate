{"version":3,"file":"57.min.js","sources":["webpack:///./src/app/components/inputs/fields/list/tableList/actions/common.js","webpack:///./src/app/components/inputs/fields/list/tableList/actions/index.js","webpack:///./src/app/components/inputs/fields/list/tableList/index.js"],"sourcesContent":["import React from \"react\";\r\nimport { Tooltip, Popconfirm, Divider } from \"antd\";\r\n\r\n// export const add = ({ t, ...props }) => (\r\n//   <span>\r\n//     <Tooltip placement=\"bottom\" title={t(`actions:${props.name}`)}>\r\n//       <a onClick={props.clickAction}>\r\n//         <span>\r\n//           <i className={props.icon} aria-hidden=\"true\"></i>\r\n//         </span>\r\n//       </a>\r\n//     </Tooltip>\r\n//     <Divider type=\"vertical\" />\r\n//   </span>\r\n// );\r\nexport const mainStyle = ({ t, ...props }) => (\r\n  <span>\r\n    <Tooltip placement=\"bottom\" title={t(`actions:${props.name}`)}>\r\n      <a onClick={props.clickAction}>\r\n        <span>\r\n          <i className={props.icon} aria-hidden=\"true\"></i>\r\n        </span>\r\n      </a>\r\n    </Tooltip>\r\n    <Divider type=\"vertical\" />\r\n  </span>\r\n);\r\n\r\nexport const confirmAction = ({ t, ...props }) => (\r\n  <Popconfirm\r\n    title={t(`actions:${props.msg}`)}\r\n    placement=\"top\"\r\n    onConfirm={props.clickAction}\r\n    okText={t(\"actions:Yes\")}\r\n    cancelText={t(\"actions:No\")}\r\n  >\r\n    <Tooltip placement=\"bottom\" title={t(`actions:${props.name}`)}>\r\n      <a>\r\n        <span>\r\n          <i className={props.icon} aria-hidden=\"true\"></i>\r\n        </span>\r\n      </a>\r\n    </Tooltip>\r\n    <Divider type=\"vertical\" />\r\n  </Popconfirm>\r\n);\r\n","export * from './common'","import React from \"react\";\r\nimport { last } from \"lodash\";\r\nimport {withTranslation} from \"react-i18next\";\r\nimport { Button, Table } from \"antd\";\r\nimport * as ActionsComponents from \"./actions\";\r\nimport { list, connectList } from \"../\";\r\nimport { apply_permissions } from \"app/helpers/functions\";\r\n\r\nclass tableListComponent extends list {\r\n  constructor(props) {\r\n    super(props);\r\n    this.ActionsComponents = ActionsComponents;\r\n  }\r\n  componentDidMount() {\r\n    this.listDiv = last(document.querySelectorAll(\".ant-table-body\"));\r\n    super.componentDidMount();\r\n    const { init } = this.props;\r\n    if (init) init(this.props);\r\n  }\r\n  fixedData(props) {\r\n    console.log(props);\r\n  }\r\n  render() {\r\n    const {\r\n      className = \"\",\r\n      fixedData,\r\n      input: { value, ...input },\r\n      footer,\r\n\r\n      plan_approval,\r\n      data,\r\n      ux_pattern,\r\n      type,\r\n      class: rowClass = () => {},\r\n      t,\r\n      value_key,\r\n      height = 600,\r\n    } = this.props;\r\n    const { index } = this.state;\r\n    // let newData;\r\n    // if (plan_approval) {\r\n    //   let constdata = {\r\n    //     date_att: \"1442/09/09\",\r\n    //     no_att: \"dfg\",\r\n    //     type_att: \"gv\",\r\n    //   };\r\n    //   newData = [...data, constdata];\r\n    // }\r\n\r\n    console.log(\"TableData\", fixedData, this.props);\r\n    return (\r\n      <div style={{ display: \"grid\", gridGap: \"10px\", margin: \"10px\" }}>\r\n        {index == -1 &&\r\n          this.extraActions\r\n            .filter((d) =>\r\n              apply_permissions(value, d, \"permissions\", {\r\n                list: value,\r\n                itemIndex: index,\r\n              })\r\n            )\r\n            .map((action, key) => (\r\n              <Button className=\"add-button\" key={key} onClick={action.action}>\r\n                {t(`actions:${action.name}`)}\r\n              </Button>\r\n            ))}\r\n        <Table\r\n          id=\"notesTable1\"\r\n          bordered\r\n          className={className}\r\n          locale={{ emptyText: t(\"messages:No data\") }}\r\n          {...input}\r\n          type={type}\r\n          columns={this.columns}\r\n          footer={footer ? this.setSumFooter.bind(this) : null}\r\n          scroll={ux_pattern == \"infiniteScrolling\" ? { y: height } : undefined}\r\n          dataSource={data || []}\r\n          rowKey={value_key}\r\n          pagination={this.paginationConfig || false}\r\n          rowClassName={rowClass}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connectList(\r\n  withTranslation(\"actions\", \"messages\")(tableListComponent)\r\n);\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAIA;AAAA;AAIA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAGA;AAAA;AAAA;AAIA;AAAA;;;;;;;;;;;;AC3CA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAIA;AACA;AAEA;;;;A","sourceRoot":""}