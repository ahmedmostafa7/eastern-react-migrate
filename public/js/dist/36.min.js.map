{"version":3,"file":"36.min.js","sources":["webpack:///./src/app/components/wizard/components/stepContent/sections/sectionTypes/wizardSummery/components/lagna_notes.js","webpack:///./src/app/helpers/components/show/checkbox/index.js","webpack:///./src/app/helpers/components/show/index.js","webpack:///./src/app/helpers/components/show/select/index.js","webpack:///./src/app/helpers/components/show/show.js","webpack:///./src/app/helpers/components/show/types.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { get, map } from \"lodash\";\r\nimport ShowField from \"app/helpers/components/show\";\r\nimport lagna_notes from \"../../../../../../../../../app/components/wizard/modulesObjects/plan_approval/steps/going_survey_review_approval_details_module/lagna_notes.js\";\r\nimport { convertToArabic } from \"../../../../../../../inputs/fields/identify/Component/common/common_func.js\";\r\n\r\nexport default class lagnaNotes extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  renderInfo = (data, field, key) => {\r\n    delete field?.fields?.actions;\r\n    if (field.field != \"button\") {\r\n      if (field.field == \"list\") {\r\n        field.fields = {\r\n          remark: field.fields.remark,\r\n          checked: field.fields.checked,\r\n        };\r\n\r\n        let remarks = get(data, key, []).map((remark) => ({\r\n          ...remark,\r\n          remark: convertToArabic(remark.remark),\r\n        }));\r\n        return <ShowField field={field} val={remarks} key={key} />;\r\n      }\r\n      if (field.field == \"text\") {\r\n        return (\r\n          <ShowField\r\n            field={field}\r\n            val={convertToArabic(get(data, key))}\r\n            key={key}\r\n          />\r\n        );\r\n      }\r\n      return <ShowField field={field} val={get(data, key)} key={key} />;\r\n    }\r\n  };\r\n  render() {\r\n    const { lagna_remarks } = this.props.mainObject.lagna_notes;\r\n\r\n    return (\r\n      <>\r\n        {map(\r\n          lagna_notes.sections.lagna_remarks.fields,\r\n          this.renderInfo.bind(this, lagna_remarks)\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import {lazy} from 'react'\r\nexport const boolean = lazy(()=>import('./single'));\r\n// export const multiChecks = lazy(()=>import('./multi'));\r\n// export const op = lazy(()=>import('./op'));","import React, { Component } from \"react\";\r\nimport {withTranslation} from \"react-i18next\";\r\nimport applyFilters from \"main_helpers/functions/filters\";\r\nimport Show from \"./show\";\r\nclass ShowField extends Component {\r\n  componentDidMount() {\r\n    const { values } = this.props;\r\n    // console.log(values[\"image\"].includes(\"gisapi\"))\r\n    // values.filter()\r\n  }\r\n  render() {\r\n    const { field, t, values, val } = this.props;\r\n    let label = field.label;\r\n    console.log(\"d\", this.props);\r\n    if (!val) {\r\n      // values[\"image\"]=values[\"image\"].replace(\"gisapi\",\"\")\r\n    }\r\n    if (field.label_fun && !field.label) {\r\n      label = field.label_fun(this.props);\r\n    }\r\n\r\n    // console.log(this.props.values[\"image\"]);\r\n    // console.log(FComponent, field.field, field);\r\n    label = field.label_state\r\n      ? applyFilters({\r\n          path: field.label_state,\r\n        })\r\n      : label;\r\n\r\n    // if (field.init_data) {\r\n    //   field.init_data(this.props);\r\n    // }\r\n\r\n    return (\r\n      <div className=\"uu\">\r\n        {(!field.hideLabel && (\r\n          <div className=\"table-div\">\r\n            <div>\r\n              <label style={{ whiteSpace: \"nowrap\" }}>{t(label)}</label>\r\n            </div>\r\n\r\n            <div>\r\n              <Show {...this.props} />\r\n            </div>\r\n          </div>\r\n        )) || (\r\n          <div>\r\n            <Show {...this.props} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTranslation(\"labels\")(ShowField);\r\n","import {lazy} from 'react';\r\nexport const multiSelect = lazy(()=>import('./multiSelect'));\r\nexport const select = lazy(()=>import('./main'));\r\n","import React, { Component, Suspense } from \"react\";\r\nimport * as Fields from \"./types\";\r\nimport { get } from \"lodash\";\r\n\r\nexport default class ShowField extends Component {\r\n  render() {\r\n    const { field } = this.props;\r\n    const FComponent = get(Fields, (field.field || field), Fields.label);\r\n    console.log(this.props, FComponent);\r\n    return (\r\n      <Suspense fallback={<></>}>\r\n        <FComponent {...this.props} ShowField={ShowField} />\r\n      </Suspense>\r\n    );\r\n  }\r\n}\r\n","import { lazy } from \"react\";\r\nexport const fileUploader = lazy(() => import(\"./fileUploader\"));\r\nexport const simpleUploader = lazy(() => import(\"./fileUploader/simple\"));\r\n// export const hijriDatePicker = lazy(()=>import('./hijriDatePicker'));\r\nexport const radio = lazy(() => import(\"./radio\"));\r\nexport const singleSwitch = lazy(() => import(\"./switch\"));\r\n// export const timePicker = lazy(()=>import('./timepicker'));\r\n// export const datePicker = lazy(()=>import('./datePicker'));\r\n// export const slider = lazy(()=>import('./slider'));\r\n// export const mentions = lazy(()=>import('./mention'));\r\nexport const label = lazy(() => import(\"./label\"));\r\n// export const autoValue = lazy(()=>import('./autoValue'));\r\n// export const address = lazy(()=>import('./address'));\r\n// export const tableList = lazy(()=>import('./list/tableList'));\r\nexport const list = lazy(() => import(\"./list/table\"));\r\nexport const simpleModal = lazy(() => import(\"./simpleModal\"));\r\nexport const primaryPricing = lazy(() => import(\"../../../../app/components/inputs/fields/property_removal_primarypricing\"));\r\nexport const propertyRemovalIdentify = lazy(() => import ('../../../../app/components/inputs/fields/identify/Component/propertyRemovalIdentifyComponnent'));\r\n// export const Collapse = lazy(()=>import('./list/collapse'));\r\n// export const cardList = lazy(()=>import('./list/cardList'));\r\n// export const multiTableList = lazy(()=>import('./list/multiTableList'));\r\n// export const gistTable = lazy(()=>import('./list/tableAdd/gisTableAdd'));\r\n// export const gistTable2 = lazy(()=>import('./list/hob'));\r\n// export const textArea = lazy(()=>import('./textArea'));\r\n// export const table = lazy(()=>import('./table'));\r\n export const button = lazy(()=>import('../../../../app/components/inputs/fields/button'));\r\n// export const AdvancedTable = lazy(()=>import('./advanced_table'))\r\n// export const identifyWizard = lazy(()=>import('./identifyWizard'))\r\n// export * from './identify';\r\n// export * from './identify'\r\nexport * from \"./select\";\r\nexport * from \"./checkbox\";\r\n// export * from './calculator'\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AA3BA;AA4BA;AACA;AAAA;AAAA;AAEA;AAQA;AACA;;;;;;;;;;;;ACjDA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;ACHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAEA;AAAA;AAAA;AAAA;AAcA;AACA;AAEA;;;;;;;;;;;;ACvDA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAGA;AACA;;;;;;;;;;;;ACfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}