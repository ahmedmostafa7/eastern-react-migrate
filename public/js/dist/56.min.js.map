{"version":3,"file":"56.min.js","sources":["webpack:///./src/app/components/inputs/fields/list/cardList/actions/common.js","webpack:///./src/app/components/inputs/fields/list/cardList/actions/index.js","webpack:///./src/app/components/inputs/fields/list/cardList/index.js"],"sourcesContent":["import React from 'react';\r\nimport { Popconfirm } from 'antd';\r\nexport const mainStyle = ({ t, ...props }) => (\r\n    <a onClick={props.clickAction}>\r\n        <span className=\"icon-color remark-icons\" style={{fontSize:'17px'}}><i className={props.icon} aria-hidden=\"true\"></i>\r\n        </span>\r\n    </a>)\r\n\r\nexport const confirmAction = ({ t, ...props }) => (\r\n    <Popconfirm title={t(`actions:${props.msg}`)} placement='bottom' onConfirm={props.clickAction} okText={t(\"actions:Submit\")} cancelText={t(\"actions:Cancel\")}>\r\n        <a>\r\n            <span className=\"icon-color remark-icons\" style={{fontSize:'17px'}}><i className={props.icon} aria-hidden=\"true\"></i></span>\r\n        </a>\r\n    </Popconfirm>)","export * from './common'","import React from 'react'\r\nimport { get, reject, find } from 'lodash';\r\nimport {withTranslation} from 'react-i18next';\r\nimport { Card, Button, Pagination } from 'antd';\r\nimport * as ActionsComponents from './actions';\r\nimport { connectList, list } from '../';\r\nimport {apply_permissions} from 'app/helpers/functions';\r\nclass cardListComponent extends list {\r\n    constructor(props) {\r\n        super(props);\r\n        this.ActionsComponents = ActionsComponents;\r\n    }\r\n    componentDidMount() {\r\n        this.listDiv = document.querySelector('.cardList');\r\n        super.componentDidMount();\r\n    }\r\n    render() {\r\n        const { input: { value }, data= [], title_key, t, value_key } = this.props;\r\n        const { index } = this.state;\r\n        return (\r\n            <div>\r\n                {index == -1 && this.extraActions.filter(d => apply_permissions(value, d, \"permissions\", { list: value, itemIndex: index })).map((action, key) => (\r\n                    <Button className=\"add-button\" key={key} onClick={action.action}>{t(`actions:${action.name}`)}</Button>\r\n                ))}\r\n                <div className='cardList' style={{  overflowY: 'scroll' }}>\r\n                    {data.length ? data.map((row, dataIndex) =>\r\n                        <Card\r\n                            key={get(row, value_key)}\r\n                            title={get(row, title_key)}\r\n                        >\r\n                            {reject(this.columns, c => c.key === 'actions').map((column, columnIndex) =>\r\n                                <div key={columnIndex}>\r\n                                    {column.render(get(row, column.key), row, dataIndex)}\r\n                                </div>)}\r\n                            <div className=\"ic\" style={{display: 'grid',gridTemplateColumns:'40px 40px',justifyItems:'center',justifyContent:'center'}}>{find(this.columns, c => c  .key === 'actions').render(null, row, dataIndex)}</div>\r\n                        </Card>\r\n                    ) :\r\n                        <Card>\r\n                            {t('messages:No data')}\r\n                        </Card>\r\n                    }\r\n                </div>\r\n                {this.paginationConfig && <Pagination  {...this.paginationConfig} />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connectList(withTranslation('actions','messages')(cardListComponent))\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;ACXA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAGA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AAEA;;;;A","sourceRoot":""}