{"version":3,"file":"77.min.js","sources":["webpack:///./src/app/components/inputs/fields/inputNumber.js","webpack:///./src/app/components/inputs/mapping.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport {withTranslation} from \"react-i18next\";\r\nimport { connect } from \"react-redux\";\r\nimport { Select, Button, Form, message } from \"antd\";\r\nimport { get, isEqual, omit, map, isFunction } from \"lodash\";\r\nimport { mapStateToProps, mapDispatchToProps } from \"../mapping\";\r\nimport { withRouter } from \"react-router\";\r\nimport mainInput from \"app/helpers/main/input\";\r\nimport { InputNumber } from \"antd\";\r\n\r\nexport class inputNumberComp extends mainInput {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    if (this.props?.hasAU) {\r\n      const {\r\n        input: { value, onChange },\r\n      } = props;\r\n\r\n      let isValueString = typeof value == \"string\";\r\n      this.state = {\r\n        inputValue:\r\n          (value && typeof value == \"object\" && value?.inputValue) ||\r\n          (value != undefined && typeof value == \"string\" && value) ||\r\n          \"\",\r\n        extValue:\r\n          (value && typeof value == \"object\" && value?.extValue) ||\r\n          this.props?.extInitialValue,\r\n      };\r\n\r\n      if (isValueString) {\r\n        onChange(this.state);\r\n      }\r\n    }\r\n\r\n    if (props.init_data) {\r\n      props.init_data(props);\r\n    }\r\n  }\r\n\r\n  // shouldComponentUpdate(nextProps, nextState) {\r\n  //   return (\r\n  //     !isEqual(nextProps.data, this.props.data) ||\r\n  //     !isEqual(nextProps.input.value, this.props.input.value) ||\r\n  //     !isEqual(nextProps.lang, this.props.lang) ||\r\n  //     !isEqual(nextProps.forceUpdate, this.props.forceUpdate)\r\n  //   );\r\n  // }\r\n\r\n  render() {\r\n    let {\r\n      className,\r\n      input,\r\n      label,\r\n      type,\r\n      t,\r\n      textAfter,\r\n      hasAU,\r\n      data,\r\n      disabled,\r\n      extDisabled,\r\n      title,\r\n      values,\r\n      placeholder\r\n    } = this.props;\r\n    disabled = isFunction(disabled) ? disabled(values, this.props) : disabled;\r\n    return (\r\n      <>\r\n        {(textAfter && (\r\n          <div>\r\n            <b>({textAfter})</b>\r\n            <InputNumber\r\n              {...{ className }}\r\n              {...input}\r\n              disabled={disabled}\r\n              type={\"number\"}\r\n              placeholder={t(label || placeholder)}\r\n              title={title}\r\n              onChange={(val) => {\r\n                if (this.props.onClick) {\r\n                  this.props.onClick(this.props, val);\r\n                } else {\r\n                  this.props.input.onChange(val);\r\n                }\r\n              }}\r\n            />\r\n          </div>\r\n        )) ||\r\n          (hasAU && (\r\n            <>\r\n              <InputNumber\r\n                title={title}\r\n                {...{ className }}\r\n                disabled={disabled}\r\n                type={\"number\"}\r\n                placeholder={t(label || placeholder)}\r\n                onChange={(val) => {\r\n                  this.setState({ inputValue: val }, () => {\r\n                    this.props.input.onChange({\r\n                      inputValue: val,\r\n                      extValue: this.state[\"extValue\"],\r\n                    });\r\n                  });\r\n                }}\r\n                value={this.state[\"inputValue\"]}\r\n              />\r\n              {\r\n                <Select\r\n                  getPopupContainer={(trigger) => trigger.parentNode}\r\n                  autoFocus\r\n                  onChange={(val) => {\r\n                    this.setState({ extValue: val }, () => {\r\n                      this.props.input.onChange({\r\n                        inputValue: this.state[\"inputValue\"],\r\n                        extValue: val,\r\n                      });\r\n                    });\r\n                  }}\r\n                  value={this.state[\"extValue\"]}\r\n                  disabled={extDisabled}\r\n                >\r\n                  <Option disabled=\"disabled\" value={null}>\r\n                    {\"من فضلك ادخل وحدة الطول\"}\r\n                  </Option>\r\n                  {data.map((e) => (\r\n                    <Option key={e.value} value={e.value}>\r\n                      {e.label}{\" \"}\r\n                    </Option>\r\n                  ))}\r\n                </Select>\r\n              }\r\n            </>\r\n          )) || (\r\n            <>\r\n              <InputNumber\r\n                title={title}\r\n                {...{ className }}\r\n                {...input}\r\n                disabled={disabled}\r\n                type={\"number\"}\r\n                placeholder={t(label || placeholder)}\r\n                onChange={(val) => {\r\n                  if (this.props.onClick) {\r\n                    this.props.onClick(this.props, val);\r\n                  } else {\r\n                    this.props.input.onChange(val);\r\n                  }\r\n\r\n                }}\r\n              />\r\n            </>\r\n          )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withTranslation(\"labels\")(inputNumberComp));\r\n","import { get } from \"lodash\";\r\nimport { formValueSelector } from \"redux-form\";\r\nimport { copyUser } from \"./fields/identify/Component/common/common_func\";\r\nexport const mapStateToProps = (\r\n  {\r\n    wizard: {\r\n      currentStep,\r\n      wizardSettings,\r\n      steps,\r\n      mainObject,\r\n      comments,\r\n      currentModule,\r\n    },\r\n    selectors = {},\r\n    mainApp,\r\n    user,\r\n    mapViewer,\r\n    ...state\r\n  },\r\n  { moduleName, path, value_key, ...props }\r\n) => {\r\n  return {\r\n    data: props.data || get(state, path),\r\n    lang: mainApp.language,\r\n    selectors,\r\n    apps: mainApp.apps,\r\n    info: get(mapViewer, \"info.info\", {}),\r\n    ...(selectors[moduleName] || {}),\r\n    value_key: get(selectors[moduleName], \"value_key\", value_key),\r\n    currentStep,\r\n    steps,\r\n    mainObject,\r\n    currentModule,\r\n    user: get(user, \"user\", {}),\r\n    comments,\r\n    wizardSettings,\r\n    //allNotes,\r\n    mainApp,\r\n    record: get(currentModule, \"record\") || [],\r\n  };\r\n};\r\n\r\nexport const mapDispatchToProps = (dispatch, { moduleName }) => {\r\n  return {\r\n    getValues(name = \"stepForm\") {\r\n      return formValueSelector(\"name\");\r\n    },\r\n    setSelector: (moduleName, data) => {\r\n      dispatch({\r\n        type: \"setSelectors\",\r\n        path: `${moduleName}`,\r\n        data,\r\n      });\r\n    },\r\n    setValueLabelKeys: (label_key, value_key) => {\r\n      dispatch({\r\n        type: \"setSelectors\",\r\n        path: `${moduleName}.label_key`,\r\n        data: label_key,\r\n      });\r\n      dispatch({\r\n        type: \"setSelectors\",\r\n        path: `${moduleName}.value_key`,\r\n        data: value_key,\r\n      });\r\n    },\r\n    setData: (data) => {\r\n      dispatch({\r\n        type: \"setSelectors\",\r\n        path: `${moduleName}.data`,\r\n        data,\r\n      });\r\n    },\r\n    addToData: (data, index, operation) => {\r\n      dispatch({\r\n        type: \"insertInArraySelectors\",\r\n        path: `${moduleName}.data`,\r\n        operation,\r\n        index,\r\n        data,\r\n      });\r\n    },\r\n    setNextUrl: (nextUrl) => {\r\n      dispatch({\r\n        type: \"setSelectors\",\r\n        path: `${moduleName}.links.nextLink`,\r\n        data: nextUrl,\r\n      });\r\n    },\r\n    addNewSelector: (moduleName, data) => {\r\n      dispatch({\r\n        type: \"setSelectors\",\r\n        path: moduleName,\r\n        data,\r\n      });\r\n    },\r\n    removeSelector: (moduleName) => {\r\n      dispatch({\r\n        type: \"removeSelectors\",\r\n        path: moduleName,\r\n      });\r\n    },\r\n    setCurrentModule: (data) => {\r\n      dispatch({\r\n        type: \"setWizard\",\r\n        path: \"currentModule\",\r\n        data,\r\n      });\r\n    },\r\n    removeMainObject: () => {\r\n      dispatch({\r\n        type: \"removeWizard\",\r\n        path: \"mainObject\",\r\n      });\r\n      dispatch({\r\n        type: \"removeWizard\",\r\n        path: \"currentStep\",\r\n      });\r\n      dispatch({\r\n        type: \"removeWizard\",\r\n        path: \"comments\",\r\n      });\r\n      dispatch({\r\n        type: \"removeWizard\",\r\n        path: \"allNotes\",\r\n      });\r\n    },\r\n    setMainObject: (data, step, user) => {\r\n      dispatch({\r\n        type: \"setWizard\",\r\n        path: `mainObject.${step}`,\r\n        data,\r\n      });\r\n\r\n      if (user) {\r\n        // user = { ...user, currentDate: moment().format(\"iYYYY/iM/iD\") };\r\n\r\n        dispatch({\r\n          type: \"setWizard\",\r\n          path: `mainObject.${step}.user`,\r\n          data: copyUser({ user }),\r\n        });\r\n      }\r\n    },\r\n  };\r\n};\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AAAA;AACA;AAEA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAIA;AAGA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAIA;AAAA;AAAA;AAUA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAMA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;AC5JA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}